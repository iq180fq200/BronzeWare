{"ast":null,"code":"/*\n * The Original Code is Mozilla Universal charset detector code.\n *\n * The Initial Developer of the Original Code is\n * Netscape Communications Corporation.\n * Portions created by the Initial Developer are Copyright (C) 2001\n * the Initial Developer. All Rights Reserved.\n *\n * Contributor(s):\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\n *   Mark Pilgrim - port to Python\n *   Shy Shalom - original C code\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301  USA\n */\nvar SingleByteCharSetProber = require('./sbcharsetprober');\n\nvar CharSetGroupProber = require('./charsetgroupprober');\n\nvar Win1255HebrewModel = require('./langhebrewmodel').Win1255HebrewModel;\n\nvar HebrewProber = require('./hebrewprober');\n\nvar cyrillicModels = require('./langcyrillicmodel');\n\nvar greekModels = require('./langgreekmodel');\n\nvar TIS620ThaiModel = require('./langthaimodel').TIS620ThaiModel;\n\nvar hungarianModels = require('./langhungarianmodel');\n\nvar bulgarianModels = require('./langbulgarianmodel');\n\nfunction SBCSGroupProber() {\n  CharSetGroupProber.apply(this);\n  var self = this;\n\n  function init() {\n    self._mProbers = [new SingleByteCharSetProber(cyrillicModels.Win1251CyrillicModel), new SingleByteCharSetProber(cyrillicModels.Koi8rModel), new SingleByteCharSetProber(cyrillicModels.Latin5CyrillicModel), new SingleByteCharSetProber(cyrillicModels.MacCyrillicModel), new SingleByteCharSetProber(cyrillicModels.Ibm866Model), new SingleByteCharSetProber(cyrillicModels.Ibm855Model), new SingleByteCharSetProber(greekModels.Latin7GreekModel), new SingleByteCharSetProber(greekModels.Win1253GreekModel), new SingleByteCharSetProber(bulgarianModels.Latin5BulgarianModel), new SingleByteCharSetProber(bulgarianModels.Win1251BulgarianModel), new SingleByteCharSetProber(hungarianModels.Latin2HungarianModel), new SingleByteCharSetProber(hungarianModels.Win1250HungarianModel), new SingleByteCharSetProber(TIS620ThaiModel)];\n    var hebrewProber = new HebrewProber();\n    var logicalHebrewProber = new SingleByteCharSetProber(Win1255HebrewModel, false, hebrewProber);\n    var visualHebrewProber = new SingleByteCharSetProber(Win1255HebrewModel, true, hebrewProber);\n    hebrewProber.setModelProbers(logicalHebrewProber, visualHebrewProber);\n\n    self._mProbers.push(hebrewProber, logicalHebrewProber, visualHebrewProber);\n\n    self.reset();\n  }\n\n  init();\n}\n\nSBCSGroupProber.prototype = new CharSetGroupProber();\nmodule.exports = SBCSGroupProber;","map":{"version":3,"sources":["D:/test/frontend/node_modules/jschardet/src/sbcsgroupprober.js"],"names":["SingleByteCharSetProber","require","CharSetGroupProber","Win1255HebrewModel","HebrewProber","cyrillicModels","greekModels","TIS620ThaiModel","hungarianModels","bulgarianModels","SBCSGroupProber","apply","self","init","_mProbers","Win1251CyrillicModel","Koi8rModel","Latin5CyrillicModel","MacCyrillicModel","Ibm866Model","Ibm855Model","Latin7GreekModel","Win1253GreekModel","Latin5BulgarianModel","Win1251BulgarianModel","Latin2HungarianModel","Win1250HungarianModel","hebrewProber","logicalHebrewProber","visualHebrewProber","setModelProbers","push","reset","prototype","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAIA,uBAAuB,GAAGC,OAAO,CAAC,mBAAD,CAArC;;AACA,IAAIC,kBAAkB,GAAGD,OAAO,CAAC,sBAAD,CAAhC;;AACA,IAAIE,kBAAkB,GAAGF,OAAO,CAAC,mBAAD,CAAP,CAA6BE,kBAAtD;;AACA,IAAIC,YAAY,GAAGH,OAAO,CAAC,gBAAD,CAA1B;;AACA,IAAII,cAAc,GAAGJ,OAAO,CAAC,qBAAD,CAA5B;;AACA,IAAIK,WAAW,GAAGL,OAAO,CAAC,kBAAD,CAAzB;;AACA,IAAIM,eAAe,GAAGN,OAAO,CAAC,iBAAD,CAAP,CAA2BM,eAAjD;;AACA,IAAIC,eAAe,GAAGP,OAAO,CAAC,sBAAD,CAA7B;;AACA,IAAIQ,eAAe,GAAGR,OAAO,CAAC,sBAAD,CAA7B;;AAEA,SAASS,eAAT,GAA2B;AACvBR,EAAAA,kBAAkB,CAACS,KAAnB,CAAyB,IAAzB;AAEA,MAAIC,IAAI,GAAG,IAAX;;AAEA,WAASC,IAAT,GAAgB;AACZD,IAAAA,IAAI,CAACE,SAAL,GAAiB,CACb,IAAId,uBAAJ,CAA4BK,cAAc,CAACU,oBAA3C,CADa,EAEb,IAAIf,uBAAJ,CAA4BK,cAAc,CAACW,UAA3C,CAFa,EAGb,IAAIhB,uBAAJ,CAA4BK,cAAc,CAACY,mBAA3C,CAHa,EAIb,IAAIjB,uBAAJ,CAA4BK,cAAc,CAACa,gBAA3C,CAJa,EAKb,IAAIlB,uBAAJ,CAA4BK,cAAc,CAACc,WAA3C,CALa,EAMb,IAAInB,uBAAJ,CAA4BK,cAAc,CAACe,WAA3C,CANa,EAOb,IAAIpB,uBAAJ,CAA4BM,WAAW,CAACe,gBAAxC,CAPa,EAQb,IAAIrB,uBAAJ,CAA4BM,WAAW,CAACgB,iBAAxC,CARa,EASb,IAAItB,uBAAJ,CAA4BS,eAAe,CAACc,oBAA5C,CATa,EAUb,IAAIvB,uBAAJ,CAA4BS,eAAe,CAACe,qBAA5C,CAVa,EAWb,IAAIxB,uBAAJ,CAA4BQ,eAAe,CAACiB,oBAA5C,CAXa,EAYb,IAAIzB,uBAAJ,CAA4BQ,eAAe,CAACkB,qBAA5C,CAZa,EAab,IAAI1B,uBAAJ,CAA4BO,eAA5B,CAba,CAAjB;AAeA,QAAIoB,YAAY,GAAG,IAAIvB,YAAJ,EAAnB;AACA,QAAIwB,mBAAmB,GAAG,IAAI5B,uBAAJ,CAA4BG,kBAA5B,EAAgD,KAAhD,EAAuDwB,YAAvD,CAA1B;AACA,QAAIE,kBAAkB,GAAG,IAAI7B,uBAAJ,CAA4BG,kBAA5B,EAAgD,IAAhD,EAAsDwB,YAAtD,CAAzB;AACAA,IAAAA,YAAY,CAACG,eAAb,CAA6BF,mBAA7B,EAAkDC,kBAAlD;;AACAjB,IAAAA,IAAI,CAACE,SAAL,CAAeiB,IAAf,CAAoBJ,YAApB,EAAkCC,mBAAlC,EAAuDC,kBAAvD;;AAEAjB,IAAAA,IAAI,CAACoB,KAAL;AACH;;AAEDnB,EAAAA,IAAI;AACP;;AACDH,eAAe,CAACuB,SAAhB,GAA4B,IAAI/B,kBAAJ,EAA5B;AAEAgC,MAAM,CAACC,OAAP,GAAiBzB,eAAjB","sourcesContent":["/*\n * The Original Code is Mozilla Universal charset detector code.\n *\n * The Initial Developer of the Original Code is\n * Netscape Communications Corporation.\n * Portions created by the Initial Developer are Copyright (C) 2001\n * the Initial Developer. All Rights Reserved.\n *\n * Contributor(s):\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\n *   Mark Pilgrim - port to Python\n *   Shy Shalom - original C code\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301  USA\n */\n\nvar SingleByteCharSetProber = require('./sbcharsetprober');\nvar CharSetGroupProber = require('./charsetgroupprober');\nvar Win1255HebrewModel = require('./langhebrewmodel').Win1255HebrewModel;\nvar HebrewProber = require('./hebrewprober');\nvar cyrillicModels = require('./langcyrillicmodel');\nvar greekModels = require('./langgreekmodel');\nvar TIS620ThaiModel = require('./langthaimodel').TIS620ThaiModel;\nvar hungarianModels = require('./langhungarianmodel');\nvar bulgarianModels = require('./langbulgarianmodel')\n\nfunction SBCSGroupProber() {\n    CharSetGroupProber.apply(this);\n\n    var self = this;\n\n    function init() {\n        self._mProbers = [\n            new SingleByteCharSetProber(cyrillicModels.Win1251CyrillicModel),\n            new SingleByteCharSetProber(cyrillicModels.Koi8rModel),\n            new SingleByteCharSetProber(cyrillicModels.Latin5CyrillicModel),\n            new SingleByteCharSetProber(cyrillicModels.MacCyrillicModel),\n            new SingleByteCharSetProber(cyrillicModels.Ibm866Model),\n            new SingleByteCharSetProber(cyrillicModels.Ibm855Model),\n            new SingleByteCharSetProber(greekModels.Latin7GreekModel),\n            new SingleByteCharSetProber(greekModels.Win1253GreekModel),\n            new SingleByteCharSetProber(bulgarianModels.Latin5BulgarianModel),\n            new SingleByteCharSetProber(bulgarianModels.Win1251BulgarianModel),\n            new SingleByteCharSetProber(hungarianModels.Latin2HungarianModel),\n            new SingleByteCharSetProber(hungarianModels.Win1250HungarianModel),\n            new SingleByteCharSetProber(TIS620ThaiModel)\n        ];\n        var hebrewProber = new HebrewProber();\n        var logicalHebrewProber = new SingleByteCharSetProber(Win1255HebrewModel, false, hebrewProber);\n        var visualHebrewProber = new SingleByteCharSetProber(Win1255HebrewModel, true, hebrewProber);\n        hebrewProber.setModelProbers(logicalHebrewProber, visualHebrewProber);\n        self._mProbers.push(hebrewProber, logicalHebrewProber, visualHebrewProber);\n\n        self.reset();\n    }\n\n    init();\n}\nSBCSGroupProber.prototype = new CharSetGroupProber();\n\nmodule.exports = SBCSGroupProber;\n"]},"metadata":{},"sourceType":"script"}