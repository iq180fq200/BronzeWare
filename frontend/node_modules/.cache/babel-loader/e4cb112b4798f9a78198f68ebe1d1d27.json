{"ast":null,"code":"import { f as flatMap, g as getTreeDepth, i as isLeafNode, c as collectNodes, a as internals, S as SpanManager, C as Classes, m as mergeCellProps, _ as __rest, b as icons, d as arrayUtils, e as always, I as InlineFlexCell, E as ExpansionCell, t as treeMode, h as treeMetaSymbol } from './chunks/ali-react-table-pipeline-72600030.esm.js';\nexport { B as BaseTable, C as Classes, T as TablePipeline, c as collectNodes, g as getTreeDepth, j as groupBy2, a as internals, i as isLeafNode, m as mergeCellProps, u as useTablePipeline } from './chunks/ali-react-table-pipeline-72600030.esm.js';\nimport React, { useState, useEffect } from 'react';\nimport styled__default from 'styled-components';\nimport { fromEvent } from 'rxjs';\nimport * as op from 'rxjs/operators';\nimport cx from 'classnames';\nimport 'resize-observer-polyfill';\n\nfunction groupBy(list, iteratee) {\n  const groups = {};\n\n  for (const item of list) {\n    const key = iteratee(item);\n\n    if (groups[key] == null) {\n      groups[key] = [];\n    }\n\n    groups[key].push(item);\n  }\n\n  return groups;\n}\n/**\r\n * 以 input 作为输入，按序使用 transform.\r\n *\r\n * `applyTransforms(input, f1, f2, f3)` 等价于 `f3(f2(f1(input)))` */\n\n\nfunction applyTransforms(input) {\n  for (var _len = arguments.length, transforms = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    transforms[_key - 1] = arguments[_key];\n  }\n\n  return transforms.reduce((v, fn) => fn(v), input);\n}\n/**\r\n * 根据 idProp 与 parentIdProp 从对象数组中构建对应的树\r\n * 当 A[parentIdProp] === B[idProp] 时，对象A会被移动到对象B的children。\r\n * 当一个对象的 parentIdProp 不与其他对象的 idProp 字段相等时，该对象被作为树的顶层节点\r\n * @example\r\n * const array = [\r\n *   { id: 'node-1', parent: 'root' },\r\n *   { id: 'node-2', parent: 'root' },\r\n *   { id: 'node-3', parent: 'node-2' },\r\n *   { id: 'node-4', parent: 'node-2' },\r\n *   { id: 'node-5', parent: 'node-4' },\r\n * ]\r\n * const tree = buildTree('id', 'parent', array)\r\n * expect(tree).toEqual([\r\n *   { id: 'node-1', parent: 'root' },\r\n *   {\r\n *     id: 'node-2',\r\n *     parent: 'root',\r\n *     children: [\r\n *       { id: 'node-3', parent: 'node-2' },\r\n *       {\r\n *         id: 'node-4',\r\n *         parent: 'node-2',\r\n *         children: [{ id: 'node-5', parent: 'node-4' }],\r\n *       },\r\n *     ],\r\n *   },\r\n * ])\r\n */\n\n\nfunction buildTree$1(idProp, parentIdProp, items) {\n  const wrapperMap = new Map();\n\n  const ensure = id => {\n    if (wrapperMap.has(id)) {\n      return wrapperMap.get(id);\n    }\n\n    const wrapper = {\n      id,\n      parent: null,\n      item: null,\n      children: []\n    };\n    wrapperMap.set(id, wrapper);\n    return wrapper;\n  };\n\n  for (const item of items) {\n    const parentWrapper = ensure(item[parentIdProp]);\n    const itemWrapper = ensure(item[idProp]);\n    itemWrapper.parent = parentWrapper;\n    parentWrapper.children.push(itemWrapper);\n    itemWrapper.item = item;\n  }\n\n  const topLevelWrappers = flatMap(Array.from(wrapperMap.values()).filter(wrapper => wrapper.parent == null), wrapper => wrapper.children);\n  return unwrapRecursively(topLevelWrappers);\n\n  function unwrapRecursively(wrapperArray) {\n    const result = [];\n\n    for (const wrapper of wrapperArray) {\n      if (wrapper.children.length === 0) {\n        result.push(wrapper.item);\n      } else {\n        result.push(Object.assign(Object.assign({}, wrapper.item), {\n          children: unwrapRecursively(wrapper.children)\n        }));\n      }\n    }\n\n    return result;\n  }\n}\n\nfunction safeGetSpanRect(column, record, rowIndex, colIndex) {\n  let colSpan = 1;\n  let rowSpan = 1;\n\n  if (column.getSpanRect) {\n    const value = internals.safeGetValue(column, record, rowIndex);\n    const spanRect = column.getSpanRect(value, record, rowIndex);\n    colSpan = spanRect == null ? 1 : spanRect.right - colIndex;\n    rowSpan = spanRect == null ? 1 : spanRect.bottom - rowIndex;\n  } else {\n    const cellProps = internals.safeGetCellProps(column, record, rowIndex);\n\n    if (cellProps.colSpan != null) {\n      colSpan = cellProps.colSpan;\n    }\n\n    if (cellProps.rowSpan != null) {\n      rowSpan = cellProps.rowSpan;\n    }\n  } // 注意这里没有考虑「rowSpan/colSpan 不能过大，避免 rowSpan/colSpan 影响因虚拟滚动而未渲染的单元格」\n\n\n  return {\n    top: rowIndex,\n    bottom: rowIndex + rowSpan,\n    left: colIndex,\n    right: colIndex + colSpan\n  };\n}\n\nfunction move(_ref, dx, dy) {\n  let {\n    c,\n    r\n  } = _ref;\n  return {\n    c: c + dx,\n    r: r + dy\n  };\n}\n\nfunction sanitizeCellDatum(value) {\n  if (value === Infinity || value === -Infinity || typeof value === 'number' && isNaN(value)) {\n    return null;\n  } else {\n    return value;\n  }\n}\n/** 根据 BaseTable 的 dataSource 和 column，将表格数据导出为 Excel 文件 */\n\n\nfunction exportTableAsExcel(xlsxPackage, dataSource, columns, filename) {\n  const sheet = xlsxPackage.utils.aoa_to_sheet([]);\n  const topHeaderHeight = getTreeDepth(columns) + 1;\n  const origin = {\n    c: 0,\n    r: 0\n  };\n  addTopHeaders(origin);\n  addDataPart(move(origin, 0, topHeaderHeight));\n  xlsxPackage.writeFile({\n    SheetNames: ['Sheet1'],\n    Sheets: {\n      Sheet1: sheet\n    }\n  }, filename);\n\n  function addTopHeaders(origin) {\n    dfs(columns, 0, 0);\n\n    function dfs(cols, startDx, startDy) {\n      var _a;\n\n      const start = move(origin, startDx, startDy);\n      let offsetX = 0;\n\n      for (const col of cols) {\n        if ((_a = col.features) === null || _a === void 0 ? void 0 : _a.noExport) {\n          continue;\n        }\n\n        const current = move(start, offsetX, 0);\n        addOne(col.name, current);\n\n        if (isLeafNode(col)) {\n          offsetX += 1;\n          mergeCells(current, 1, topHeaderHeight - startDy);\n        } else {\n          const childrenWidth = dfs(col.children, startDx + offsetX, startDy + 1);\n          mergeCells(current, childrenWidth, 1);\n          offsetX += childrenWidth;\n        }\n      }\n\n      return offsetX;\n    }\n  }\n\n  function addDataPart(origin) {\n    const leafColumns = collectNodes(columns, 'leaf-only').filter(col => {\n      var _a;\n\n      return !((_a = col.features) === null || _a === void 0 ? void 0 : _a.noExport);\n    });\n    const spanManager = new SpanManager();\n    const dataPart = dataSource.map((record, rowIndex) => {\n      spanManager.stripUpwards(rowIndex);\n      return leafColumns.map((col, colIndex) => {\n        if (spanManager.testSkip(rowIndex, colIndex)) {\n          return null;\n        }\n\n        const spanRect = safeGetSpanRect(col, record, rowIndex, colIndex);\n        const rowSpan = spanRect.bottom - spanRect.top;\n        const colSpan = spanRect.right - spanRect.left;\n\n        if (rowSpan > 1 || colSpan > 1) {\n          spanManager.add(spanRect.top, spanRect.left, colSpan, rowSpan);\n          mergeCells(move(origin, spanRect.left, spanRect.top), colSpan, rowSpan);\n        }\n\n        return sanitizeCellDatum(internals.safeGetValue(col, record, rowIndex));\n      });\n    });\n    add(dataPart, origin);\n  }\n\n  function add(data, origin) {\n    xlsxPackage.utils.sheet_add_aoa(sheet, data, {\n      origin\n    });\n  }\n\n  function addOne(datum, origin) {\n    xlsxPackage.utils.sheet_add_aoa(sheet, [[datum]], {\n      origin\n    });\n  }\n\n  function mergeCells(addr, width, height) {\n    if (width === 1 && height === 1) {\n      return;\n    }\n\n    if (sheet['!merges'] == null) {\n      sheet['!merges'] = [];\n    }\n\n    sheet['!merges'].push({\n      s: addr,\n      e: move(addr, width - 1, height - 1)\n    });\n  }\n}\n/** 对树状结构的数据进行排序.\r\n * layeredSort 是一个递归的过程，针对树上的每一个父节点，该函数都会重新对其子节点数组（children) 进行排序.\r\n * */\n\n\nfunction layeredSort(array, compare) {\n  return dfs(array);\n\n  function dfs(rows) {\n    if (!Array.isArray(array)) {\n      return array;\n    }\n\n    return rows.map(row => {\n      if (isLeafNode(row)) {\n        return row;\n      }\n\n      return Object.assign(Object.assign({}, row), {\n        children: dfs(row.children)\n      });\n    }).sort(compare);\n  }\n}\n\nconst factorySymbol = Symbol('factory-symbol');\n\nfunction isProtoFactory(v) {\n  return v && v[factorySymbol];\n}\n\nfunction proto(baseRecord) {\n  let ensureArray = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'auto';\n  const baseKeys = Object.keys(baseRecord);\n\n  function process(record) {\n    const result = Object.assign({}, record);\n    baseKeys.forEach(key => {\n      var _a;\n\n      if (result[key] === proto.empty) {\n        delete result[key];\n        return;\n      }\n\n      const base = baseRecord[key];\n\n      if (isProtoFactory(base)) {\n        result[key] = base(result[key]);\n      } else {\n        result[key] = (_a = result[key]) !== null && _a !== void 0 ? _a : base;\n      }\n    });\n    return result;\n  }\n\n  function factory(arg) {\n    const isEnsureArray = ensureArray === 'auto' ? Array.isArray(arg) : ensureArray;\n\n    if (isEnsureArray) {\n      if (arg == null) {\n        return [];\n      }\n\n      return arg.map(process);\n    } else {\n      return process(arg);\n    }\n  } // @ts-ignore\n\n\n  factory[factorySymbol] = true;\n\n  factory.extends = extRecord => {\n    const extFactory = proto(extRecord, ensureArray);\n    return arg => factory(extFactory(arg));\n  };\n\n  return factory;\n}\n\nproto.empty = Symbol('proto.empty');\n\nproto.string = v => {\n  if (v != null && typeof v !== 'string') {\n    throw new Error('must be string');\n  }\n\n  return v;\n};\n\nproto.string[factorySymbol] = true;\n\nproto.number = v => {\n  if (v != null && typeof v !== 'number') {\n    throw new Error('must be number');\n  }\n\n  return v;\n};\n\nproto.number[factorySymbol] = true;\n\nproto.notNull = v => {\n  if (v == null) {\n    throw new Error('must be not null');\n  }\n\n  return v;\n};\n\nproto.notNull[factorySymbol] = true;\n\nproto.object = baseRecord => proto(baseRecord, false);\n\nproto.array = baseRecord => proto(baseRecord, true);\n\nfunction makeRecursiveMapper(fn) {\n  return tree => {\n    return dfs(tree, 0, []).result;\n\n    function dfs(nodes, parentStartIndex, path) {\n      let flatCount = 0;\n      const result = [];\n\n      for (const node of nodes) {\n        path.push(node);\n        const startIndex = parentStartIndex + flatCount;\n        let subResult;\n\n        if (isLeafNode(node)) {\n          subResult = fn(node, {\n            startIndex,\n            endIndex: startIndex + 1,\n            path: path.slice(),\n            isLeaf: true\n          });\n          flatCount += 1;\n        } else {\n          const dfsResult = dfs(node.children, startIndex, path);\n          subResult = fn(Object.assign(Object.assign({}, node), {\n            children: dfsResult.result\n          }), {\n            startIndex,\n            endIndex: startIndex + dfsResult.flatCount,\n            path: path.slice(),\n            isLeaf: false\n          });\n          flatCount += dfsResult.flatCount;\n        }\n\n        if (Array.isArray(subResult)) {\n          result.push(...subResult);\n        } else if (subResult != null) {\n          result.push(subResult);\n        }\n\n        path.pop();\n      }\n\n      return {\n        result,\n        flatCount\n      };\n    }\n  };\n}\n/** 比较函数，支持字符串、数字、数组和 null。\r\n * * 对于字符串将比较两者的字典序；\r\n * * 对数字将比较两者大小；\r\n * * null 值在比较时总是小于另一个值；\r\n * * 对于数组来说，将逐个比较数组中的元素，第一个不相等的比较结果将作为整个数组的比较结果\r\n *\r\n * 数组的比较可参考 python 中的元祖比较：\r\n * https://stackoverflow.com/questions/5292303/how-does-tuple-comparison-work-in-python */\n\n\nfunction smartCompare(x, y) {\n  // 将 null 排在最后面\n  if (x == null) {\n    return 1;\n  }\n\n  if (y == null) {\n    return -1;\n  }\n\n  if (typeof x === 'number' && typeof y === 'number') {\n    return x - y;\n  }\n\n  if (typeof x === 'string' && typeof y === 'string') {\n    // 字符串使用 默认的字典序\n    if (x < y) {\n      return -1;\n    } else if (x > y) {\n      return 1;\n    } else {\n      return 0;\n    }\n  }\n\n  if (Array.isArray(x) && Array.isArray(y)) {\n    const len = Math.min(x.length, y.length);\n\n    for (let i = 0; i < len; i++) {\n      const cmp = smartCompare(x[i], y[i]);\n\n      if (cmp !== 0) {\n        return cmp;\n      }\n    } // 数组长度不等时，元素少的字段放在前面\n\n\n    return x.length - y.length;\n  } // 对于不认识的数据类型，返回 0\n\n\n  return 0;\n}\n\nfunction normalizeAsArray(input) {\n  if (input == null) {\n    return [];\n  } else if (Array.isArray(input)) {\n    return input;\n  } else {\n    return [input];\n  }\n}\n/** @deprecated 该 API 已经过时，请使用 makeRecursiveMapper */\n\n\nfunction traverseColumn(fn) {\n  return _ref2 => {\n    let {\n      columns,\n      dataSource\n    } = _ref2;\n    return {\n      dataSource,\n      columns: dfs(columns, 0).result\n    };\n\n    function dfs(columns, parentStartColIndex) {\n      let flatColCount = 0;\n      const result = [];\n\n      for (const col of columns) {\n        const startColIndex = parentStartColIndex + flatColCount;\n        let unNormalized;\n\n        if (isLeafNode(col)) {\n          unNormalized = fn(col, {\n            range: {\n              start: startColIndex,\n              end: startColIndex + 1\n            },\n            dataSource\n          });\n          flatColCount += 1;\n        } else {\n          const dfsResult = dfs(col.children, startColIndex);\n          unNormalized = fn(Object.assign(Object.assign({}, col), {\n            children: dfsResult.result\n          }), {\n            range: {\n              start: startColIndex,\n              end: startColIndex + dfsResult.flatColCount\n            },\n            dataSource\n          });\n          flatColCount += dfsResult.flatColCount;\n        }\n\n        result.push(...normalizeAsArray(unNormalized));\n      }\n\n      return {\n        result,\n        flatColCount\n      };\n    }\n  };\n}\n\nconst warnedSet = new Set();\n\nfunction warnTransformsDeprecated(apiName) {\n  if (!warnedSet.has(apiName)) {\n    warnedSet.add(apiName);\n    console.warn(`[ali-react-table] transform 用法已经过时，请使用 pipeline 来对表格进行拓展` + `\\n  请移除以下 API 的调用：${apiName}`);\n  }\n}\n\nfunction isIdentity$1(x, y) {\n  return x === y;\n}\n/** @deprecated transform 用法已经过时，请使用 pipeline 来对表格进行拓展 */\n\n\nfunction makeAutoRowSpanTransform() {\n  warnTransformsDeprecated('makeAutoRowSpanTransform');\n  return traverseColumn((col, _ref3) => {\n    let {\n      dataSource,\n      range\n    } = _ref3;\n\n    var _a;\n\n    if (!((_a = col.features) === null || _a === void 0 ? void 0 : _a.autoRowSpan)) {\n      return col;\n    }\n\n    if (!isLeafNode(col)) {\n      return col;\n    }\n\n    const isFunc = typeof col.features.autoRowSpan === 'function';\n    const shouldMergeCell = isFunc ? col.features.autoRowSpan : isIdentity$1;\n    const spanRects = [];\n    let lastBottom = 0;\n    let prevValue = null;\n    let prevRow = null;\n\n    for (let rowIndex = 0; rowIndex < dataSource.length; rowIndex++) {\n      const row = dataSource[rowIndex];\n      const value = internals.safeGetValue(col, row, rowIndex);\n\n      if (rowIndex === 0 || !shouldMergeCell(prevValue, value, prevRow, row)) {\n        const spanRect = {\n          top: lastBottom,\n          bottom: rowIndex,\n          left: range.start,\n          right: range.end\n        };\n\n        for (let i = lastBottom; i < rowIndex; i++) {\n          spanRects.push(spanRect);\n        }\n\n        lastBottom = rowIndex;\n      }\n\n      prevValue = value;\n      prevRow = row;\n    }\n\n    for (let i = lastBottom; i < dataSource.length; i++) {\n      spanRects.push({\n        top: lastBottom,\n        bottom: dataSource.length,\n        left: range.start,\n        right: range.end\n      });\n    }\n\n    return Object.assign(Object.assign({}, col), {\n      getSpanRect(value, row, rowIndex) {\n        return spanRects[rowIndex];\n      }\n\n    });\n  });\n}\n\nconst AUTO_WIDTH_WRAPPER_CLS = 'auto-width-wrapper';\nconst AUTO_WIDTH_EXPANDER_CLS = 'auto-width-expander';\nconst AutoWidthWrapper = styled__default.div`\n  height: 100%;\n  display: inline-flex;\n  align-items: center;\n  white-space: nowrap;\n  padding: 8px 12px;\n`;\n\nfunction isSameArray(arr1, arr2) {\n  return arr1.length === arr2.length && arr1.every((x, i) => x === arr2[i]);\n}\n/** 自适应列宽\r\n *\r\n * @deprecated transform 用法已经过时，请使用 pipeline 来对表格进行拓展\r\n *\r\n * @param tableRef BaseTable 的 ref\r\n * @param options 参数\r\n * @param deps 重新调整列宽的依赖数组，每当依赖数组发生变化时， useAutoWidthTransform 会根据单元格内容的实际渲染宽度 设置单元格的宽度\r\n *\r\n * options 说明：\r\n * - options.appendExpander 是否在列的末尾追加可伸缩列\r\n * - options.expanderVisibility 设置为 `'hidden'` 可以隐藏可伸缩列\r\n * - options.wrapperStyle 单元格中 div.auto-width-wrapper 的样式\r\n * - options.initColumnWidth 自适应的初始列宽\r\n *\r\n * 注意 useAutoWidthTransform 是一个 React hooks，要遵循 hooks 的用法规范\r\n * */\n\n\nfunction useAutoWidthTransform(tableRef, options, deps) {\n  warnTransformsDeprecated('useAutoWidthTransform');\n  const [widthList, setWidthList] = useState([]);\n  useEffect(() => {\n    const artTable = tableRef.current.getDoms().artTable;\n    const rows = Array.from(artTable.querySelectorAll(`.${Classes.tableRow}`));\n\n    if (rows.length === 0) {\n      return;\n    }\n\n    const preferredWidthList = [];\n\n    for (const row of rows) {\n      const autoWidthDivList = row.querySelectorAll(`.${AUTO_WIDTH_WRAPPER_CLS}`);\n      autoWidthDivList.forEach((div, i) => {\n        var _a;\n\n        preferredWidthList[i] = Math.max((_a = preferredWidthList[i]) !== null && _a !== void 0 ? _a : 0, div.scrollWidth);\n      });\n    }\n\n    if (!isSameArray(preferredWidthList, widthList)) {\n      setWidthList(preferredWidthList);\n    }\n  }, deps);\n  let i = 0;\n  const innerTransform = traverseColumn(col => {\n    var _a, _b, _c;\n\n    if (!isLeafNode(col)) {\n      return col;\n    }\n\n    if (!((_a = col.features) === null || _a === void 0 ? void 0 : _a.autoWidth)) {\n      return col;\n    }\n\n    const {\n      max = Infinity,\n      min = -Infinity\n    } = col.features.autoWidth;\n    const width = (_c = (_b = widthList[i++]) !== null && _b !== void 0 ? _b : col.width) !== null && _c !== void 0 ? _c : options === null || options === void 0 ? void 0 : options.initColumnWidth;\n    const clampedWidth = Math.max(min, Math.min(max, width));\n    return Object.assign(Object.assign({}, col), {\n      width: clampedWidth,\n\n      getCellProps(_, record, rowIndex) {\n        return mergeCellProps(internals.safeGetCellProps(col, record, rowIndex), {\n          style: {\n            padding: 0\n          }\n        });\n      },\n\n      render(_, record, rowIndex) {\n        return React.createElement(AutoWidthWrapper, {\n          className: AUTO_WIDTH_WRAPPER_CLS,\n          style: options === null || options === void 0 ? void 0 : options.wrapperStyle\n        }, internals.safeRender(col, record, rowIndex));\n      }\n\n    });\n  });\n  return input => {\n    var _a;\n\n    const {\n      columns,\n      dataSource\n    } = innerTransform(input);\n    const expanderVisibility = (_a = options === null || options === void 0 ? void 0 : options.expanderVisibility) !== null && _a !== void 0 ? _a : 'visible';\n    return {\n      columns: (options === null || options === void 0 ? void 0 : options.appendExpander) ? columns.concat([{\n        name: '',\n        headerCellProps: {\n          className: AUTO_WIDTH_EXPANDER_CLS,\n          style: {\n            background: expanderVisibility === 'hidden' ? 'var(--bgcolor)' : undefined,\n            border: expanderVisibility === 'hidden' ? 'none' : undefined\n          }\n        },\n\n        getCellProps() {\n          return {\n            className: AUTO_WIDTH_EXPANDER_CLS,\n            style: {\n              visibility: expanderVisibility\n            }\n          };\n        }\n\n      }]) : columns,\n      dataSource\n    };\n  };\n}\n/** @deprecated transform 用法已经过时，请使用 pipeline 来对表格进行拓展 */\n\n\nfunction makeBuildTreeTransform(idProp, parentIdProp) {\n  warnTransformsDeprecated('makeBuildTreeTransform');\n  return _ref4 => {\n    let {\n      columns,\n      dataSource\n    } = _ref4;\n    return {\n      columns,\n      dataSource: buildTree$1(idProp, parentIdProp, dataSource)\n    };\n  };\n}\n/** @deprecated transform 用法已经过时，请使用 pipeline 来对表格进行拓展 */\n\n\nfunction makeColumnHoverTransform(_ref5) {\n  let {\n    hoverColor = 'var(--hover-bgcolor)',\n    hoverColIndex,\n    onChangeHoverColIndex\n  } = _ref5;\n  warnTransformsDeprecated('makeColumnHoverTransform');\n  return traverseColumn((col, _ref6) => {\n    let {\n      range\n    } = _ref6;\n\n    if (!isLeafNode(col)) {\n      return col;\n    }\n\n    const colIndexMatched = range.start <= hoverColIndex && hoverColIndex < range.end;\n    const prevGetCellProps = col.getCellProps;\n    return Object.assign(Object.assign({}, col), {\n      getCellProps(value, record, rowIndex) {\n        const prevCellProps = prevGetCellProps === null || prevGetCellProps === void 0 ? void 0 : prevGetCellProps(value, record, rowIndex);\n        return mergeCellProps(prevCellProps, {\n          style: {\n            '--bgcolor': colIndexMatched ? hoverColor : undefined\n          },\n\n          onMouseEnter() {\n            onChangeHoverColIndex(range.start);\n          },\n\n          onMouseLeave() {\n            onChangeHoverColIndex(-1);\n          }\n\n        });\n      }\n\n    });\n  });\n}\n/** @deprecated transform 用法已经过时，请使用 pipeline 来对表格进行拓展 */\n\n\nfunction useColumnHoverTransform() {\n  let {\n    hoverColor,\n    defaultHoverColIndex = -1\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const [hoverColIndex, onChangeHoverColIndex] = useState(defaultHoverColIndex);\n  return makeColumnHoverTransform({\n    hoverColor,\n    hoverColIndex,\n    onChangeHoverColIndex\n  });\n}\n\nconst EMPTY_RANGE$1 = {\n  start: -1,\n  end: -1\n};\n/** @deprecated transform 用法已经过时，请使用 pipeline 来对表格进行拓展 */\n\nfunction makeColumnRangeHoverTransform(_ref7) {\n  let {\n    hoverColor = 'var(--hover-bgcolor)',\n    headerHoverColor = 'var(--header-hover-bgcolor)',\n    hoverRange,\n    onChangeHoverRange\n  } = _ref7;\n  warnTransformsDeprecated('makeColumnRangeHoverTransform');\n  return traverseColumn((col, _ref8) => {\n    let {\n      range: colRange\n    } = _ref8;\n    const match = colRange.end > hoverRange.start && hoverRange.end > colRange.start;\n\n    if (!isLeafNode(col)) {\n      if (headerHoverColor == null) {\n        return col;\n      }\n\n      return Object.assign(Object.assign({}, col), {\n        headerCellProps: mergeCellProps(col.headerCellProps, {\n          onMouseEnter() {\n            onChangeHoverRange(colRange);\n          },\n\n          onMouseLeave() {\n            onChangeHoverRange(EMPTY_RANGE$1);\n          },\n\n          style: {\n            '--header-bgcolor': match ? headerHoverColor : undefined\n          }\n        })\n      });\n    }\n\n    const prevGetCellProps = col.getCellProps;\n    return Object.assign(Object.assign({}, col), {\n      headerCellProps: mergeCellProps(col.headerCellProps, {\n        onMouseEnter() {\n          onChangeHoverRange(colRange);\n        },\n\n        onMouseLeave() {\n          onChangeHoverRange(EMPTY_RANGE$1);\n        },\n\n        style: {\n          '--header-bgcolor': match ? headerHoverColor : undefined\n        }\n      }),\n\n      getCellProps(value, record, rowIndex) {\n        const prevCellProps = prevGetCellProps === null || prevGetCellProps === void 0 ? void 0 : prevGetCellProps(value, record, rowIndex);\n        return mergeCellProps(prevCellProps, {\n          onMouseEnter() {\n            onChangeHoverRange(colRange);\n          },\n\n          onMouseLeave() {\n            onChangeHoverRange(EMPTY_RANGE$1);\n          },\n\n          style: {\n            '--bgcolor': match ? hoverColor : undefined\n          }\n        });\n      }\n\n    });\n  });\n}\n/** @deprecated transform 用法已经过时，请使用 pipeline 来对表格进行拓展 */\n\n\nfunction useColumnHoverRangeTransform() {\n  let {\n    hoverColor,\n    headerHoverColor,\n    defaultHoverRange = EMPTY_RANGE$1\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const [hoverRange, onChangeHoverRange] = useState(defaultHoverRange);\n  return makeColumnRangeHoverTransform({\n    hoverColor,\n    headerHoverColor,\n    hoverRange,\n    onChangeHoverRange\n  });\n}\n\nfunction clamp$1(min, x, max) {\n  return Math.max(min, Math.min(max, x));\n}\n\nconst RESIZE_EXPANDER_CLS = 'resize-expander';\nconst ResizeHandle$1 = styled__default.span`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  right: -5px;\n  width: 10px;\n  cursor: col-resize;\n  z-index: 1;\n`;\n/** @deprecated transform 用法已经过时，请使用 pipeline 来对表格进行拓展 */\n\nfunction makeColumnResizeTransform(_ref9) {\n  let {\n    sizes,\n    onChangeSizes,\n    minSize = 40,\n    maxSize = Infinity,\n    appendExpander,\n    expanderVisibility = 'visible',\n    disableUserSelectWhenResizing\n  } = _ref9;\n  warnTransformsDeprecated('makeColumnResizeTransform');\n\n  const startResize = (colIndex, e) => {\n    const startX = e.clientX;\n    const startSize = sizes[colIndex];\n    const nextSizes$ = fromEvent(window, 'mousemove').pipe(op.takeUntil(fromEvent(window, 'mouseup')), op.map(e => {\n      const movingX = e.clientX;\n      const nextSizes = sizes.slice();\n      nextSizes[colIndex] = clamp$1(minSize, startSize + (movingX - startX), maxSize);\n      return nextSizes;\n    }));\n    let prevUserSelect = '';\n    let docElemStyle;\n\n    if (disableUserSelectWhenResizing) {\n      docElemStyle = document.documentElement.style;\n      prevUserSelect = docElemStyle.userSelect;\n      docElemStyle.userSelect = 'none';\n    }\n\n    nextSizes$.subscribe({\n      next: onChangeSizes,\n\n      complete() {\n        if (disableUserSelectWhenResizing) {\n          docElemStyle.userSelect = prevUserSelect;\n        }\n      }\n\n    });\n  };\n\n  const innerTransform = traverseColumn((col, _ref10) => {\n    let {\n      range\n    } = _ref10;\n\n    var _a;\n\n    if (!isLeafNode(col)) {\n      return col;\n    }\n\n    const prevTitle = internals.safeRenderHeader(col);\n    return Object.assign(Object.assign({}, col), {\n      width: sizes[range.start],\n      title: React.createElement(React.Fragment, null, prevTitle, React.createElement(ResizeHandle$1, {\n        className: \"resize-handle\",\n        onMouseDown: e => startResize(range.start, e)\n      })),\n      headerCellProps: Object.assign(Object.assign({}, col.headerCellProps), {\n        style: Object.assign(Object.assign({}, (_a = col.headerCellProps) === null || _a === void 0 ? void 0 : _a.style), {\n          overflow: 'visible',\n          position: 'relative'\n        })\n      })\n    });\n  });\n  return input => {\n    const {\n      columns,\n      dataSource\n    } = innerTransform(input);\n    return {\n      columns: appendExpander ? columns.concat([{\n        name: '',\n        headerCellProps: {\n          className: RESIZE_EXPANDER_CLS,\n          style: {\n            background: expanderVisibility === 'hidden' ? 'var(--bgcolor)' : undefined,\n            border: expanderVisibility === 'hidden' ? 'none' : undefined\n          }\n        },\n\n        getCellProps() {\n          return {\n            className: RESIZE_EXPANDER_CLS,\n            style: {\n              visibility: expanderVisibility\n            }\n          };\n        }\n\n      }]) : columns,\n      dataSource\n    };\n  };\n}\n/** @deprecated transform 用法已经过时，请使用 pipeline 来对表格进行拓展 */\n\n\nfunction useColumnResizeTransform(_a) {\n  var {\n    defaultSizes\n  } = _a,\n      others = __rest(_a, [\"defaultSizes\"]);\n\n  const [sizes, onChangeSizes] = useState(defaultSizes);\n  return makeColumnResizeTransform(Object.assign({\n    sizes,\n    onChangeSizes\n  }, others));\n}\n/** @deprecated transform 用法已经过时，请使用 pipeline 来对表格进行拓展 */\n\n\nfunction makeFlattenTransform() {\n  warnTransformsDeprecated('makeFlattenTransform');\n  return traverseColumn(column => {\n    var _a;\n\n    if (isLeafNode(column)) {\n      return column;\n    }\n\n    return ((_a = column.features) === null || _a === void 0 ? void 0 : _a.flatten) ? column.children : column;\n  });\n}\n/** @deprecated transform 用法已经过时，请使用 pipeline 来对表格进行拓展 */\n\n\nfunction makeOrderFieldTransform() {\n  let startOrder = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n  warnTransformsDeprecated('makeOrderFieldTransform');\n  return traverseColumn(column => {\n    var _a, _b;\n\n    if (((_a = column.features) === null || _a === void 0 ? void 0 : _a.order) || ((_b = column.features) === null || _b === void 0 ? void 0 : _b.orderField)) {\n      return Object.assign(Object.assign({}, column), {\n        getValue(record, index) {\n          return index + startOrder;\n        }\n\n      });\n    }\n\n    return column;\n  });\n}\n\nfunction SortIcon$1(_ref11) {\n  let {\n    size = 32,\n    style,\n    className,\n    order\n  } = _ref11;\n  return React.createElement(\"svg\", {\n    style: style,\n    className: className,\n    focusable: \"false\",\n    preserveAspectRatio: \"xMidYMid meet\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 32 32\",\n    \"aria-hidden\": \"true\"\n  }, React.createElement(\"path\", {\n    fill: order === 'asc' ? '#23A3FF' : '#bfbfbf',\n    transform: \"translate(0, 4)\",\n    d: \"M8 8L16 0 24 8z\"\n  }), React.createElement(\"path\", {\n    fill: order === 'desc' ? '#23A3FF' : '#bfbfbf',\n    transform: \"translate(0, -4)\",\n    d: \"M24 24L16 32 8 24z \"\n  }));\n}\n\nfunction DefaultSortHeaderCell$1(_ref12) {\n  let {\n    children,\n    column,\n    onToggle,\n    sortOrder,\n    sortIndex,\n    sortOptions\n  } = _ref12;\n  // 通过 justify-content 来与 col.align 保持对齐方向一致\n  const justifyContent = column.align === 'right' ? 'flex-end' : column.align === 'center' ? 'center' : 'flex-start';\n  return React.createElement(TableHeaderCell$1, {\n    onClick: onToggle,\n    style: {\n      justifyContent\n    }\n  }, children, React.createElement(SortIcon$1, {\n    style: {\n      userSelect: 'none',\n      marginLeft: 2,\n      flexShrink: 0\n    },\n    size: 16,\n    order: sortOrder\n  }), sortOptions.mode === 'multiple' && sortIndex != -1 && React.createElement(\"div\", {\n    style: {\n      userSelect: 'none',\n      marginLeft: 2,\n      color: '#666',\n      flex: '0 0 auto',\n      fontSize: 10,\n      fontFamily: 'monospace'\n    }\n  }, sortIndex + 1));\n}\n\nfunction hasAnySortableColumns$1(cols) {\n  return cols.some(col => {\n    var _a;\n\n    return Boolean((_a = col.features) === null || _a === void 0 ? void 0 : _a.sortable) || !isLeafNode(col) && hasAnySortableColumns$1(col.children);\n  });\n}\n\nconst TableHeaderCell$1 = styled__default.div`\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n`;\n/** @deprecated transform 用法已经过时，请使用 pipeline 来对表格进行拓展 */\n\nfunction makeSortTransform(_ref13) {\n  let {\n    sorts: inputSorts,\n    onChangeSorts: inputOnChangeSorts,\n    orders = ['desc', 'asc', 'none'],\n    mode = 'multiple',\n    SortHeaderCell = DefaultSortHeaderCell$1,\n    keepDataSource,\n    highlightColumnWhenActive,\n    stopClickEventPropagation\n  } = _ref13;\n  warnTransformsDeprecated('makeSortTransform');\n  const filteredInputSorts = inputSorts.filter(s => s.order !== 'none'); // 单字段排序的情况下 sorts 中只有第一个排序字段才会生效\n\n  const sorts = mode === 'multiple' ? filteredInputSorts : filteredInputSorts.slice(0, 1);\n  const onChangeSorts = mode === 'multiple' ? inputOnChangeSorts : nextSorts => {\n    // 单字段排序的情况下，nextSorts 中只有最后一个排序字段才会生效\n    const len = nextSorts.length;\n    inputOnChangeSorts(nextSorts.slice(len - 1));\n  };\n  const sortOptions = {\n    sorts,\n    onChangeSorts,\n    orders,\n    mode,\n    keepDataSource,\n    highlightColumnWhenActive,\n    stopClickEventPropagation\n  };\n  const sortMap = new Map(sorts.map((sort, index) => [sort.code, Object.assign({\n    index\n  }, sort)]));\n  return _ref14 => {\n    let {\n      dataSource,\n      columns\n    } = _ref14;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!hasAnySortableColumns$1(columns)) {\n        console.warn('[ali-react-table] commonTransform.sort 缺少可排序的列，请通过 column.features.sortable 来指定哪些列可排序', columns);\n      }\n    }\n\n    return {\n      columns: processColumns(columns),\n      dataSource: processDataSource(dataSource)\n    };\n\n    function processDataSource(dataSource) {\n      if (keepDataSource) {\n        return dataSource;\n      }\n\n      const sortColumnsMap = new Map(collectNodes(columns, 'leaf-only').filter(col => {\n        var _a;\n\n        return ((_a = col.features) === null || _a === void 0 ? void 0 : _a.sortable) != null;\n      }).map(col => [col.code, col]));\n      return layeredSort(dataSource, (x, y) => {\n        for (const {\n          code,\n          order\n        } of sorts) {\n          const column = sortColumnsMap.get(code); // 如果 code 对应的 column 不可排序，我们跳过该 code\n\n          if (column == null) {\n            continue;\n          }\n\n          const sortable = column.features.sortable;\n          const compareFn = typeof sortable === 'function' ? sortable : smartCompare;\n          const xValue = internals.safeGetValue(column, x, -1);\n          const yValue = internals.safeGetValue(column, y, -1);\n          const cmp = compareFn(xValue, yValue);\n\n          if (cmp !== 0) {\n            return cmp * (order === 'asc' ? 1 : -1);\n          }\n        }\n\n        return 0;\n      });\n    } // 在「升序 - 降序 - 不排序」之间不断切换\n\n\n    function toggle(code) {\n      const sort = sortMap.get(code);\n\n      if (sort == null) {\n        onChangeSorts(sorts.concat([{\n          code,\n          order: orders[0]\n        }]));\n      } else {\n        const index = sorts.findIndex(s => s.code === code);\n        const nextSorts = sorts.slice(0, index + 1);\n        const nextOrder = getNextOrder(sort.order);\n\n        if (nextOrder === 'none') {\n          nextSorts.pop();\n        } else {\n          nextSorts[index] = Object.assign(Object.assign({}, nextSorts[index]), {\n            order: nextOrder\n          });\n        }\n\n        onChangeSorts(nextSorts);\n      }\n    }\n\n    function processColumns(columns) {\n      return columns.map(dfs);\n\n      function dfs(col) {\n        var _a;\n\n        const result = Object.assign({}, col);\n        const sortable = col.code && (((_a = col.features) === null || _a === void 0 ? void 0 : _a.sortable) || sortMap.has(col.code));\n        const active = sortable && sortMap.has(col.code);\n\n        if (sortable) {\n          let sortIndex = -1;\n          let sortOrder = 'none';\n\n          if (active) {\n            const {\n              order,\n              index\n            } = sortMap.get(col.code);\n            sortOrder = order;\n            sortIndex = index;\n\n            if (highlightColumnWhenActive) {\n              result.headerCellProps = mergeCellProps(col.headerCellProps, {\n                style: {\n                  background: 'var(--header-highlight-bgcolor)'\n                }\n              });\n\n              result.getCellProps = (value, row, rowIndex) => {\n                const prevCellProps = internals.safeGetCellProps(col, row, rowIndex);\n                return mergeCellProps(prevCellProps, {\n                  style: {\n                    background: 'var(--highlight-bgcolor)'\n                  }\n                });\n              };\n            }\n          }\n\n          result.title = React.createElement(SortHeaderCell, {\n            onToggle: e => {\n              if (stopClickEventPropagation) {\n                e.stopPropagation();\n              }\n\n              toggle(col.code);\n            },\n            sortOrder: sortOrder,\n            column: col,\n            sortIndex: sortIndex,\n            sortOptions: sortOptions\n          }, internals.safeRenderHeader(col));\n        }\n\n        if (!isLeafNode(col)) {\n          result.children = col.children.map(dfs);\n        }\n\n        return result;\n      }\n    }\n  };\n\n  function getNextOrder(order) {\n    const idx = orders.indexOf(order);\n    return orders[idx === orders.length - 1 ? 0 : idx + 1];\n  }\n}\n/** @deprecated transform 用法已经过时，请使用 pipeline 来对表格进行拓展 */\n\n\nfunction useSortTransform() {\n  let _a = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var {\n    defaultSorts = []\n  } = _a,\n      others = __rest(_a, [\"defaultSorts\"]);\n\n  const [sorts, onChangeSorts] = useState(defaultSorts);\n  return makeSortTransform(Object.assign({\n    sorts,\n    onChangeSorts\n  }, others));\n}\n\nconst HeaderCellWithTips$1 = styled__default.div`\n  display: flex;\n  align-items: center;\n\n  .tip-icon-wrapper {\n    margin-left: 2px;\n  }\n\n  .tip-icon {\n    display: flex;\n    fill: currentColor;\n  }\n`;\n/** @deprecated transform 用法已经过时，请使用 pipeline 来对表格进行拓展 */\n\nfunction makeTipsTransform(_ref15) {\n  let {\n    Balloon,\n    Tooltip\n  } = _ref15;\n  warnTransformsDeprecated('makeTipsTransform');\n  return traverseColumn(col => {\n    var _a;\n\n    if (!((_a = col.features) === null || _a === void 0 ? void 0 : _a.tips)) {\n      return col;\n    }\n\n    const justifyContent = col.align === 'right' ? 'flex-end' : col.align === 'center' ? 'center' : 'flex-start';\n    return Object.assign(Object.assign({}, col), {\n      title: React.createElement(HeaderCellWithTips$1, {\n        style: {\n          justifyContent\n        }\n      }, internals.safeRenderHeader(col), Balloon ? // fusion/hippo\n      React.createElement(Balloon, {\n        closable: false,\n        trigger: React.createElement(\"div\", {\n          className: \"tip-icon-wrapper\"\n        }, React.createElement(icons.Info, {\n          className: \"tip-icon\"\n        }))\n      }, col.features.tips) : // antd\n      React.createElement(Tooltip, {\n        title: col.features.tips\n      }, React.createElement(\"div\", {\n        className: \"tip-icon-wrapper\"\n      }, React.createElement(icons.Info, {\n        className: \"tip-icon\"\n      }))))\n    });\n  });\n}\n\nfunction isIdentity(x, y) {\n  return x === y;\n}\n\nfunction autoRowSpan() {\n  return function autoRowSpanStep(pipeline) {\n    const dataSource = pipeline.getDataSource();\n    return pipeline.mapColumns(makeRecursiveMapper((col, _ref16) => {\n      let {\n        startIndex,\n        endIndex\n      } = _ref16;\n\n      var _a;\n\n      if (!((_a = col.features) === null || _a === void 0 ? void 0 : _a.autoRowSpan)) {\n        return col;\n      }\n\n      if (!isLeafNode(col)) {\n        return col;\n      }\n\n      const isFunc = typeof col.features.autoRowSpan === 'function';\n      const shouldMergeCell = isFunc ? col.features.autoRowSpan : isIdentity;\n      const spanRects = [];\n      let lastBottom = 0;\n      let prevValue = null;\n      let prevRow = null;\n\n      for (let rowIndex = 0; rowIndex < dataSource.length; rowIndex++) {\n        const row = dataSource[rowIndex];\n        const value = internals.safeGetValue(col, row, rowIndex);\n\n        if (rowIndex === 0 || !shouldMergeCell(prevValue, value, prevRow, row)) {\n          const spanRect = {\n            top: lastBottom,\n            bottom: rowIndex,\n            left: startIndex,\n            right: endIndex\n          };\n\n          for (let i = lastBottom; i < rowIndex; i++) {\n            spanRects.push(spanRect);\n          }\n\n          lastBottom = rowIndex;\n        }\n\n        prevValue = value;\n        prevRow = row;\n      }\n\n      for (let i = lastBottom; i < dataSource.length; i++) {\n        spanRects.push({\n          top: lastBottom,\n          bottom: dataSource.length,\n          left: startIndex,\n          right: endIndex\n        });\n      }\n\n      return Object.assign(Object.assign({}, col), {\n        getSpanRect(value, row, rowIndex) {\n          return spanRects[rowIndex];\n        }\n\n      });\n    }));\n  };\n}\n\nfunction buildTree(idProp, parentIdProp) {\n  return pipeline => pipeline.mapDataSource(rows => buildTree$1(idProp, parentIdProp, rows));\n}\n\nfunction columnHover() {\n  let opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const stateKey = 'columnHover';\n  return pipeline => {\n    var _a, _b, _c, _d;\n\n    const hoverColor = (_a = opts.hoverColor) !== null && _a !== void 0 ? _a : 'var(--hover-bgcolor)';\n    const hoverColIndex = (_d = (_c = (_b = opts.hoverColIndex) !== null && _b !== void 0 ? _b : pipeline.getStateAtKey(stateKey)) !== null && _c !== void 0 ? _c : opts.defaultHoverColIndex) !== null && _d !== void 0 ? _d : -1;\n\n    const onChangeHoverColIndex = nextColIndex => {\n      var _a;\n\n      pipeline.setStateAtKey(stateKey, nextColIndex);\n      (_a = opts.onChangeHoverColIndex) === null || _a === void 0 ? void 0 : _a.call(opts, nextColIndex);\n    };\n\n    return pipeline.mapColumns(makeRecursiveMapper((col, _ref17) => {\n      let {\n        startIndex,\n        endIndex\n      } = _ref17;\n      const range = {\n        start: startIndex,\n        end: endIndex\n      };\n\n      if (!isLeafNode(col)) {\n        return col;\n      }\n\n      const colIndexMatched = range.start <= hoverColIndex && hoverColIndex < range.end;\n      const prevGetCellProps = col.getCellProps;\n      return Object.assign(Object.assign({}, col), {\n        getCellProps(value, record, rowIndex) {\n          const prevCellProps = prevGetCellProps === null || prevGetCellProps === void 0 ? void 0 : prevGetCellProps(value, record, rowIndex);\n          return mergeCellProps(prevCellProps, {\n            style: {\n              '--bgcolor': colIndexMatched ? hoverColor : undefined\n            },\n\n            onMouseEnter() {\n              onChangeHoverColIndex(range.start);\n            },\n\n            onMouseLeave() {\n              onChangeHoverColIndex(-1);\n            }\n\n          });\n        }\n\n      });\n    }));\n  };\n}\n\nconst EMPTY_RANGE = {\n  start: -1,\n  end: -1\n};\n\nfunction columnRangeHover() {\n  let opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const stateKey = 'columnHover';\n  return function columnRangeHoverStep(pipeline) {\n    var _a, _b, _c, _d, _e;\n\n    const hoverRange = (_c = (_b = (_a = opts.hoverRange) !== null && _a !== void 0 ? _a : pipeline.getStateAtKey(stateKey)) !== null && _b !== void 0 ? _b : opts.defaultHoverRange) !== null && _c !== void 0 ? _c : EMPTY_RANGE;\n    const hoverColor = (_d = opts.hoverColor) !== null && _d !== void 0 ? _d : 'var(--hover-bgcolor)';\n    const headerHoverColor = (_e = opts.headerHoverColor) !== null && _e !== void 0 ? _e : 'var(--header-hover-bgcolor)';\n\n    const onChangeHoverRange = nextColIndexRange => {\n      var _a;\n\n      pipeline.setStateAtKey(stateKey, nextColIndexRange);\n      (_a = opts.onChangeHoverRange) === null || _a === void 0 ? void 0 : _a.call(opts, nextColIndexRange);\n    };\n\n    return pipeline.mapColumns(makeRecursiveMapper((col, _ref18) => {\n      let {\n        startIndex,\n        endIndex\n      } = _ref18;\n      const colRange = {\n        start: startIndex,\n        end: endIndex\n      };\n      const match = colRange.end > hoverRange.start && hoverRange.end > colRange.start;\n\n      if (!isLeafNode(col)) {\n        if (headerHoverColor == null) {\n          return col;\n        }\n\n        return Object.assign(Object.assign({}, col), {\n          headerCellProps: mergeCellProps(col.headerCellProps, {\n            onMouseEnter() {\n              onChangeHoverRange(colRange);\n            },\n\n            onMouseLeave() {\n              onChangeHoverRange(EMPTY_RANGE);\n            },\n\n            style: {\n              '--header-bgcolor': match ? headerHoverColor : undefined\n            }\n          })\n        });\n      }\n\n      const prevGetCellProps = col.getCellProps;\n      return Object.assign(Object.assign({}, col), {\n        headerCellProps: mergeCellProps(col.headerCellProps, {\n          onMouseEnter() {\n            onChangeHoverRange(colRange);\n          },\n\n          onMouseLeave() {\n            onChangeHoverRange(EMPTY_RANGE);\n          },\n\n          style: {\n            '--header-bgcolor': match ? headerHoverColor : undefined\n          }\n        }),\n\n        getCellProps(value, record, rowIndex) {\n          const prevCellProps = prevGetCellProps === null || prevGetCellProps === void 0 ? void 0 : prevGetCellProps(value, record, rowIndex);\n          return mergeCellProps(prevCellProps, {\n            onMouseEnter() {\n              onChangeHoverRange(colRange);\n            },\n\n            onMouseLeave() {\n              onChangeHoverRange(EMPTY_RANGE);\n            },\n\n            style: {\n              '--bgcolor': match ? hoverColor : undefined\n            }\n          });\n        }\n\n      });\n    }));\n  };\n}\n\nfunction clamp(min, x, max) {\n  return Math.max(min, Math.min(max, x));\n}\n\nconst ResizeHandle = styled__default.span`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  right: -5px;\n  width: 10px;\n  cursor: col-resize;\n  z-index: 1;\n  transition: background-color 200ms;\n\n  background: ${props => {\n  return props['var-handleBackground'];\n}};\n\n  &:hover {\n    background: ${props => {\n  return props['var-handleHoverBackground'];\n}};\n  }\n`;\n\nfunction columnResize() {\n  let opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var _a, _b, _c, _d;\n\n  const stateKey = 'columnResize';\n  const disableUserSelectWhenResizing = (_a = opts.disableUserSelectWhenResizing) !== null && _a !== void 0 ? _a : true;\n  const minSize = (_b = opts.minSize) !== null && _b !== void 0 ? _b : 60;\n  const fallbackSize = (_c = opts.fallbackSize) !== null && _c !== void 0 ? _c : 150;\n  const maxSize = (_d = opts.maxSize) !== null && _d !== void 0 ? _d : 1000;\n  return function columnResizeFeature(pipeline) {\n    var _a, _b, _c;\n\n    const sizes = (_c = (_b = (_a = opts.sizes) !== null && _a !== void 0 ? _a : pipeline.getStateAtKey(stateKey)) !== null && _b !== void 0 ? _b : opts.defaultSizes) !== null && _c !== void 0 ? _c : [];\n    const leafColumns = collectNodes(pipeline.getColumns(), 'leaf-only');\n    leafColumns.forEach((col, colIndex) => {\n      if (sizes[colIndex] == null) {\n        if (typeof col.width === 'number') {\n          sizes[colIndex] = col.width;\n        } else {\n          sizes[colIndex] = fallbackSize;\n        }\n      }\n    });\n\n    const onChangeSizes = nextSizes => {\n      var _a;\n\n      pipeline.setStateAtKey(stateKey, nextSizes);\n      (_a = opts.onChangeSizes) === null || _a === void 0 ? void 0 : _a.call(opts, nextSizes);\n    };\n\n    const startResize = (startIndex, endIndex, e) => {\n      const startX = e.clientX;\n      const target = e.target;\n      const nextSizes$ = fromEvent(window, 'mousemove').pipe(op.takeUntil(fromEvent(window, 'mouseup')), op.map(e => {\n        const movingX = e.clientX;\n        const nextSizes = sizes.slice();\n        const deltaSum = movingX - startX;\n        const sizeSum = sizes.slice(startIndex, endIndex).reduce((sum, s) => sum + s, 0);\n        let deltaRemaining = deltaSum;\n\n        for (let colIndex = startIndex; colIndex < endIndex - 1; colIndex++) {\n          const startSize = sizes[colIndex]; // 将每一列的宽度变化量 都四舍五入至 整数，不然看起来非常难受\n\n          const colDelta = Math.round(deltaSum * (startSize / sizeSum));\n          nextSizes[colIndex] = clamp(minSize, startSize + colDelta, maxSize);\n          deltaRemaining -= colDelta;\n        } // 因为前面的列宽都进行了四舍五入，最后一列的变化量需要使用 deltaRemaining 以避免误差\n\n\n        nextSizes[endIndex - 1] = clamp(minSize, sizes[endIndex - 1] + deltaRemaining, maxSize);\n        return nextSizes;\n      }));\n      let prevUserSelect = '';\n      let docElemStyle;\n\n      if (disableUserSelectWhenResizing) {\n        docElemStyle = document.documentElement.style;\n        prevUserSelect = docElemStyle.userSelect;\n        docElemStyle.userSelect = 'none';\n      }\n\n      if (opts.handleActiveBackground) {\n        target.style.background = opts.handleActiveBackground;\n      }\n\n      nextSizes$.subscribe({\n        next: onChangeSizes,\n\n        complete() {\n          if (disableUserSelectWhenResizing) {\n            docElemStyle.userSelect = prevUserSelect;\n          }\n\n          if (opts.handleActiveBackground) {\n            target.style.background = '';\n          }\n        }\n\n      });\n    };\n\n    return pipeline.mapColumns(makeRecursiveMapper((col, _ref19) => {\n      let {\n        startIndex,\n        endIndex\n      } = _ref19;\n      const prevTitle = internals.safeRenderHeader(col);\n      return Object.assign(Object.assign({}, col), {\n        width: sizes[startIndex],\n        title: React.createElement(React.Fragment, null, prevTitle, React.createElement(ResizeHandle, {\n          className: \"resize-handle\",\n          \"var-handleBackground\": opts.handleBackground,\n          \"var-handleHoverBackground\": opts.handleHoverBackground,\n          onMouseDown: e => startResize(startIndex, endIndex, e)\n        })),\n        headerCellProps: mergeCellProps(col.headerCellProps, {\n          style: {\n            overflow: 'visible',\n            position: 'relative'\n          }\n        })\n      });\n    }));\n  };\n}\n\nfunction multiSelect() {\n  let opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return function multiSelectStep(pipeline) {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l;\n\n    const stateKey = 'multiSelect';\n    const Checkbox = pipeline.ctx.components.Checkbox;\n\n    if (Checkbox == null) {\n      throw new Error('使用 multiSelect 之前需要设置 pipeline.ctx.components.Checkbox');\n    }\n\n    const primaryKey = pipeline.ensurePrimaryKey('multiSelect');\n    const isDisabled = (_a = opts.isDisabled) !== null && _a !== void 0 ? _a : always(false);\n    const clickArea = (_b = opts.clickArea) !== null && _b !== void 0 ? _b : 'checkbox';\n    const value = (_f = (_e = (_c = opts.value) !== null && _c !== void 0 ? _c : (_d = pipeline.getStateAtKey(stateKey)) === null || _d === void 0 ? void 0 : _d.value) !== null && _e !== void 0 ? _e : opts.defaultValue) !== null && _f !== void 0 ? _f : [];\n    const lastKey = (_k = (_j = (_g = opts.lastKey) !== null && _g !== void 0 ? _g : (_h = pipeline.getStateAtKey(stateKey)) === null || _h === void 0 ? void 0 : _h.lastKey) !== null && _j !== void 0 ? _j : opts.defaultLastKey) !== null && _k !== void 0 ? _k : '';\n\n    const onChange = (nextValue, key, keys, action) => {\n      var _a;\n\n      (_a = opts.onChange) === null || _a === void 0 ? void 0 : _a.call(opts, nextValue, key, keys, action);\n      pipeline.setStateAtKey(stateKey, {\n        value: nextValue,\n        lastKey: key\n      }, {\n        keys,\n        action\n      });\n    };\n\n    const dataSource = pipeline.getDataSource();\n    /** dataSource 中包含的所有 keys */\n\n    const fullKeySet = new Set();\n    /** 所有有效的 keys（disable 状态为 false） */\n\n    const allKeys = [];\n    dataSource.forEach((row, rowIndex) => {\n      const rowKey = internals.safeGetRowKey(primaryKey, row, rowIndex);\n      fullKeySet.add(rowKey); // 在 allKeys 中排除被禁用的 key\n\n      if (!isDisabled(row, rowIndex)) {\n        allKeys.push(rowKey);\n      }\n    });\n    const set = new Set(value);\n    const isAllChecked = allKeys.length > 0 && allKeys.every(key => set.has(key));\n    const isAnyChecked = allKeys.some(key => set.has(key));\n    const defaultCheckboxColumnTitle = React.createElement(Checkbox, {\n      checked: isAllChecked,\n      indeterminate: !isAllChecked && isAnyChecked,\n      onChange: _ => {\n        if (isAllChecked) {\n          onChange(arrayUtils.diff(value, allKeys), '', allKeys, 'uncheck-all');\n        } else {\n          onChange(arrayUtils.merge(value, allKeys), '', allKeys, 'check-all');\n        }\n      }\n    });\n    const checkboxColumn = Object.assign(Object.assign({\n      name: '是否选中',\n      title: defaultCheckboxColumnTitle,\n      width: 50,\n      align: 'center'\n    }, opts.checkboxColumn), {\n      getCellProps(value, row, rowIndex) {\n        const rowKey = internals.safeGetRowKey(primaryKey, row, rowIndex);\n\n        if (fullKeySet.has(rowKey) && clickArea === 'cell') {\n          const prevChecked = set.has(rowKey);\n          const disabled = isDisabled(row, rowIndex);\n          return {\n            style: {\n              cursor: disabled ? 'not-allowed' : 'pointer'\n            },\n            onClick: disabled ? undefined : e => {\n              if (opts.stopClickEventPropagation) {\n                e.stopPropagation();\n              }\n\n              onCheckboxChange(prevChecked, rowKey, e.shiftKey);\n            }\n          };\n        }\n      },\n\n      render(_, row, rowIndex) {\n        const key = internals.safeGetRowKey(primaryKey, row, rowIndex);\n        const checked = set.has(key);\n        return React.createElement(Checkbox, {\n          checked: checked,\n          disabled: isDisabled(row, rowIndex),\n          onChange: clickArea === 'checkbox' ? (arg1, arg2) => {\n            var _a; // 这里要同时兼容 antd 和 fusion 的用法\n            // fusion: arg2?.nativeEvent\n            // antd: arg1.nativeEvent\n\n\n            const nativeEvent = (_a = arg2 === null || arg2 === void 0 ? void 0 : arg2.nativeEvent) !== null && _a !== void 0 ? _a : arg1.nativeEvent;\n\n            if (nativeEvent) {\n              if (opts.stopClickEventPropagation) {\n                nativeEvent.stopPropagation();\n              }\n\n              onCheckboxChange(checked, key, nativeEvent.shiftKey);\n            }\n          } : undefined\n        });\n      }\n\n    });\n    const nextColumns = pipeline.getColumns().slice();\n    const checkboxPlacement = (_l = opts.checkboxPlacement) !== null && _l !== void 0 ? _l : 'start';\n\n    if (checkboxPlacement === 'start') {\n      nextColumns.unshift(checkboxColumn);\n    } else {\n      nextColumns.push(checkboxColumn);\n    }\n\n    pipeline.columns(nextColumns);\n    pipeline.appendRowPropsGetter((row, rowIndex) => {\n      const rowKey = internals.safeGetRowKey(primaryKey, row, rowIndex);\n\n      if (!fullKeySet.has(rowKey)) {\n        // rowKey 不在 fullKeySet 中说明这一行是在 multiSelect 之后才生成的，multiSelect 不对之后生成的行进行处理\n        return;\n      }\n\n      let style = {};\n      let className;\n      let onClick;\n      const checked = set.has(rowKey);\n\n      if (opts.highlightRowWhenSelected && checked) {\n        className = 'highlight';\n      }\n\n      if (clickArea === 'row') {\n        const disabled = isDisabled(row, rowIndex);\n\n        if (!disabled) {\n          style.cursor = 'pointer';\n\n          onClick = e => {\n            if (opts.stopClickEventPropagation) {\n              e.stopPropagation();\n            }\n\n            onCheckboxChange(checked, rowKey, e.shiftKey);\n          };\n        }\n      }\n\n      return {\n        className,\n        style,\n        onClick\n      };\n    });\n    return pipeline;\n\n    function onCheckboxChange(prevChecked, key, batch) {\n      let batchKeys = [key];\n\n      if (batch && lastKey) {\n        const lastIdx = allKeys.indexOf(lastKey);\n        const cntIdx = allKeys.indexOf(key);\n        const [start, end] = lastIdx < cntIdx ? [lastIdx, cntIdx] : [cntIdx, lastIdx];\n        batchKeys = allKeys.slice(start, end + 1);\n      }\n\n      if (prevChecked) {\n        onChange(arrayUtils.diff(value, batchKeys), key, batchKeys, 'uncheck');\n      } else {\n        onChange(arrayUtils.merge(value, batchKeys), key, batchKeys, 'check');\n      }\n    }\n  };\n}\n\nconst rowDetailSymbol = Symbol('row-detail');\n\nconst fallbackRenderDetail = () => React.createElement(\"div\", {\n  style: {\n    margin: '8px 24px'\n  }\n}, React.createElement(\"b\", {\n  style: {\n    color: 'indianred'\n  }\n}, \"\\u8BBE\\u7F6E \", React.createElement(\"code\", null, \"rowDetail.renderDetail\"), \" \\u6765\\u81EA\\u5B9A\\u4E49\\u8BE6\\u60C5\\u5185\\u5BB9\"));\n\nfunction rowDetail() {\n  let opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return function rowDetailStep(pipeline) {\n    var _a, _b, _c, _d, _e, _f, _g, _h;\n\n    const stateKey = 'rowDetail';\n    const primaryKey = pipeline.ensurePrimaryKey('rowDetail');\n\n    if (typeof primaryKey !== 'string') {\n      throw new Error('rowDetail 仅支持字符串作为 primaryKey');\n    }\n\n    const rowDetailMetaKey = (_a = opts.rowDetailMetaKey) !== null && _a !== void 0 ? _a : rowDetailSymbol;\n    const indents = pipeline.ctx.indents;\n    const textOffset = indents.iconIndent + indents.iconWidth + indents.iconGap;\n    const clickArea = (_b = opts.clickArea) !== null && _b !== void 0 ? _b : 'cell';\n    const getDetailKey = (_c = opts.getDetailKey) !== null && _c !== void 0 ? _c : row => row[primaryKey] + '_detail';\n    const renderDetail = (_d = opts.renderDetail) !== null && _d !== void 0 ? _d : fallbackRenderDetail;\n    const hasDetail = (_e = opts.hasDetail) !== null && _e !== void 0 ? _e : always(true);\n    const openKeys = (_h = (_g = (_f = opts.openKeys) !== null && _f !== void 0 ? _f : pipeline.getStateAtKey(stateKey)) !== null && _g !== void 0 ? _g : opts.defaultOpenAll ? pipeline.getDataSource().filter(hasDetail).map(row => row[primaryKey]) : opts.defaultOpenKeys) !== null && _h !== void 0 ? _h : [];\n\n    const onChangeOpenKeys = (nextKeys, key, action) => {\n      var _a;\n\n      (_a = opts.onChangeOpenKeys) === null || _a === void 0 ? void 0 : _a.call(opts, nextKeys, key, action);\n      pipeline.setStateAtKey(stateKey, nextKeys, {\n        key,\n        action\n      });\n    };\n\n    const openKeySet = new Set(openKeys);\n\n    const toggle = rowKey => {\n      const expanded = openKeySet.has(rowKey);\n\n      if (expanded) {\n        onChangeOpenKeys(openKeys.filter(key => key !== rowKey), rowKey, 'collapse');\n      } else {\n        onChangeOpenKeys([...openKeys, rowKey], rowKey, 'expand');\n      }\n    };\n\n    return pipeline.dataSource(flatMap(pipeline.getDataSource(), (row, rowIndex) => {\n      if (openKeySet.has(row[primaryKey])) {\n        return [row, Object.assign(Object.assign({\n          [rowDetailMetaKey]: true\n        }, row), {\n          [primaryKey]: getDetailKey(row, rowIndex)\n        })];\n      } else {\n        return [row];\n      }\n    })).columns(processColumns(pipeline.getColumns())).appendRowPropsGetter(row => {\n      if (row[rowDetailMetaKey]) {\n        return {\n          className: 'no-hover'\n        };\n      }\n    });\n\n    function processColumns(columns) {\n      if (columns.length === 0) {\n        return columns;\n      }\n\n      const columnFlatCount = collectNodes(columns, 'leaf-only').length;\n      const [firstCol, ...others] = columns;\n\n      const render = (value, row, rowIndex) => {\n        if (row[rowDetailMetaKey]) {\n          return renderDetail(row, rowIndex);\n        }\n\n        const content = internals.safeRender(firstCol, row, rowIndex);\n\n        if (!hasDetail(row, rowIndex)) {\n          return React.createElement(InlineFlexCell, {\n            style: {\n              marginLeft: textOffset\n            }\n          }, content);\n        }\n\n        const rowKey = row[primaryKey];\n        const expanded = openKeySet.has(rowKey);\n\n        const onClick = e => {\n          if (opts.stopClickEventPropagation) {\n            e.stopPropagation();\n          }\n\n          toggle(rowKey);\n        };\n\n        const expandCls = expanded ? 'expanded' : 'collapsed';\n        return React.createElement(ExpansionCell, {\n          className: cx('expansion-cell', expandCls),\n          style: {\n            cursor: clickArea === 'content' ? 'pointer' : undefined\n          },\n          onClick: clickArea === 'content' ? onClick : undefined\n        }, React.createElement(icons.CaretRight, {\n          style: {\n            cursor: clickArea === 'icon' ? 'pointer' : undefined,\n            marginLeft: indents.iconIndent,\n            marginRight: indents.iconGap\n          },\n          className: cx('expansion-icon', expandCls),\n          onClick: clickArea === 'icon' ? onClick : undefined\n        }), content);\n      };\n\n      const getCellProps = (value, row, rowIndex) => {\n        var _a;\n\n        if (row[rowDetailMetaKey]) {\n          return {\n            style: Object.assign({\n              '--cell-padding': '0',\n              overflow: 'hidden'\n            }, opts.detailCellStyle)\n          };\n        }\n\n        const prevProps = (_a = firstCol.getCellProps) === null || _a === void 0 ? void 0 : _a.call(firstCol, value, row, rowIndex);\n\n        if (!hasDetail(row, rowIndex)) {\n          return prevProps;\n        }\n\n        return mergeCellProps(prevProps, {\n          onClick(e) {\n            if (opts.stopClickEventPropagation) {\n              e.stopPropagation();\n            }\n\n            toggle(row[primaryKey]);\n          },\n\n          style: {\n            cursor: 'pointer'\n          }\n        });\n      };\n\n      return [Object.assign(Object.assign({}, firstCol), {\n        title: React.createElement(\"div\", {\n          style: {\n            display: 'inline-block',\n            marginLeft: textOffset\n          }\n        }, internals.safeRenderHeader(firstCol)),\n        render,\n        getCellProps: clickArea === 'cell' ? getCellProps : firstCol.getCellProps,\n\n        getSpanRect(value, row, rowIndex) {\n          if (row[rowDetailMetaKey]) {\n            // detail 总是成一行\n            return {\n              top: rowIndex,\n              bottom: rowIndex + 1,\n              left: 0,\n              right: columnFlatCount\n            };\n          }\n        }\n\n      }), ...others];\n    }\n  };\n}\n\nconst groupingMetaSymbol = Symbol('row-grouping-meta');\n\nfunction attachGroupingMeta(row) {\n  return Object.assign({\n    [groupingMetaSymbol]: {\n      expandable: !isLeafNode(row)\n    }\n  }, row);\n}\n\nfunction getGroupingMeta(row) {\n  if (row[groupingMetaSymbol] == null) {\n    return {\n      isGroupHeader: false,\n      expandable: false\n    };\n  }\n\n  return {\n    isGroupHeader: true,\n    expandable: row[groupingMetaSymbol].expandable\n  };\n}\n\nfunction rowGroupingRowPropsGetter(row) {\n  if (getGroupingMeta(row).isGroupHeader) {\n    return {\n      className: 'alternative'\n    };\n  }\n}\n\nfunction rowGrouping() {\n  let opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return pipeline => {\n    var _a, _b, _c;\n\n    const stateKey = 'rowGrouping';\n    const indents = pipeline.ctx.indents;\n    const textOffset = indents.iconIndent + indents.iconWidth + indents.iconGap;\n    const primaryKey = pipeline.ensurePrimaryKey('rowGrouping');\n\n    if (typeof primaryKey !== 'string') {\n      throw new Error('rowGrouping 仅支持字符串作为 primaryKey');\n    }\n\n    const openKeys = (_c = (_b = (_a = opts.openKeys) !== null && _a !== void 0 ? _a : pipeline.getStateAtKey(stateKey)) !== null && _b !== void 0 ? _b : opts.defaultOpenAll ? pipeline.getDataSource().map(row => row[primaryKey]) : opts.defaultOpenKeys) !== null && _c !== void 0 ? _c : [];\n    const openKeySet = new Set(openKeys);\n\n    const onChangeOpenKeys = (nextKeys, key, action) => {\n      var _a;\n\n      (_a = opts.onChangeOpenKeys) === null || _a === void 0 ? void 0 : _a.call(opts, nextKeys, key, action);\n      pipeline.setStateAtKey(stateKey, nextKeys, {\n        key,\n        action\n      });\n    };\n\n    return pipeline.mapDataSource(processDataSource).mapColumns(processColumns).appendRowPropsGetter(rowGroupingRowPropsGetter);\n\n    function processDataSource(input) {\n      return flatMap(input, row => {\n        let result = [attachGroupingMeta(row)];\n        const expanded = openKeySet.has(row[primaryKey]);\n\n        if (expanded) {\n          if (Array.isArray(row.children)) {\n            result = result.concat(row.children);\n          }\n        }\n\n        return result;\n      });\n    }\n\n    function processColumns(columns) {\n      if (columns.length === 0) {\n        return columns;\n      }\n\n      const columnFlatCount = collectNodes(columns, 'leaf-only').length;\n      const [firstCol, ...others] = columns;\n\n      const render = (value, row, rowIndex) => {\n        var _a, _b;\n\n        const content = internals.safeRender(firstCol, row, rowIndex);\n        const meta = getGroupingMeta(row);\n\n        if (!meta.isGroupHeader || !meta.expandable) {\n          const marginLeft = textOffset + (meta.isGroupHeader ? 0 : indents.indentSize);\n          return React.createElement(InlineFlexCell, {\n            style: {\n              marginLeft\n            }\n          }, meta.isGroupHeader ? (_a = row.groupTitle) !== null && _a !== void 0 ? _a : content : content);\n        }\n\n        const expanded = openKeySet.has(row[primaryKey]);\n        const expandCls = expanded ? 'expanded' : 'collapsed';\n        return React.createElement(ExpansionCell, {\n          className: cx('expansion-cell', expandCls)\n        }, React.createElement(icons.CaretRight, {\n          className: cx('expansion-icon', expandCls),\n          style: {\n            marginLeft: indents.iconIndent,\n            marginRight: indents.iconGap\n          }\n        }), (_b = row.groupTitle) !== null && _b !== void 0 ? _b : content);\n      };\n\n      const getCellProps = (value, row, rowIndex) => {\n        var _a;\n\n        const meta = getGroupingMeta(row);\n\n        if (!meta.isGroupHeader) {\n          return;\n        }\n\n        const {\n          expandable\n        } = meta;\n        const rowKey = row[primaryKey];\n        const expanded = openKeySet.has(rowKey);\n        let onClick;\n\n        if (expandable) {\n          onClick = e => {\n            if (opts.stopClickEventPropagation) {\n              e.stopPropagation();\n            }\n\n            if (expanded) {\n              onChangeOpenKeys(openKeys.filter(key => key !== rowKey), rowKey, 'collapse');\n            } else {\n              onChangeOpenKeys([...openKeys, rowKey], rowKey, 'expand');\n            }\n          };\n        }\n\n        const prevProps = (_a = firstCol.getCellProps) === null || _a === void 0 ? void 0 : _a.call(firstCol, value, row, rowIndex);\n        return mergeCellProps(prevProps, {\n          onClick,\n          style: {\n            cursor: expandable ? 'pointer' : undefined\n          }\n        });\n      };\n\n      return [Object.assign(Object.assign({}, firstCol), {\n        title: React.createElement(\"div\", {\n          style: {\n            display: 'inline-block',\n            marginLeft: textOffset\n          }\n        }, internals.safeRenderHeader(firstCol)),\n        render,\n        getCellProps,\n\n        getSpanRect(value, row, rowIndex) {\n          if (getGroupingMeta(row).isGroupHeader) {\n            return {\n              top: rowIndex,\n              bottom: rowIndex + 1,\n              left: 0,\n              right: columnFlatCount\n            };\n          }\n        }\n\n      }), ...others];\n    }\n  };\n}\n\nfunction getFirstDefinedValue() {\n  for (let i = 0; i < arguments.length; i++) {\n    const v = i < 0 || arguments.length <= i ? undefined : arguments[i];\n\n    if (v !== undefined) {\n      return v;\n    }\n  }\n}\n\nfunction singleSelect() {\n  let opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return function singleSelectStep(pipeline) {\n    var _a, _b, _c;\n\n    const Radio = pipeline.ctx.components.Radio;\n\n    if (Radio == null) {\n      throw new Error('使用 singleSelect 之前需要通过 pipeline context 设置 components.Radio');\n    }\n\n    const stateKey = 'singleSelect';\n    const clickArea = (_a = opts.clickArea) !== null && _a !== void 0 ? _a : 'radio';\n    const isDisabled = (_b = opts.isDisabled) !== null && _b !== void 0 ? _b : always(false);\n    const primaryKey = pipeline.ensurePrimaryKey('singleSelect');\n    const value = getFirstDefinedValue(opts.value, pipeline.getStateAtKey(stateKey), opts.defaultValue);\n\n    const onChange = rowKey => {\n      var _a;\n\n      (_a = opts.onChange) === null || _a === void 0 ? void 0 : _a.call(opts, rowKey);\n      pipeline.setStateAtKey(stateKey, rowKey);\n    };\n\n    const radioColumn = Object.assign(Object.assign({\n      name: '',\n      width: 50,\n      align: 'center'\n    }, opts.radioColumn), {\n      getCellProps(value, row, rowIndex) {\n        if (clickArea === 'cell') {\n          const rowKey = internals.safeGetRowKey(primaryKey, row, rowIndex);\n          const disabled = isDisabled(row, rowIndex);\n          return {\n            style: {\n              cursor: disabled ? 'not-allowed' : 'pointer'\n            },\n            onClick: disabled ? undefined : e => {\n              if (opts.stopClickEventPropagation) {\n                e.stopPropagation();\n              }\n\n              onChange(rowKey);\n            }\n          };\n        }\n      },\n\n      render: (_, row, rowIndex) => {\n        const rowKey = internals.safeGetRowKey(primaryKey, row, rowIndex);\n        return React.createElement(Radio, {\n          checked: value === rowKey,\n          disabled: isDisabled(row, rowIndex),\n          onChange: clickArea === 'radio' ? (arg1, arg2) => {\n            var _a;\n\n            const nativeEvent = (_a = arg2 === null || arg2 === void 0 ? void 0 : arg2.nativeEvent) !== null && _a !== void 0 ? _a : arg1 === null || arg1 === void 0 ? void 0 : arg1.nativeEvent;\n\n            if (nativeEvent && opts.stopClickEventPropagation) {\n              nativeEvent.stopPropagation();\n            }\n\n            onChange(rowKey);\n          } : undefined\n        });\n      }\n    });\n    const nextColumns = pipeline.getColumns().slice();\n    const radioPlacement = (_c = opts.radioPlacement) !== null && _c !== void 0 ? _c : 'start';\n\n    if (radioPlacement === 'start') {\n      nextColumns.unshift(radioColumn);\n    } else {\n      nextColumns.push(radioColumn);\n    }\n\n    pipeline.columns(nextColumns);\n    pipeline.appendRowPropsGetter((row, rowIndex) => {\n      const rowKey = internals.safeGetRowKey(primaryKey, row, rowIndex);\n      let style = {};\n      let className;\n      let onClick;\n\n      if (opts.highlightRowWhenSelected) {\n        if (value === rowKey) {\n          className = 'highlight';\n        }\n      }\n\n      if (clickArea === 'row' && !isDisabled(row, rowIndex)) {\n        style.cursor = 'pointer';\n\n        onClick = e => {\n          if (opts.stopClickEventPropagation) {\n            e.stopPropagation();\n          }\n\n          onChange(rowKey);\n        };\n      }\n\n      return {\n        className,\n        style,\n        onClick\n      };\n    });\n    return pipeline;\n  };\n}\n\nfunction SortIcon(_ref20) {\n  let {\n    size = 32,\n    style,\n    className,\n    order,\n    onClick\n  } = _ref20;\n  return React.createElement(\"svg\", {\n    style: style,\n    className: className,\n    focusable: \"false\",\n    preserveAspectRatio: \"xMidYMid meet\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 32 32\",\n    \"aria-hidden\": \"true\",\n    onClick: onClick\n  }, React.createElement(\"path\", {\n    fill: order === 'asc' ? '#23A3FF' : '#bfbfbf',\n    transform: \"translate(0, 4)\",\n    d: \"M8 8L16 0 24 8z\"\n  }), React.createElement(\"path\", {\n    fill: order === 'desc' ? '#23A3FF' : '#bfbfbf',\n    transform: \"translate(0, -4)\",\n    d: \"M24 24L16 32 8 24z \"\n  }));\n}\n\nfunction DefaultSortHeaderCell(_ref21) {\n  let {\n    children,\n    column,\n    onToggle,\n    sortOrder,\n    sortIndex,\n    sortOptions,\n    clickArea\n  } = _ref21;\n  // 通过 justify-content 来与 col.align 保持对齐方向一致\n  const justifyContent = column.align === 'right' ? 'flex-end' : column.align === 'center' ? 'center' : 'flex-start';\n  return React.createElement(TableHeaderCell, {\n    onClick: clickArea === 'content' ? onToggle : undefined,\n    style: {\n      justifyContent,\n      cursor: clickArea === 'content' ? 'pointer' : undefined\n    }\n  }, children, React.createElement(SortIcon, {\n    onClick: clickArea === 'icon' ? onToggle : undefined,\n    style: {\n      userSelect: 'none',\n      marginLeft: 2,\n      flexShrink: 0,\n      cursor: clickArea === 'icon' ? 'pointer' : undefined\n    },\n    size: 16,\n    order: sortOrder\n  }), sortOptions.mode === 'multiple' && sortIndex != -1 && React.createElement(\"div\", {\n    style: {\n      userSelect: 'none',\n      marginLeft: 2,\n      color: '#666',\n      flex: '0 0 auto',\n      fontSize: 10,\n      fontFamily: 'monospace'\n    }\n  }, sortIndex + 1));\n}\n\nfunction hasAnySortableColumns(cols) {\n  return cols.some(col => {\n    var _a;\n\n    return Boolean((_a = col.features) === null || _a === void 0 ? void 0 : _a.sortable) || !isLeafNode(col) && hasAnySortableColumns(col.children);\n  });\n}\n\nconst TableHeaderCell = styled__default.div`\n  display: flex;\n  align-items: center;\n`;\nconst stateKey = 'sort';\n\nfunction sort() {\n  let opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return function sortStep(pipeline) {\n    var _a, _b, _c;\n\n    const {\n      orders = ['desc', 'asc', 'none'],\n      mode = 'multiple',\n      SortHeaderCell = DefaultSortHeaderCell,\n      keepDataSource,\n      highlightColumnWhenActive,\n      stopClickEventPropagation,\n      clickArea = 'content'\n    } = opts;\n    const inputSorts = (_c = (_b = (_a = opts.sorts) !== null && _a !== void 0 ? _a : pipeline.getStateAtKey(stateKey)) !== null && _b !== void 0 ? _b : opts.defaultSorts) !== null && _c !== void 0 ? _c : [];\n    const activeSorts = inputSorts.filter(s => s.order !== 'none'); // 单字段排序的情况下 sorts 中只有第一个排序字段才会生效\n\n    const sorts = mode === 'multiple' ? activeSorts : activeSorts.slice(0, 1);\n\n    const onChangeSortsInMultipleMode = nextSorts => {\n      var _a;\n\n      (_a = opts.onChangeSorts) === null || _a === void 0 ? void 0 : _a.call(opts, nextSorts);\n      pipeline.setStateAtKey(stateKey, nextSorts);\n    };\n\n    const onChangeSorts = mode === 'multiple' ? onChangeSortsInMultipleMode : nextSorts => {\n      // 单字段排序的情况下，nextSorts 中只有最后一个排序字段才会生效\n      const len = nextSorts.length;\n      onChangeSortsInMultipleMode(nextSorts.slice(len - 1));\n    };\n    const sortOptions = {\n      sorts,\n      onChangeSorts,\n      orders,\n      mode,\n      keepDataSource,\n      highlightColumnWhenActive,\n      stopClickEventPropagation,\n      clickArea\n    };\n    const sortMap = new Map(sorts.map((sort, index) => [sort.code, Object.assign({\n      index\n    }, sort)]));\n    const dataSource = pipeline.getDataSource();\n    const columns = pipeline.getColumns();\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!hasAnySortableColumns(columns)) {\n        console.warn('[ali-react-table] commonTransform.sort 缺少可排序的列，请通过 column.features.sortable 来指定哪些列可排序', columns);\n      }\n    }\n\n    pipeline.dataSource(processDataSource(dataSource));\n    pipeline.columns(processColumns(columns));\n    return pipeline;\n\n    function processDataSource(dataSource) {\n      if (keepDataSource) {\n        return dataSource;\n      }\n\n      const sortColumnsMap = new Map(collectNodes(columns, 'leaf-only').filter(col => {\n        var _a, _b;\n\n        return ((_a = col.features) === null || _a === void 0 ? void 0 : _a.sortable) !== false && ((_b = col.features) === null || _b === void 0 ? void 0 : _b.sortable) != null;\n      }).map(col => [col.code, col]));\n      return layeredSort(dataSource, (x, y) => {\n        for (const {\n          code,\n          order\n        } of sorts) {\n          const column = sortColumnsMap.get(code); // 如果 code 对应的 column 不可排序，我们跳过该 code\n\n          if (column == null) {\n            continue;\n          }\n\n          const sortable = column.features.sortable;\n          const compareFn = typeof sortable === 'function' ? sortable : smartCompare;\n          const xValue = internals.safeGetValue(column, x, -1);\n          const yValue = internals.safeGetValue(column, y, -1);\n          const cmp = compareFn(xValue, yValue, x, y);\n\n          if (cmp !== 0) {\n            return cmp * (order === 'asc' ? 1 : -1);\n          }\n        }\n\n        return 0;\n      });\n    } // 在「升序 - 降序 - 不排序」之间不断切换\n\n\n    function toggle(code) {\n      const sort = sortMap.get(code);\n\n      if (sort == null) {\n        onChangeSorts(sorts.concat([{\n          code,\n          order: orders[0]\n        }]));\n      } else {\n        const index = sorts.findIndex(s => s.code === code);\n        const nextSorts = sorts.slice(0, index + 1);\n        const nextOrder = getNextOrder(sort.order);\n\n        if (nextOrder === 'none') {\n          nextSorts.pop();\n        } else {\n          nextSorts[index] = Object.assign(Object.assign({}, nextSorts[index]), {\n            order: nextOrder\n          });\n        }\n\n        onChangeSorts(nextSorts);\n      }\n    }\n\n    function processColumns(columns) {\n      return columns.map(dfs);\n\n      function dfs(col) {\n        var _a;\n\n        const result = Object.assign({}, col);\n        const sortable = col.code && (((_a = col.features) === null || _a === void 0 ? void 0 : _a.sortable) || sortMap.has(col.code));\n        const active = sortable && sortMap.has(col.code);\n\n        if (sortable) {\n          let sortIndex = -1;\n          let sortOrder = 'none';\n\n          if (active) {\n            const {\n              order,\n              index\n            } = sortMap.get(col.code);\n            sortOrder = order;\n            sortIndex = index;\n\n            if (highlightColumnWhenActive) {\n              result.headerCellProps = mergeCellProps(col.headerCellProps, {\n                style: {\n                  background: 'var(--header-highlight-bgcolor)'\n                }\n              });\n\n              result.getCellProps = (value, row, rowIndex) => {\n                const prevCellProps = internals.safeGetCellProps(col, row, rowIndex);\n                return mergeCellProps(prevCellProps, {\n                  style: {\n                    background: 'var(--highlight-bgcolor)'\n                  }\n                });\n              };\n            }\n          }\n\n          result.title = React.createElement(SortHeaderCell, {\n            clickArea: clickArea,\n            onToggle: e => {\n              if (stopClickEventPropagation) {\n                e.stopPropagation();\n              }\n\n              toggle(col.code);\n            },\n            sortOrder: sortOrder,\n            column: col,\n            sortIndex: sortIndex,\n            sortOptions: sortOptions\n          }, internals.safeRenderHeader(col));\n        }\n\n        if (!isLeafNode(col)) {\n          result.children = col.children.map(dfs);\n        }\n\n        return result;\n      }\n    }\n\n    function getNextOrder(order) {\n      const idx = orders.indexOf(order);\n      return orders[idx === orders.length - 1 ? 0 : idx + 1];\n    }\n  };\n}\n\nconst HeaderCellWithTips = styled__default.div`\n  display: flex;\n  align-items: center;\n\n  .tip-icon-wrapper {\n    margin-left: 2px;\n  }\n\n  .tip-icon {\n    display: flex;\n    fill: currentColor;\n  }\n`;\n\nfunction tips() {\n  return function tipsSteap(pipeline) {\n    const Balloon = pipeline.ctx.components.Balloon;\n    const Tooltip = pipeline.ctx.components.Tooltip;\n\n    if (Balloon == null && Tooltip == null) {\n      throw new Error('使用 tips 之前需要通过 pipeline context 设置 components.Balloon / components.Tooltip');\n    }\n\n    return pipeline.mapColumns(makeRecursiveMapper(col => {\n      var _a;\n\n      if (!((_a = col.features) === null || _a === void 0 ? void 0 : _a.tips)) {\n        return col;\n      }\n\n      const justifyContent = col.align === 'right' ? 'flex-end' : col.align === 'center' ? 'center' : 'flex-start';\n      return Object.assign(Object.assign({}, col), {\n        title: React.createElement(HeaderCellWithTips, {\n          style: {\n            justifyContent\n          }\n        }, internals.safeRenderHeader(col), Balloon ? // fusion/hippo\n        React.createElement(Balloon, {\n          closable: false,\n          trigger: React.createElement(\"div\", {\n            className: \"tip-icon-wrapper\"\n          }, React.createElement(icons.Info, {\n            className: \"tip-icon\"\n          }))\n        }, col.features.tips) : // antd\n        React.createElement(Tooltip, {\n          title: col.features.tips\n        }, React.createElement(\"div\", {\n          className: \"tip-icon-wrapper\"\n        }, React.createElement(icons.Info, {\n          className: \"tip-icon\"\n        }))))\n      });\n    }));\n  };\n}\n\nclass Wrapper$1 {\n  constructor(input) {\n    Object.assign(this, input);\n  }\n\n}\n\nclass StrictTreeDataHelper {\n  constructor(opts) {\n    this.opts = opts;\n    this.valueSet = new Set(opts.value);\n    this.initWrapperTree();\n  }\n\n  initWrapperTree() {\n    const {\n      getNodeValue\n    } = this.opts;\n    this.rootWrapper = new Wrapper$1({\n      root: true,\n      children: []\n    });\n    this.wrapperMap = new Map();\n\n    const dfs = (parentWrapper, nodes) => {\n      for (const node of nodes) {\n        const wrapper = new Wrapper$1({\n          parent: parentWrapper,\n          node,\n          checked: this.valueSet.has(getNodeValue(node))\n        });\n        this.wrapperMap.set(getNodeValue(node), wrapper);\n        parentWrapper.children.push(wrapper);\n\n        if (!isLeafNode(node)) {\n          wrapper.children = [];\n          dfs(wrapper, node.children);\n        }\n      }\n    };\n\n    dfs(this.rootWrapper, this.opts.tree);\n  }\n\n  get value() {\n    return this.opts.value;\n  }\n\n  isIndeterminate(nodeValue) {\n    return false;\n  }\n\n  isChecked(nodeValue) {\n    return this.valueSet.has(nodeValue);\n  }\n\n  getValueAfterCheck(nodeValue) {\n    if (!this.isChecked(nodeValue)) {\n      return arrayUtils.merge(this.value, [nodeValue]);\n    }\n\n    return this.value;\n  }\n\n  getValueAfterUncheck(nodeValue) {\n    if (this.isChecked(nodeValue)) {\n      return arrayUtils.diff(this.value, [nodeValue]);\n    }\n\n    return this.value;\n  }\n\n  getValueAfterToggle(nodeValue) {\n    if (this.isChecked(nodeValue)) {\n      return this.getValueAfterUncheck(nodeValue);\n    } else {\n      return this.getValueAfterCheck(nodeValue);\n    }\n  }\n\n  getNode(nodeValue) {\n    var _a;\n\n    return (_a = this.wrapperMap.get(nodeValue)) === null || _a === void 0 ? void 0 : _a.node;\n  }\n\n  getCleanValue() {\n    return this.value;\n  }\n\n}\n\nclass Wrapper {\n  constructor(input) {\n    Object.assign(this, input);\n  }\n\n}\n\nclass TreeDataHelper {\n  constructor(opts) {\n    this.isDetached = node => {\n      var _a, _b, _c;\n\n      return (_c = (_b = (_a = this.opts).isDetached) === null || _b === void 0 ? void 0 : _b.call(_a, node)) !== null && _c !== void 0 ? _c : false;\n    };\n\n    this.opts = opts;\n    this.valueSet = new Set(opts.value);\n    this.initWrapperTree();\n  }\n\n  get value() {\n    return this.opts.value;\n  }\n\n  initWrapperTree() {\n    const valueSet = new Set(this.value);\n    this.rootWrapper = new Wrapper({\n      root: true,\n      children: []\n    });\n    this.wrapperMap = new Map();\n    const getNodeValue = this.opts.getNodeValue;\n    const {\n      isDetached,\n      wrapperMap\n    } = this;\n    dfs(this.rootWrapper, this.opts.tree, false);\n\n    function dfs(parentWrapper, nodes, inheritParentChecked) {\n      // allChildrenChecked 先默认设置为 true\n      // dfs 过程中可能会更新 allChildrenChecked\n      parentWrapper.allChildrenChecked = true;\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (nodes.every(isDetached)) {\n          console.warn('TreeDataHelper 检测到部分节点的下所有子节点均为 detached 状态，这将导致该节点变为「无效节点」', parentWrapper.node);\n        }\n      }\n\n      for (const node of nodes) {\n        const detached = isDetached(node);\n        const exactChecked = valueSet.has(getNodeValue(node));\n\n        if (exactChecked && !detached) {\n          parentWrapper.anyDescendentsChecked = true;\n        }\n\n        const parentChecked = !detached && inheritParentChecked;\n        const checked = exactChecked || parentChecked;\n        const wrapper = new Wrapper({\n          parent: parentWrapper,\n          node,\n          checked,\n          exactChecked,\n          parentChecked,\n          anyDescendentsChecked: checked,\n          detached\n        });\n        wrapperMap.set(getNodeValue(node), wrapper);\n        parentWrapper.children.push(wrapper);\n\n        if (!isLeafNode(node)) {\n          wrapper.children = [];\n          dfs(wrapper, node.children, checked);\n\n          if (wrapper.anyDescendentsChecked && !detached) {\n            parentWrapper.anyDescendentsChecked = true;\n          }\n\n          if (wrapper.allChildrenChecked) {\n            wrapper.checked = true; // 当一个节点因为「子节点被全选」而变为 checked 时，我们需要更新子节点的 parentChecked 字段\n\n            for (const child of wrapper.children) {\n              if (!child.detached) {\n                child.parentChecked = true;\n              }\n            }\n          }\n        }\n\n        if (!wrapper.checked && !detached) {\n          parentWrapper.allChildrenChecked = false;\n        }\n      }\n    }\n  }\n\n  isIndeterminate(nodeValue) {\n    const wrapper = this.wrapperMap.get(nodeValue);\n    return !wrapper.checked && wrapper.anyDescendentsChecked;\n  }\n\n  isChecked(nodeValue) {\n    const wrapper = this.wrapperMap.get(nodeValue);\n    return wrapper.checked;\n  }\n\n  getValueAfterCheck(nodeValue) {\n    if (this.isChecked(nodeValue)) {\n      return this.getCleanValue();\n    }\n\n    const nextValue = arrayUtils.merge(this.value, [nodeValue]);\n    return new TreeDataHelper(Object.assign(Object.assign({}, this.opts), {\n      value: nextValue\n    })).getCleanValue();\n  }\n\n  getValueAfterUncheck(nodeValue) {\n    if (!this.isChecked(nodeValue)) {\n      return this.getCleanValue();\n    }\n\n    const wrapper = this.wrapperMap.get(nodeValue);\n    const {\n      getNodeValue\n    } = this.opts;\n    const appendArray = getAppendArray(wrapper);\n    const removeSet = getRemoveSet(wrapper);\n    const nextValue = arrayUtils.diff(this.value.concat(appendArray), removeSet);\n    return new TreeDataHelper(Object.assign(Object.assign({}, this.opts), {\n      value: nextValue\n    })).getCleanValue();\n\n    function getAppendArray(startWrapper) {\n      let result = [];\n      let current = startWrapper;\n\n      while (current.parentChecked && !current.detached) {\n        for (const sibling of current.parent.children) {\n          if (sibling === current || sibling.exactChecked || sibling.detached) {\n            continue;\n          }\n\n          result.push(getNodeValue(sibling.node));\n        }\n\n        current = current.parent;\n      }\n\n      return result;\n    }\n\n    function getRemoveSet(startWrapper) {\n      const result = new Set();\n      let wrapper = startWrapper; // 不断向上收集选中的父节点\n\n      while (true) {\n        result.add(getNodeValue(wrapper.node));\n\n        if (wrapper.detached || !wrapper.parentChecked) {\n          break;\n        }\n\n        wrapper = wrapper.parent;\n      }\n\n      function dfs(wrappers) {\n        if (wrappers == null) {\n          return;\n        }\n\n        for (const wrapper of wrappers) {\n          if (wrapper.detached || !wrapper.checked) {\n            continue;\n          }\n\n          result.add(getNodeValue(wrapper.node));\n\n          if (!isLeafNode(wrapper) && wrapper.anyDescendentsChecked) {\n            dfs(wrapper.children);\n          }\n        }\n      } // 收集所有的子孙节点\n\n\n      dfs(startWrapper.children);\n      return result;\n    }\n  }\n\n  getValueAfterToggle(nodeValue) {\n    if (this.isChecked(nodeValue)) {\n      return this.getValueAfterUncheck(nodeValue);\n    } else {\n      return this.getValueAfterCheck(nodeValue);\n    }\n  }\n\n  getNode(nodeValue) {\n    var _a;\n\n    return (_a = this.wrapperMap.get(nodeValue)) === null || _a === void 0 ? void 0 : _a.node;\n  }\n\n  getCleanValue() {\n    const {\n      checkedStrategy,\n      getNodeValue\n    } = this.opts;\n    const result = this.value.filter(nodeValue => {\n      return !this.wrapperMap.has(nodeValue);\n    });\n    dfs(this.rootWrapper.children);\n    return result;\n\n    function dfs(wrappers) {\n      for (const wrapper of wrappers) {\n        if (wrapper.checked) {\n          if (checkedStrategy === 'all') {\n            result.push(getNodeValue(wrapper.node));\n          } else if (checkedStrategy === 'parent') {\n            if (!wrapper.parentChecked) {\n              result.push(getNodeValue(wrapper.node));\n            }\n          } else {\n            // checkedStrategy === 'child'\n            if (isLeafNode(wrapper)) {\n              result.push(getNodeValue(wrapper.node));\n            }\n          }\n        }\n\n        if (!isLeafNode(wrapper)) {\n          dfs(wrapper.children);\n        }\n      }\n    }\n  }\n\n}\n\nconst STATE_KEY = 'treeSelect';\n\nfunction treeSelect(opts) {\n  return function treeSelectStep(pipeline) {\n    var _a, _b, _c, _d, _e, _f, _g, _h;\n\n    const Checkbox = pipeline.ctx.components.Checkbox;\n\n    if (Checkbox == null) {\n      throw new Error('使用 treeSelect 之前需要通过 pipeline context 设置 components.Checkbox');\n    }\n\n    const primaryKey = pipeline.ensurePrimaryKey('treeSelect');\n\n    if (typeof primaryKey !== 'string') {\n      throw new Error('treeSelect 仅支持字符串作为 primaryKey');\n    }\n\n    const clickArea = (_a = opts.clickArea) !== null && _a !== void 0 ? _a : 'checkbox';\n    const isDisabled = (_b = opts.isDisabled) !== null && _b !== void 0 ? _b : always(false);\n    const isDetached = (_c = opts.isDetached) !== null && _c !== void 0 ? _c : always(false);\n    const value = (_f = (_e = (_d = opts.value) !== null && _d !== void 0 ? _d : pipeline.getStateAtKey(STATE_KEY)) !== null && _e !== void 0 ? _e : opts.defaultValue) !== null && _f !== void 0 ? _f : [];\n    const tree = opts.rootKey != null ? [{\n      [primaryKey]: opts.rootKey,\n      children: opts.tree\n    }] : opts.tree;\n\n    const getNodeValue = node => node[primaryKey];\n\n    const treeDataHelper = opts.checkStrictly ? new StrictTreeDataHelper({\n      value,\n      getNodeValue,\n      tree\n    }) : new TreeDataHelper({\n      value,\n      getNodeValue,\n      isDetached,\n      tree,\n      checkedStrategy: (_g = opts.checkedStrategy) !== null && _g !== void 0 ? _g : 'parent'\n    });\n\n    const onToggleKey = key => {\n      var _a;\n\n      const nextValue = treeDataHelper.getValueAfterToggle(key);\n      pipeline.setStateAtKey(STATE_KEY, nextValue);\n      (_a = opts.onChange) === null || _a === void 0 ? void 0 : _a.call(opts, nextValue);\n    };\n\n    const makeCheckbox = (key, root, row) => {\n      return React.createElement(Checkbox, {\n        checked: treeDataHelper.isChecked(key),\n        indeterminate: treeDataHelper.isIndeterminate(key),\n        disabled: !root && isDisabled(row),\n        onChange: clickArea === 'checkbox' || root ? () => onToggleKey(key) : undefined\n      });\n    };\n\n    const checkboxColumn = Object.assign(Object.assign({\n      name: '',\n      width: 50,\n      align: 'center',\n      title: opts.rootKey != null ? makeCheckbox(opts.rootKey, true) : undefined\n    }, opts.checkboxColumn), {\n      render(value, record) {\n        return makeCheckbox(record[primaryKey], false, record);\n      },\n\n      getCellProps(value, row) {\n        const rowKey = row[primaryKey];\n\n        if (clickArea !== 'cell') {\n          return;\n        }\n\n        const disabled = isDisabled(row);\n\n        if (disabled) {\n          return {\n            style: {\n              cursor: 'not-allowed'\n            }\n          };\n        }\n\n        return {\n          style: {\n            cursor: 'pointer'\n          },\n\n          onClick(e) {\n            if (opts.stopClickEventPropagation) {\n              e.stopPropagation();\n            }\n\n            onToggleKey(rowKey);\n          }\n\n        };\n      }\n\n    });\n    const nextColumns = pipeline.getColumns().slice();\n    const checkboxPlacement = (_h = opts.checkboxPlacement) !== null && _h !== void 0 ? _h : 'start';\n\n    if (checkboxPlacement === 'start') {\n      nextColumns.unshift(checkboxColumn);\n    } else {\n      nextColumns.push(checkboxColumn);\n    }\n\n    pipeline.columns(nextColumns);\n\n    if (clickArea === 'row') {\n      pipeline.appendRowPropsGetter(row => {\n        const disabled = isDisabled(row);\n\n        if (!disabled) {\n          return {\n            style: {\n              cursor: 'pointer'\n            },\n\n            onClick(e) {\n              if (opts.stopClickEventPropagation) {\n                e.stopPropagation();\n              }\n\n              onToggleKey(row[primaryKey]);\n            }\n\n          };\n        }\n      });\n    }\n\n    if (opts.highlightRowWhenSelected) {\n      pipeline.appendRowPropsGetter(row => {\n        if (treeDataHelper.isChecked(row[primaryKey])) {\n          return {\n            className: 'highlight'\n          };\n        }\n      });\n    }\n\n    return pipeline;\n  };\n}\n\nvar index = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  autoRowSpan: autoRowSpan,\n  buildTree: buildTree,\n  columnHover: columnHover,\n  columnRangeHover: columnRangeHover,\n  columnResize: columnResize,\n  multiSelect: multiSelect,\n  rowDetail: rowDetail,\n  rowGrouping: rowGrouping,\n  singleSelect: singleSelect,\n  sort: sort,\n  tips: tips,\n  treeMode: treeMode,\n  treeMetaSymbol: treeMetaSymbol,\n  treeSelect: treeSelect\n});\nconst ICON_WIDTH = 16;\n/** @deprecated transform 用法已经过时，请使用 pipeline 来对表格进行拓展 */\n\nfunction makeTreeModeTransform(_ref22) {\n  let {\n    onChangeOpenKeys,\n    openKeys,\n    primaryKey,\n    iconIndent = -6,\n    iconGap = 0,\n    indentSize = 16,\n    isLeafNode: isLeafNode$1 = isLeafNode,\n    clickArea = 'cell',\n    treeMetaKey = treeMetaSymbol,\n    stopClickEventPropagation\n  } = _ref22;\n  warnTransformsDeprecated('makeTreeModeTransform');\n  const openKeySet = new Set(openKeys);\n\n  const toggle = rowKey => {\n    const expanded = openKeySet.has(rowKey);\n\n    if (expanded) {\n      onChangeOpenKeys(openKeys.filter(key => key !== rowKey), rowKey, 'collapse');\n    } else {\n      onChangeOpenKeys([...openKeys, rowKey], rowKey, 'expand');\n    }\n  };\n\n  return _ref23 => {\n    let {\n      columns,\n      dataSource\n    } = _ref23;\n    return {\n      columns: processColumns(columns),\n      dataSource: processDataSource(dataSource)\n    };\n\n    function processDataSource(input) {\n      const result = [];\n      dfs(input, 0);\n\n      function dfs(nodes, depth) {\n        if (nodes == null) {\n          return;\n        }\n\n        for (const node of nodes) {\n          const rowKey = node[primaryKey];\n          const expanded = openKeySet.has(rowKey);\n          const isLeaf = isLeafNode$1(node, {\n            depth,\n            expanded,\n            rowKey\n          });\n          const treeMeta = {\n            depth,\n            isLeaf,\n            expanded,\n            rowKey\n          };\n          result.push(Object.assign({\n            [treeMetaKey]: treeMeta\n          }, node));\n\n          if (!isLeaf && expanded) {\n            dfs(node.children, depth + 1);\n          }\n        }\n      }\n\n      return result;\n    }\n\n    function processColumns(columns) {\n      if (columns.length === 0) {\n        return columns;\n      }\n\n      const [firstCol, ...others] = columns;\n\n      const render = (value, record, recordIndex) => {\n        const content = internals.safeRender(firstCol, record, recordIndex);\n\n        if (record[treeMetaKey] == null) {\n          // 没有 treeMeta 信息的话，就返回原先的渲染结果\n          return content;\n        }\n\n        const {\n          rowKey,\n          depth,\n          isLeaf,\n          expanded\n        } = record[treeMetaKey];\n        const indent = iconIndent + depth * indentSize;\n\n        if (isLeaf) {\n          return React.createElement(InlineFlexCell, {\n            className: \"expansion-cell leaf\"\n          }, React.createElement(\"span\", {\n            style: {\n              marginLeft: indent + ICON_WIDTH + iconGap\n            }\n          }, content));\n        }\n\n        const onClick = e => {\n          if (stopClickEventPropagation) {\n            e.stopPropagation();\n          }\n\n          toggle(rowKey);\n        };\n\n        const expandCls = expanded ? 'expanded' : 'collapsed';\n        return React.createElement(ExpansionCell, {\n          className: cx('expansion-cell', expandCls),\n          style: {\n            cursor: clickArea === 'content' ? 'pointer' : undefined\n          },\n          onClick: clickArea === 'content' ? onClick : undefined\n        }, React.createElement(icons.CaretRight, {\n          className: cx('expansion-icon', expandCls),\n          style: {\n            cursor: clickArea === 'icon' ? 'pointer' : undefined,\n            marginLeft: indent,\n            marginRight: iconGap\n          },\n          onClick: clickArea === 'icon' ? onClick : undefined\n        }), content);\n      };\n\n      const getCellProps = (value, record, rowIndex) => {\n        const prevProps = internals.safeGetCellProps(firstCol, record, rowIndex);\n\n        if (record[treeMetaKey] == null) {\n          // 没有 treeMeta 信息的话，就返回原先的 cellProps\n          return prevProps;\n        }\n\n        const {\n          isLeaf,\n          rowKey\n        } = record[treeMetaKey];\n\n        if (isLeaf) {\n          return prevProps;\n        }\n\n        return mergeCellProps(prevProps, {\n          onClick(e) {\n            if (stopClickEventPropagation) {\n              e.stopPropagation();\n            }\n\n            toggle(rowKey);\n          },\n\n          style: {\n            cursor: 'pointer'\n          }\n        });\n      };\n\n      return [Object.assign(Object.assign({}, firstCol), {\n        title: React.createElement(\"span\", {\n          style: {\n            marginLeft: iconIndent + ICON_WIDTH + iconGap\n          }\n        }, internals.safeRenderHeader(firstCol)),\n        render,\n        getCellProps: clickArea === 'cell' ? getCellProps : firstCol.getCellProps\n      }), ...others];\n    }\n  };\n}\n/** @deprecated transform 用法已经过时，请使用 pipeline 来对表格进行拓展 */\n\n\nfunction useTreeModeTransform(_a) {\n  var {\n    defaultOpenKeys = []\n  } = _a,\n      others = __rest(_a, [\"defaultOpenKeys\"]);\n\n  const [openKeys, onChangeOpenKeys] = useState(defaultOpenKeys);\n  return makeTreeModeTransform(Object.assign({\n    openKeys,\n    onChangeOpenKeys\n  }, others));\n}\n/** @deprecated transform 用法已经过时，请使用 pipeline 来对表格进行拓展 */\n\n\nfunction makeVisibleTransform(visibleCodes) {\n  warnTransformsDeprecated('makeVisibleTransform');\n  const set = new Set(visibleCodes);\n  return traverseColumn(column => {\n    if (!isLeafNode(column)) {\n      return column;\n    }\n\n    return set.has(column.code) ? column : Object.assign(Object.assign({}, column), {\n      hidden: true\n    });\n  });\n}\n\nexport { applyTransforms, buildTree$1 as buildTree, exportTableAsExcel, index as features, groupBy, layeredSort, makeAutoRowSpanTransform, makeBuildTreeTransform, makeColumnHoverTransform, makeColumnRangeHoverTransform, makeColumnResizeTransform, makeFlattenTransform, makeOrderFieldTransform, makeRecursiveMapper, makeSortTransform, makeTipsTransform, makeTreeModeTransform, makeVisibleTransform, proto, smartCompare, traverseColumn, useAutoWidthTransform, useColumnHoverRangeTransform, useColumnHoverTransform, useColumnResizeTransform, useSortTransform, useTreeModeTransform };","map":{"version":3,"sources":["D:/ZJU5/软件工程管理/frontend/node_modules/ali-react-table/dist/ali-react-table.esm.js"],"names":["f","flatMap","g","getTreeDepth","i","isLeafNode","c","collectNodes","a","internals","S","SpanManager","C","Classes","m","mergeCellProps","_","__rest","b","icons","d","arrayUtils","e","always","I","InlineFlexCell","E","ExpansionCell","t","treeMode","h","treeMetaSymbol","B","BaseTable","T","TablePipeline","j","groupBy2","u","useTablePipeline","React","useState","useEffect","styled__default","fromEvent","op","cx","groupBy","list","iteratee","groups","item","key","push","applyTransforms","input","transforms","reduce","v","fn","buildTree$1","idProp","parentIdProp","items","wrapperMap","Map","ensure","id","has","get","wrapper","parent","children","set","parentWrapper","itemWrapper","topLevelWrappers","Array","from","values","filter","unwrapRecursively","wrapperArray","result","length","Object","assign","safeGetSpanRect","column","record","rowIndex","colIndex","colSpan","rowSpan","getSpanRect","value","safeGetValue","spanRect","right","bottom","cellProps","safeGetCellProps","top","left","move","dx","dy","r","sanitizeCellDatum","Infinity","isNaN","exportTableAsExcel","xlsxPackage","dataSource","columns","filename","sheet","utils","aoa_to_sheet","topHeaderHeight","origin","addTopHeaders","addDataPart","writeFile","SheetNames","Sheets","Sheet1","dfs","cols","startDx","startDy","_a","start","offsetX","col","features","noExport","current","addOne","name","mergeCells","childrenWidth","leafColumns","spanManager","dataPart","map","stripUpwards","testSkip","add","data","sheet_add_aoa","datum","addr","width","height","s","layeredSort","array","compare","rows","isArray","row","sort","factorySymbol","Symbol","isProtoFactory","proto","baseRecord","ensureArray","baseKeys","keys","process","forEach","empty","base","factory","arg","isEnsureArray","extends","extRecord","extFactory","string","Error","number","notNull","object","makeRecursiveMapper","tree","nodes","parentStartIndex","path","flatCount","node","startIndex","subResult","endIndex","slice","isLeaf","dfsResult","pop","smartCompare","x","y","len","Math","min","cmp","normalizeAsArray","traverseColumn","parentStartColIndex","flatColCount","startColIndex","unNormalized","range","end","warnedSet","Set","warnTransformsDeprecated","apiName","console","warn","isIdentity$1","makeAutoRowSpanTransform","autoRowSpan","isFunc","shouldMergeCell","spanRects","lastBottom","prevValue","prevRow","AUTO_WIDTH_WRAPPER_CLS","AUTO_WIDTH_EXPANDER_CLS","AutoWidthWrapper","div","isSameArray","arr1","arr2","every","useAutoWidthTransform","tableRef","options","deps","widthList","setWidthList","artTable","getDoms","querySelectorAll","tableRow","preferredWidthList","autoWidthDivList","max","scrollWidth","innerTransform","_b","_c","autoWidth","initColumnWidth","clampedWidth","getCellProps","style","padding","render","createElement","className","wrapperStyle","safeRender","expanderVisibility","appendExpander","concat","headerCellProps","background","undefined","border","visibility","makeBuildTreeTransform","makeColumnHoverTransform","hoverColor","hoverColIndex","onChangeHoverColIndex","colIndexMatched","prevGetCellProps","prevCellProps","onMouseEnter","onMouseLeave","useColumnHoverTransform","defaultHoverColIndex","EMPTY_RANGE$1","makeColumnRangeHoverTransform","headerHoverColor","hoverRange","onChangeHoverRange","colRange","match","useColumnHoverRangeTransform","defaultHoverRange","clamp$1","RESIZE_EXPANDER_CLS","ResizeHandle$1","span","makeColumnResizeTransform","sizes","onChangeSizes","minSize","maxSize","disableUserSelectWhenResizing","startResize","startX","clientX","startSize","nextSizes$","window","pipe","takeUntil","movingX","nextSizes","prevUserSelect","docElemStyle","document","documentElement","userSelect","subscribe","next","complete","prevTitle","safeRenderHeader","title","Fragment","onMouseDown","overflow","position","useColumnResizeTransform","defaultSizes","others","makeFlattenTransform","flatten","makeOrderFieldTransform","startOrder","order","orderField","getValue","index","SortIcon$1","size","focusable","preserveAspectRatio","viewBox","fill","transform","DefaultSortHeaderCell$1","onToggle","sortOrder","sortIndex","sortOptions","justifyContent","align","TableHeaderCell$1","onClick","marginLeft","flexShrink","mode","color","flex","fontSize","fontFamily","hasAnySortableColumns$1","some","Boolean","sortable","makeSortTransform","sorts","inputSorts","onChangeSorts","inputOnChangeSorts","orders","SortHeaderCell","keepDataSource","highlightColumnWhenActive","stopClickEventPropagation","filteredInputSorts","nextSorts","sortMap","code","env","NODE_ENV","processColumns","processDataSource","sortColumnsMap","compareFn","xValue","yValue","toggle","findIndex","nextOrder","getNextOrder","active","stopPropagation","idx","indexOf","useSortTransform","defaultSorts","HeaderCellWithTips$1","makeTipsTransform","Balloon","Tooltip","tips","closable","trigger","Info","isIdentity","autoRowSpanStep","pipeline","getDataSource","mapColumns","buildTree","mapDataSource","columnHover","opts","stateKey","_d","getStateAtKey","nextColIndex","setStateAtKey","call","EMPTY_RANGE","columnRangeHover","columnRangeHoverStep","_e","nextColIndexRange","clamp","ResizeHandle","props","columnResize","fallbackSize","columnResizeFeature","getColumns","target","deltaSum","sizeSum","sum","deltaRemaining","colDelta","round","handleActiveBackground","handleBackground","handleHoverBackground","multiSelect","multiSelectStep","_f","_g","_h","_j","_k","_l","Checkbox","ctx","components","primaryKey","ensurePrimaryKey","isDisabled","clickArea","defaultValue","lastKey","defaultLastKey","onChange","nextValue","action","fullKeySet","allKeys","rowKey","safeGetRowKey","isAllChecked","isAnyChecked","defaultCheckboxColumnTitle","checked","indeterminate","diff","merge","checkboxColumn","prevChecked","disabled","cursor","onCheckboxChange","shiftKey","arg1","arg2","nativeEvent","nextColumns","checkboxPlacement","unshift","appendRowPropsGetter","highlightRowWhenSelected","batch","batchKeys","lastIdx","cntIdx","rowDetailSymbol","fallbackRenderDetail","margin","rowDetail","rowDetailStep","rowDetailMetaKey","indents","textOffset","iconIndent","iconWidth","iconGap","getDetailKey","renderDetail","hasDetail","openKeys","defaultOpenAll","defaultOpenKeys","onChangeOpenKeys","nextKeys","openKeySet","expanded","columnFlatCount","firstCol","content","expandCls","CaretRight","marginRight","detailCellStyle","prevProps","display","groupingMetaSymbol","attachGroupingMeta","expandable","getGroupingMeta","isGroupHeader","rowGroupingRowPropsGetter","rowGrouping","meta","indentSize","groupTitle","getFirstDefinedValue","singleSelect","singleSelectStep","Radio","radioColumn","radioPlacement","SortIcon","DefaultSortHeaderCell","TableHeaderCell","hasAnySortableColumns","sortStep","activeSorts","onChangeSortsInMultipleMode","HeaderCellWithTips","tipsSteap","Wrapper$1","constructor","StrictTreeDataHelper","valueSet","initWrapperTree","getNodeValue","rootWrapper","root","isIndeterminate","nodeValue","isChecked","getValueAfterCheck","getValueAfterUncheck","getValueAfterToggle","getNode","getCleanValue","Wrapper","TreeDataHelper","isDetached","inheritParentChecked","allChildrenChecked","detached","exactChecked","anyDescendentsChecked","parentChecked","child","appendArray","getAppendArray","removeSet","getRemoveSet","startWrapper","sibling","wrappers","checkedStrategy","STATE_KEY","treeSelect","treeSelectStep","rootKey","treeDataHelper","checkStrictly","onToggleKey","makeCheckbox","freeze","__proto__","ICON_WIDTH","makeTreeModeTransform","isLeafNode$1","treeMetaKey","depth","treeMeta","recordIndex","indent","useTreeModeTransform","makeVisibleTransform","visibleCodes","hidden"],"mappings":"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","sourcesContent":["import { f as flatMap, g as getTreeDepth, i as isLeafNode, c as collectNodes, a as internals, S as SpanManager, C as Classes, m as mergeCellProps, _ as __rest, b as icons, d as arrayUtils, e as always, I as InlineFlexCell, E as ExpansionCell, t as treeMode, h as treeMetaSymbol } from './chunks/ali-react-table-pipeline-72600030.esm.js';\nexport { B as BaseTable, C as Classes, T as TablePipeline, c as collectNodes, g as getTreeDepth, j as groupBy2, a as internals, i as isLeafNode, m as mergeCellProps, u as useTablePipeline } from './chunks/ali-react-table-pipeline-72600030.esm.js';\nimport React, { useState, useEffect } from 'react';\nimport styled__default from 'styled-components';\nimport { fromEvent } from 'rxjs';\nimport * as op from 'rxjs/operators';\nimport cx from 'classnames';\nimport 'resize-observer-polyfill';\n\nfunction groupBy(list, iteratee) {\r\n    const groups = {};\r\n    for (const item of list) {\r\n        const key = iteratee(item);\r\n        if (groups[key] == null) {\r\n            groups[key] = [];\r\n        }\r\n        groups[key].push(item);\r\n    }\r\n    return groups;\r\n}\n\n/**\r\n * 以 input 作为输入，按序使用 transform.\r\n *\r\n * `applyTransforms(input, f1, f2, f3)` 等价于 `f3(f2(f1(input)))` */\r\nfunction applyTransforms(input, ...transforms) {\r\n    return transforms.reduce((v, fn) => fn(v), input);\r\n}\n\n/**\r\n * 根据 idProp 与 parentIdProp 从对象数组中构建对应的树\r\n * 当 A[parentIdProp] === B[idProp] 时，对象A会被移动到对象B的children。\r\n * 当一个对象的 parentIdProp 不与其他对象的 idProp 字段相等时，该对象被作为树的顶层节点\r\n * @example\r\n * const array = [\r\n *   { id: 'node-1', parent: 'root' },\r\n *   { id: 'node-2', parent: 'root' },\r\n *   { id: 'node-3', parent: 'node-2' },\r\n *   { id: 'node-4', parent: 'node-2' },\r\n *   { id: 'node-5', parent: 'node-4' },\r\n * ]\r\n * const tree = buildTree('id', 'parent', array)\r\n * expect(tree).toEqual([\r\n *   { id: 'node-1', parent: 'root' },\r\n *   {\r\n *     id: 'node-2',\r\n *     parent: 'root',\r\n *     children: [\r\n *       { id: 'node-3', parent: 'node-2' },\r\n *       {\r\n *         id: 'node-4',\r\n *         parent: 'node-2',\r\n *         children: [{ id: 'node-5', parent: 'node-4' }],\r\n *       },\r\n *     ],\r\n *   },\r\n * ])\r\n */\r\nfunction buildTree$1(idProp, parentIdProp, items) {\r\n    const wrapperMap = new Map();\r\n    const ensure = (id) => {\r\n        if (wrapperMap.has(id)) {\r\n            return wrapperMap.get(id);\r\n        }\r\n        const wrapper = { id, parent: null, item: null, children: [] };\r\n        wrapperMap.set(id, wrapper);\r\n        return wrapper;\r\n    };\r\n    for (const item of items) {\r\n        const parentWrapper = ensure(item[parentIdProp]);\r\n        const itemWrapper = ensure(item[idProp]);\r\n        itemWrapper.parent = parentWrapper;\r\n        parentWrapper.children.push(itemWrapper);\r\n        itemWrapper.item = item;\r\n    }\r\n    const topLevelWrappers = flatMap(Array.from(wrapperMap.values()).filter((wrapper) => wrapper.parent == null), (wrapper) => wrapper.children);\r\n    return unwrapRecursively(topLevelWrappers);\r\n    function unwrapRecursively(wrapperArray) {\r\n        const result = [];\r\n        for (const wrapper of wrapperArray) {\r\n            if (wrapper.children.length === 0) {\r\n                result.push(wrapper.item);\r\n            }\r\n            else {\r\n                result.push(Object.assign(Object.assign({}, wrapper.item), { children: unwrapRecursively(wrapper.children) }));\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n}\n\nfunction safeGetSpanRect(column, record, rowIndex, colIndex) {\r\n    let colSpan = 1;\r\n    let rowSpan = 1;\r\n    if (column.getSpanRect) {\r\n        const value = internals.safeGetValue(column, record, rowIndex);\r\n        const spanRect = column.getSpanRect(value, record, rowIndex);\r\n        colSpan = spanRect == null ? 1 : spanRect.right - colIndex;\r\n        rowSpan = spanRect == null ? 1 : spanRect.bottom - rowIndex;\r\n    }\r\n    else {\r\n        const cellProps = internals.safeGetCellProps(column, record, rowIndex);\r\n        if (cellProps.colSpan != null) {\r\n            colSpan = cellProps.colSpan;\r\n        }\r\n        if (cellProps.rowSpan != null) {\r\n            rowSpan = cellProps.rowSpan;\r\n        }\r\n    }\r\n    // 注意这里没有考虑「rowSpan/colSpan 不能过大，避免 rowSpan/colSpan 影响因虚拟滚动而未渲染的单元格」\r\n    return {\r\n        top: rowIndex,\r\n        bottom: rowIndex + rowSpan,\r\n        left: colIndex,\r\n        right: colIndex + colSpan,\r\n    };\r\n}\r\nfunction move({ c, r }, dx, dy) {\r\n    return { c: c + dx, r: r + dy };\r\n}\r\nfunction sanitizeCellDatum(value) {\r\n    if (value === Infinity || value === -Infinity || (typeof value === 'number' && isNaN(value))) {\r\n        return null;\r\n    }\r\n    else {\r\n        return value;\r\n    }\r\n}\r\n/** 根据 BaseTable 的 dataSource 和 column，将表格数据导出为 Excel 文件 */\r\nfunction exportTableAsExcel(xlsxPackage, dataSource, columns, filename) {\r\n    const sheet = xlsxPackage.utils.aoa_to_sheet([]);\r\n    const topHeaderHeight = getTreeDepth(columns) + 1;\r\n    const origin = { c: 0, r: 0 };\r\n    addTopHeaders(origin);\r\n    addDataPart(move(origin, 0, topHeaderHeight));\r\n    xlsxPackage.writeFile({\r\n        SheetNames: ['Sheet1'],\r\n        Sheets: { Sheet1: sheet },\r\n    }, filename);\r\n    function addTopHeaders(origin) {\r\n        dfs(columns, 0, 0);\r\n        function dfs(cols, startDx, startDy) {\r\n            var _a;\r\n            const start = move(origin, startDx, startDy);\r\n            let offsetX = 0;\r\n            for (const col of cols) {\r\n                if ((_a = col.features) === null || _a === void 0 ? void 0 : _a.noExport) {\r\n                    continue;\r\n                }\r\n                const current = move(start, offsetX, 0);\r\n                addOne(col.name, current);\r\n                if (isLeafNode(col)) {\r\n                    offsetX += 1;\r\n                    mergeCells(current, 1, topHeaderHeight - startDy);\r\n                }\r\n                else {\r\n                    const childrenWidth = dfs(col.children, startDx + offsetX, startDy + 1);\r\n                    mergeCells(current, childrenWidth, 1);\r\n                    offsetX += childrenWidth;\r\n                }\r\n            }\r\n            return offsetX;\r\n        }\r\n    }\r\n    function addDataPart(origin) {\r\n        const leafColumns = collectNodes(columns, 'leaf-only').filter((col) => { var _a; return !((_a = col.features) === null || _a === void 0 ? void 0 : _a.noExport); });\r\n        const spanManager = new SpanManager();\r\n        const dataPart = dataSource.map((record, rowIndex) => {\r\n            spanManager.stripUpwards(rowIndex);\r\n            return leafColumns.map((col, colIndex) => {\r\n                if (spanManager.testSkip(rowIndex, colIndex)) {\r\n                    return null;\r\n                }\r\n                const spanRect = safeGetSpanRect(col, record, rowIndex, colIndex);\r\n                const rowSpan = spanRect.bottom - spanRect.top;\r\n                const colSpan = spanRect.right - spanRect.left;\r\n                if (rowSpan > 1 || colSpan > 1) {\r\n                    spanManager.add(spanRect.top, spanRect.left, colSpan, rowSpan);\r\n                    mergeCells(move(origin, spanRect.left, spanRect.top), colSpan, rowSpan);\r\n                }\r\n                return sanitizeCellDatum(internals.safeGetValue(col, record, rowIndex));\r\n            });\r\n        });\r\n        add(dataPart, origin);\r\n    }\r\n    function add(data, origin) {\r\n        xlsxPackage.utils.sheet_add_aoa(sheet, data, { origin });\r\n    }\r\n    function addOne(datum, origin) {\r\n        xlsxPackage.utils.sheet_add_aoa(sheet, [[datum]], { origin });\r\n    }\r\n    function mergeCells(addr, width, height) {\r\n        if (width === 1 && height === 1) {\r\n            return;\r\n        }\r\n        if (sheet['!merges'] == null) {\r\n            sheet['!merges'] = [];\r\n        }\r\n        sheet['!merges'].push({ s: addr, e: move(addr, width - 1, height - 1) });\r\n    }\r\n}\n\n/** 对树状结构的数据进行排序.\r\n * layeredSort 是一个递归的过程，针对树上的每一个父节点，该函数都会重新对其子节点数组（children) 进行排序.\r\n * */\r\nfunction layeredSort(array, compare) {\r\n    return dfs(array);\r\n    function dfs(rows) {\r\n        if (!Array.isArray(array)) {\r\n            return array;\r\n        }\r\n        return rows\r\n            .map((row) => {\r\n            if (isLeafNode(row)) {\r\n                return row;\r\n            }\r\n            return Object.assign(Object.assign({}, row), { children: dfs(row.children) });\r\n        })\r\n            .sort(compare);\r\n    }\r\n}\n\nconst factorySymbol = Symbol('factory-symbol');\r\nfunction isProtoFactory(v) {\r\n    return v && v[factorySymbol];\r\n}\r\nfunction proto(baseRecord, ensureArray = 'auto') {\r\n    const baseKeys = Object.keys(baseRecord);\r\n    function process(record) {\r\n        const result = Object.assign({}, record);\r\n        baseKeys.forEach((key) => {\r\n            var _a;\r\n            if (result[key] === proto.empty) {\r\n                delete result[key];\r\n                return;\r\n            }\r\n            const base = baseRecord[key];\r\n            if (isProtoFactory(base)) {\r\n                result[key] = base(result[key]);\r\n            }\r\n            else {\r\n                result[key] = (_a = result[key]) !== null && _a !== void 0 ? _a : base;\r\n            }\r\n        });\r\n        return result;\r\n    }\r\n    function factory(arg) {\r\n        const isEnsureArray = ensureArray === 'auto' ? Array.isArray(arg) : ensureArray;\r\n        if (isEnsureArray) {\r\n            if (arg == null) {\r\n                return [];\r\n            }\r\n            return arg.map(process);\r\n        }\r\n        else {\r\n            return process(arg);\r\n        }\r\n    }\r\n    // @ts-ignore\r\n    factory[factorySymbol] = true;\r\n    factory.extends = (extRecord) => {\r\n        const extFactory = proto(extRecord, ensureArray);\r\n        return (arg) => factory(extFactory(arg));\r\n    };\r\n    return factory;\r\n}\r\nproto.empty = Symbol('proto.empty');\r\nproto.string = ((v) => {\r\n    if (v != null && typeof v !== 'string') {\r\n        throw new Error('must be string');\r\n    }\r\n    return v;\r\n});\r\nproto.string[factorySymbol] = true;\r\nproto.number = ((v) => {\r\n    if (v != null && typeof v !== 'number') {\r\n        throw new Error('must be number');\r\n    }\r\n    return v;\r\n});\r\nproto.number[factorySymbol] = true;\r\nproto.notNull = ((v) => {\r\n    if (v == null) {\r\n        throw new Error('must be not null');\r\n    }\r\n    return v;\r\n});\r\nproto.notNull[factorySymbol] = true;\r\nproto.object = (baseRecord) => proto(baseRecord, false);\r\nproto.array = (baseRecord) => proto(baseRecord, true);\n\nfunction makeRecursiveMapper(fn) {\r\n    return (tree) => {\r\n        return dfs(tree, 0, []).result;\r\n        function dfs(nodes, parentStartIndex, path) {\r\n            let flatCount = 0;\r\n            const result = [];\r\n            for (const node of nodes) {\r\n                path.push(node);\r\n                const startIndex = parentStartIndex + flatCount;\r\n                let subResult;\r\n                if (isLeafNode(node)) {\r\n                    subResult = fn(node, {\r\n                        startIndex,\r\n                        endIndex: startIndex + 1,\r\n                        path: path.slice(),\r\n                        isLeaf: true,\r\n                    });\r\n                    flatCount += 1;\r\n                }\r\n                else {\r\n                    const dfsResult = dfs(node.children, startIndex, path);\r\n                    subResult = fn(Object.assign(Object.assign({}, node), { children: dfsResult.result }), { startIndex, endIndex: startIndex + dfsResult.flatCount, path: path.slice(), isLeaf: false });\r\n                    flatCount += dfsResult.flatCount;\r\n                }\r\n                if (Array.isArray(subResult)) {\r\n                    result.push(...subResult);\r\n                }\r\n                else if (subResult != null) {\r\n                    result.push(subResult);\r\n                }\r\n                path.pop();\r\n            }\r\n            return { result, flatCount };\r\n        }\r\n    };\r\n}\n\n/** 比较函数，支持字符串、数字、数组和 null。\r\n * * 对于字符串将比较两者的字典序；\r\n * * 对数字将比较两者大小；\r\n * * null 值在比较时总是小于另一个值；\r\n * * 对于数组来说，将逐个比较数组中的元素，第一个不相等的比较结果将作为整个数组的比较结果\r\n *\r\n * 数组的比较可参考 python 中的元祖比较：\r\n * https://stackoverflow.com/questions/5292303/how-does-tuple-comparison-work-in-python */\r\nfunction smartCompare(x, y) {\r\n    // 将 null 排在最后面\r\n    if (x == null) {\r\n        return 1;\r\n    }\r\n    if (y == null) {\r\n        return -1;\r\n    }\r\n    if (typeof x === 'number' && typeof y === 'number') {\r\n        return x - y;\r\n    }\r\n    if (typeof x === 'string' && typeof y === 'string') {\r\n        // 字符串使用 默认的字典序\r\n        if (x < y) {\r\n            return -1;\r\n        }\r\n        else if (x > y) {\r\n            return 1;\r\n        }\r\n        else {\r\n            return 0;\r\n        }\r\n    }\r\n    if (Array.isArray(x) && Array.isArray(y)) {\r\n        const len = Math.min(x.length, y.length);\r\n        for (let i = 0; i < len; i++) {\r\n            const cmp = smartCompare(x[i], y[i]);\r\n            if (cmp !== 0) {\r\n                return cmp;\r\n            }\r\n        }\r\n        // 数组长度不等时，元素少的字段放在前面\r\n        return x.length - y.length;\r\n    }\r\n    // 对于不认识的数据类型，返回 0\r\n    return 0;\r\n}\n\nfunction normalizeAsArray(input) {\r\n    if (input == null) {\r\n        return [];\r\n    }\r\n    else if (Array.isArray(input)) {\r\n        return input;\r\n    }\r\n    else {\r\n        return [input];\r\n    }\r\n}\r\n/** @deprecated 该 API 已经过时，请使用 makeRecursiveMapper */\r\nfunction traverseColumn(fn) {\r\n    return ({ columns, dataSource }) => {\r\n        return { dataSource, columns: dfs(columns, 0).result };\r\n        function dfs(columns, parentStartColIndex) {\r\n            let flatColCount = 0;\r\n            const result = [];\r\n            for (const col of columns) {\r\n                const startColIndex = parentStartColIndex + flatColCount;\r\n                let unNormalized;\r\n                if (isLeafNode(col)) {\r\n                    unNormalized = fn(col, {\r\n                        range: { start: startColIndex, end: startColIndex + 1 },\r\n                        dataSource,\r\n                    });\r\n                    flatColCount += 1;\r\n                }\r\n                else {\r\n                    const dfsResult = dfs(col.children, startColIndex);\r\n                    unNormalized = fn(Object.assign(Object.assign({}, col), { children: dfsResult.result }), {\r\n                        range: {\r\n                            start: startColIndex,\r\n                            end: startColIndex + dfsResult.flatColCount,\r\n                        },\r\n                        dataSource,\r\n                    });\r\n                    flatColCount += dfsResult.flatColCount;\r\n                }\r\n                result.push(...normalizeAsArray(unNormalized));\r\n            }\r\n            return { result, flatColCount };\r\n        }\r\n    };\r\n}\n\nconst warnedSet = new Set();\r\nfunction warnTransformsDeprecated(apiName) {\r\n    if (!warnedSet.has(apiName)) {\r\n        warnedSet.add(apiName);\r\n        console.warn(`[ali-react-table] transform 用法已经过时，请使用 pipeline 来对表格进行拓展` +\r\n            `\\n  请移除以下 API 的调用：${apiName}`);\r\n    }\r\n}\n\nfunction isIdentity$1(x, y) {\r\n    return x === y;\r\n}\r\n/** @deprecated transform 用法已经过时，请使用 pipeline 来对表格进行拓展 */\r\nfunction makeAutoRowSpanTransform() {\r\n    warnTransformsDeprecated('makeAutoRowSpanTransform');\r\n    return traverseColumn((col, { dataSource, range }) => {\r\n        var _a;\r\n        if (!((_a = col.features) === null || _a === void 0 ? void 0 : _a.autoRowSpan)) {\r\n            return col;\r\n        }\r\n        if (!isLeafNode(col)) {\r\n            return col;\r\n        }\r\n        const isFunc = typeof col.features.autoRowSpan === 'function';\r\n        const shouldMergeCell = isFunc ? col.features.autoRowSpan : isIdentity$1;\r\n        const spanRects = [];\r\n        let lastBottom = 0;\r\n        let prevValue = null;\r\n        let prevRow = null;\r\n        for (let rowIndex = 0; rowIndex < dataSource.length; rowIndex++) {\r\n            const row = dataSource[rowIndex];\r\n            const value = internals.safeGetValue(col, row, rowIndex);\r\n            if (rowIndex === 0 || !shouldMergeCell(prevValue, value, prevRow, row)) {\r\n                const spanRect = {\r\n                    top: lastBottom,\r\n                    bottom: rowIndex,\r\n                    left: range.start,\r\n                    right: range.end,\r\n                };\r\n                for (let i = lastBottom; i < rowIndex; i++) {\r\n                    spanRects.push(spanRect);\r\n                }\r\n                lastBottom = rowIndex;\r\n            }\r\n            prevValue = value;\r\n            prevRow = row;\r\n        }\r\n        for (let i = lastBottom; i < dataSource.length; i++) {\r\n            spanRects.push({\r\n                top: lastBottom,\r\n                bottom: dataSource.length,\r\n                left: range.start,\r\n                right: range.end,\r\n            });\r\n        }\r\n        return Object.assign(Object.assign({}, col), { getSpanRect(value, row, rowIndex) {\r\n                return spanRects[rowIndex];\r\n            } });\r\n    });\r\n}\n\nconst AUTO_WIDTH_WRAPPER_CLS = 'auto-width-wrapper';\r\nconst AUTO_WIDTH_EXPANDER_CLS = 'auto-width-expander';\r\nconst AutoWidthWrapper = styled__default.div `\n  height: 100%;\n  display: inline-flex;\n  align-items: center;\n  white-space: nowrap;\n  padding: 8px 12px;\n`;\r\nfunction isSameArray(arr1, arr2) {\r\n    return arr1.length === arr2.length && arr1.every((x, i) => x === arr2[i]);\r\n}\r\n/** 自适应列宽\r\n *\r\n * @deprecated transform 用法已经过时，请使用 pipeline 来对表格进行拓展\r\n *\r\n * @param tableRef BaseTable 的 ref\r\n * @param options 参数\r\n * @param deps 重新调整列宽的依赖数组，每当依赖数组发生变化时， useAutoWidthTransform 会根据单元格内容的实际渲染宽度 设置单元格的宽度\r\n *\r\n * options 说明：\r\n * - options.appendExpander 是否在列的末尾追加可伸缩列\r\n * - options.expanderVisibility 设置为 `'hidden'` 可以隐藏可伸缩列\r\n * - options.wrapperStyle 单元格中 div.auto-width-wrapper 的样式\r\n * - options.initColumnWidth 自适应的初始列宽\r\n *\r\n * 注意 useAutoWidthTransform 是一个 React hooks，要遵循 hooks 的用法规范\r\n * */\r\nfunction useAutoWidthTransform(tableRef, options, deps) {\r\n    warnTransformsDeprecated('useAutoWidthTransform');\r\n    const [widthList, setWidthList] = useState([]);\r\n    useEffect(() => {\r\n        const artTable = tableRef.current.getDoms().artTable;\r\n        const rows = Array.from(artTable.querySelectorAll(`.${Classes.tableRow}`));\r\n        if (rows.length === 0) {\r\n            return;\r\n        }\r\n        const preferredWidthList = [];\r\n        for (const row of rows) {\r\n            const autoWidthDivList = row.querySelectorAll(`.${AUTO_WIDTH_WRAPPER_CLS}`);\r\n            autoWidthDivList.forEach((div, i) => {\r\n                var _a;\r\n                preferredWidthList[i] = Math.max((_a = preferredWidthList[i]) !== null && _a !== void 0 ? _a : 0, div.scrollWidth);\r\n            });\r\n        }\r\n        if (!isSameArray(preferredWidthList, widthList)) {\r\n            setWidthList(preferredWidthList);\r\n        }\r\n    }, deps);\r\n    let i = 0;\r\n    const innerTransform = traverseColumn((col) => {\r\n        var _a, _b, _c;\r\n        if (!isLeafNode(col)) {\r\n            return col;\r\n        }\r\n        if (!((_a = col.features) === null || _a === void 0 ? void 0 : _a.autoWidth)) {\r\n            return col;\r\n        }\r\n        const { max = Infinity, min = -Infinity } = col.features.autoWidth;\r\n        const width = (_c = (_b = widthList[i++]) !== null && _b !== void 0 ? _b : col.width) !== null && _c !== void 0 ? _c : options === null || options === void 0 ? void 0 : options.initColumnWidth;\r\n        const clampedWidth = Math.max(min, Math.min(max, width));\r\n        return Object.assign(Object.assign({}, col), { width: clampedWidth, getCellProps(_, record, rowIndex) {\r\n                return mergeCellProps(internals.safeGetCellProps(col, record, rowIndex), {\r\n                    style: { padding: 0 },\r\n                });\r\n            }, render(_, record, rowIndex) {\r\n                return (React.createElement(AutoWidthWrapper, { className: AUTO_WIDTH_WRAPPER_CLS, style: options === null || options === void 0 ? void 0 : options.wrapperStyle }, internals.safeRender(col, record, rowIndex)));\r\n            } });\r\n    });\r\n    return (input) => {\r\n        var _a;\r\n        const { columns, dataSource } = innerTransform(input);\r\n        const expanderVisibility = (_a = options === null || options === void 0 ? void 0 : options.expanderVisibility) !== null && _a !== void 0 ? _a : 'visible';\r\n        return {\r\n            columns: (options === null || options === void 0 ? void 0 : options.appendExpander)\r\n                ? columns.concat([\r\n                    {\r\n                        name: '',\r\n                        headerCellProps: {\r\n                            className: AUTO_WIDTH_EXPANDER_CLS,\r\n                            style: {\r\n                                background: expanderVisibility === 'hidden' ? 'var(--bgcolor)' : undefined,\r\n                                border: expanderVisibility === 'hidden' ? 'none' : undefined,\r\n                            },\r\n                        },\r\n                        getCellProps() {\r\n                            return {\r\n                                className: AUTO_WIDTH_EXPANDER_CLS,\r\n                                style: { visibility: expanderVisibility },\r\n                            };\r\n                        },\r\n                    },\r\n                ])\r\n                : columns,\r\n            dataSource,\r\n        };\r\n    };\r\n}\n\n/** @deprecated transform 用法已经过时，请使用 pipeline 来对表格进行拓展 */\r\nfunction makeBuildTreeTransform(idProp, parentIdProp) {\r\n    warnTransformsDeprecated('makeBuildTreeTransform');\r\n    return ({ columns, dataSource }) => {\r\n        return { columns, dataSource: buildTree$1(idProp, parentIdProp, dataSource) };\r\n    };\r\n}\n\n/** @deprecated transform 用法已经过时，请使用 pipeline 来对表格进行拓展 */\r\nfunction makeColumnHoverTransform({ hoverColor = 'var(--hover-bgcolor)', hoverColIndex, onChangeHoverColIndex, }) {\r\n    warnTransformsDeprecated('makeColumnHoverTransform');\r\n    return traverseColumn((col, { range }) => {\r\n        if (!isLeafNode(col)) {\r\n            return col;\r\n        }\r\n        const colIndexMatched = range.start <= hoverColIndex && hoverColIndex < range.end;\r\n        const prevGetCellProps = col.getCellProps;\r\n        return Object.assign(Object.assign({}, col), { getCellProps(value, record, rowIndex) {\r\n                const prevCellProps = prevGetCellProps === null || prevGetCellProps === void 0 ? void 0 : prevGetCellProps(value, record, rowIndex);\r\n                return mergeCellProps(prevCellProps, {\r\n                    style: { '--bgcolor': colIndexMatched ? hoverColor : undefined },\r\n                    onMouseEnter() {\r\n                        onChangeHoverColIndex(range.start);\r\n                    },\r\n                    onMouseLeave() {\r\n                        onChangeHoverColIndex(-1);\r\n                    },\r\n                });\r\n            } });\r\n    });\r\n}\r\n/** @deprecated transform 用法已经过时，请使用 pipeline 来对表格进行拓展 */\r\nfunction useColumnHoverTransform({ hoverColor, defaultHoverColIndex = -1, } = {}) {\r\n    const [hoverColIndex, onChangeHoverColIndex] = useState(defaultHoverColIndex);\r\n    return makeColumnHoverTransform({ hoverColor, hoverColIndex, onChangeHoverColIndex });\r\n}\n\nconst EMPTY_RANGE$1 = {\r\n    start: -1,\r\n    end: -1,\r\n};\r\n/** @deprecated transform 用法已经过时，请使用 pipeline 来对表格进行拓展 */\r\nfunction makeColumnRangeHoverTransform({ hoverColor = 'var(--hover-bgcolor)', headerHoverColor = 'var(--header-hover-bgcolor)', hoverRange, onChangeHoverRange, }) {\r\n    warnTransformsDeprecated('makeColumnRangeHoverTransform');\r\n    return traverseColumn((col, { range: colRange }) => {\r\n        const match = colRange.end > hoverRange.start && hoverRange.end > colRange.start;\r\n        if (!isLeafNode(col)) {\r\n            if (headerHoverColor == null) {\r\n                return col;\r\n            }\r\n            return Object.assign(Object.assign({}, col), { headerCellProps: mergeCellProps(col.headerCellProps, {\r\n                    onMouseEnter() {\r\n                        onChangeHoverRange(colRange);\r\n                    },\r\n                    onMouseLeave() {\r\n                        onChangeHoverRange(EMPTY_RANGE$1);\r\n                    },\r\n                    style: { '--header-bgcolor': match ? headerHoverColor : undefined },\r\n                }) });\r\n        }\r\n        const prevGetCellProps = col.getCellProps;\r\n        return Object.assign(Object.assign({}, col), { headerCellProps: mergeCellProps(col.headerCellProps, {\r\n                onMouseEnter() {\r\n                    onChangeHoverRange(colRange);\r\n                },\r\n                onMouseLeave() {\r\n                    onChangeHoverRange(EMPTY_RANGE$1);\r\n                },\r\n                style: { '--header-bgcolor': match ? headerHoverColor : undefined },\r\n            }), getCellProps(value, record, rowIndex) {\r\n                const prevCellProps = prevGetCellProps === null || prevGetCellProps === void 0 ? void 0 : prevGetCellProps(value, record, rowIndex);\r\n                return mergeCellProps(prevCellProps, {\r\n                    onMouseEnter() {\r\n                        onChangeHoverRange(colRange);\r\n                    },\r\n                    onMouseLeave() {\r\n                        onChangeHoverRange(EMPTY_RANGE$1);\r\n                    },\r\n                    style: { '--bgcolor': match ? hoverColor : undefined },\r\n                });\r\n            } });\r\n    });\r\n}\r\n/** @deprecated transform 用法已经过时，请使用 pipeline 来对表格进行拓展 */\r\nfunction useColumnHoverRangeTransform({ hoverColor, headerHoverColor, defaultHoverRange = EMPTY_RANGE$1, } = {}) {\r\n    const [hoverRange, onChangeHoverRange] = useState(defaultHoverRange);\r\n    return makeColumnRangeHoverTransform({ hoverColor, headerHoverColor, hoverRange, onChangeHoverRange });\r\n}\n\nfunction clamp$1(min, x, max) {\r\n    return Math.max(min, Math.min(max, x));\r\n}\r\nconst RESIZE_EXPANDER_CLS = 'resize-expander';\r\nconst ResizeHandle$1 = styled__default.span `\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  right: -5px;\n  width: 10px;\n  cursor: col-resize;\n  z-index: 1;\n`;\r\n/** @deprecated transform 用法已经过时，请使用 pipeline 来对表格进行拓展 */\r\nfunction makeColumnResizeTransform({ sizes, onChangeSizes, minSize = 40, maxSize = Infinity, appendExpander, expanderVisibility = 'visible', disableUserSelectWhenResizing, }) {\r\n    warnTransformsDeprecated('makeColumnResizeTransform');\r\n    const startResize = (colIndex, e) => {\r\n        const startX = e.clientX;\r\n        const startSize = sizes[colIndex];\r\n        const nextSizes$ = fromEvent(window, 'mousemove').pipe(op.takeUntil(fromEvent(window, 'mouseup')), op.map((e) => {\r\n            const movingX = e.clientX;\r\n            const nextSizes = sizes.slice();\r\n            nextSizes[colIndex] = clamp$1(minSize, startSize + (movingX - startX), maxSize);\r\n            return nextSizes;\r\n        }));\r\n        let prevUserSelect = '';\r\n        let docElemStyle;\r\n        if (disableUserSelectWhenResizing) {\r\n            docElemStyle = document.documentElement.style;\r\n            prevUserSelect = docElemStyle.userSelect;\r\n            docElemStyle.userSelect = 'none';\r\n        }\r\n        nextSizes$.subscribe({\r\n            next: onChangeSizes,\r\n            complete() {\r\n                if (disableUserSelectWhenResizing) {\r\n                    docElemStyle.userSelect = prevUserSelect;\r\n                }\r\n            },\r\n        });\r\n    };\r\n    const innerTransform = traverseColumn((col, { range }) => {\r\n        var _a;\r\n        if (!isLeafNode(col)) {\r\n            return col;\r\n        }\r\n        const prevTitle = internals.safeRenderHeader(col);\r\n        return Object.assign(Object.assign({}, col), { width: sizes[range.start], title: (React.createElement(React.Fragment, null,\r\n                prevTitle,\r\n                React.createElement(ResizeHandle$1, { className: \"resize-handle\", onMouseDown: (e) => startResize(range.start, e) }))), headerCellProps: Object.assign(Object.assign({}, col.headerCellProps), { style: Object.assign(Object.assign({}, (_a = col.headerCellProps) === null || _a === void 0 ? void 0 : _a.style), { overflow: 'visible', position: 'relative' }) }) });\r\n    });\r\n    return (input) => {\r\n        const { columns, dataSource } = innerTransform(input);\r\n        return {\r\n            columns: appendExpander\r\n                ? columns.concat([\r\n                    {\r\n                        name: '',\r\n                        headerCellProps: {\r\n                            className: RESIZE_EXPANDER_CLS,\r\n                            style: {\r\n                                background: expanderVisibility === 'hidden' ? 'var(--bgcolor)' : undefined,\r\n                                border: expanderVisibility === 'hidden' ? 'none' : undefined,\r\n                            },\r\n                        },\r\n                        getCellProps() {\r\n                            return {\r\n                                className: RESIZE_EXPANDER_CLS,\r\n                                style: { visibility: expanderVisibility },\r\n                            };\r\n                        },\r\n                    },\r\n                ])\r\n                : columns,\r\n            dataSource,\r\n        };\r\n    };\r\n}\r\n/** @deprecated transform 用法已经过时，请使用 pipeline 来对表格进行拓展 */\r\nfunction useColumnResizeTransform(_a) {\r\n    var { defaultSizes } = _a, others = __rest(_a, [\"defaultSizes\"]);\r\n    const [sizes, onChangeSizes] = useState(defaultSizes);\r\n    return makeColumnResizeTransform(Object.assign({ sizes, onChangeSizes }, others));\r\n}\n\n/** @deprecated transform 用法已经过时，请使用 pipeline 来对表格进行拓展 */\r\nfunction makeFlattenTransform() {\r\n    warnTransformsDeprecated('makeFlattenTransform');\r\n    return traverseColumn((column) => {\r\n        var _a;\r\n        if (isLeafNode(column)) {\r\n            return column;\r\n        }\r\n        return ((_a = column.features) === null || _a === void 0 ? void 0 : _a.flatten) ? column.children : column;\r\n    });\r\n}\n\n/** @deprecated transform 用法已经过时，请使用 pipeline 来对表格进行拓展 */\r\nfunction makeOrderFieldTransform(startOrder = 1) {\r\n    warnTransformsDeprecated('makeOrderFieldTransform');\r\n    return traverseColumn((column) => {\r\n        var _a, _b;\r\n        if (((_a = column.features) === null || _a === void 0 ? void 0 : _a.order) || ((_b = column.features) === null || _b === void 0 ? void 0 : _b.orderField)) {\r\n            return Object.assign(Object.assign({}, column), { getValue(record, index) {\r\n                    return index + startOrder;\r\n                } });\r\n        }\r\n        return column;\r\n    });\r\n}\n\nfunction SortIcon$1({ size = 32, style, className, order, }) {\r\n    return (React.createElement(\"svg\", { style: style, className: className, focusable: \"false\", preserveAspectRatio: \"xMidYMid meet\", width: size, height: size, viewBox: \"0 0 32 32\", \"aria-hidden\": \"true\" },\r\n        React.createElement(\"path\", { fill: order === 'asc' ? '#23A3FF' : '#bfbfbf', transform: \"translate(0, 4)\", d: \"M8 8L16 0 24 8z\" }),\r\n        React.createElement(\"path\", { fill: order === 'desc' ? '#23A3FF' : '#bfbfbf', transform: \"translate(0, -4)\", d: \"M24 24L16 32 8 24z \" })));\r\n}\r\nfunction DefaultSortHeaderCell$1({ children, column, onToggle, sortOrder, sortIndex, sortOptions }) {\r\n    // 通过 justify-content 来与 col.align 保持对齐方向一致\r\n    const justifyContent = column.align === 'right' ? 'flex-end' : column.align === 'center' ? 'center' : 'flex-start';\r\n    return (React.createElement(TableHeaderCell$1, { onClick: onToggle, style: { justifyContent } },\r\n        children,\r\n        React.createElement(SortIcon$1, { style: { userSelect: 'none', marginLeft: 2, flexShrink: 0 }, size: 16, order: sortOrder }),\r\n        sortOptions.mode === 'multiple' && sortIndex != -1 && (React.createElement(\"div\", { style: {\r\n                userSelect: 'none',\r\n                marginLeft: 2,\r\n                color: '#666',\r\n                flex: '0 0 auto',\r\n                fontSize: 10,\r\n                fontFamily: 'monospace',\r\n            } }, sortIndex + 1))));\r\n}\r\nfunction hasAnySortableColumns$1(cols) {\r\n    return cols.some((col) => { var _a; return Boolean((_a = col.features) === null || _a === void 0 ? void 0 : _a.sortable) || (!isLeafNode(col) && hasAnySortableColumns$1(col.children)); });\r\n}\r\nconst TableHeaderCell$1 = styled__default.div `\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n`;\r\n/** @deprecated transform 用法已经过时，请使用 pipeline 来对表格进行拓展 */\r\nfunction makeSortTransform({ sorts: inputSorts, onChangeSorts: inputOnChangeSorts, orders = ['desc', 'asc', 'none'], mode = 'multiple', SortHeaderCell = DefaultSortHeaderCell$1, keepDataSource, highlightColumnWhenActive, stopClickEventPropagation, }) {\r\n    warnTransformsDeprecated('makeSortTransform');\r\n    const filteredInputSorts = inputSorts.filter((s) => s.order !== 'none');\r\n    // 单字段排序的情况下 sorts 中只有第一个排序字段才会生效\r\n    const sorts = mode === 'multiple' ? filteredInputSorts : filteredInputSorts.slice(0, 1);\r\n    const onChangeSorts = mode === 'multiple'\r\n        ? inputOnChangeSorts\r\n        : (nextSorts) => {\r\n            // 单字段排序的情况下，nextSorts 中只有最后一个排序字段才会生效\r\n            const len = nextSorts.length;\r\n            inputOnChangeSorts(nextSorts.slice(len - 1));\r\n        };\r\n    const sortOptions = {\r\n        sorts,\r\n        onChangeSorts,\r\n        orders,\r\n        mode,\r\n        keepDataSource,\r\n        highlightColumnWhenActive,\r\n        stopClickEventPropagation,\r\n    };\r\n    const sortMap = new Map(sorts.map((sort, index) => [sort.code, Object.assign({ index }, sort)]));\r\n    return ({ dataSource, columns }) => {\r\n        if (process.env.NODE_ENV !== 'production') {\r\n            if (!hasAnySortableColumns$1(columns)) {\r\n                console.warn('[ali-react-table] commonTransform.sort 缺少可排序的列，请通过 column.features.sortable 来指定哪些列可排序', columns);\r\n            }\r\n        }\r\n        return { columns: processColumns(columns), dataSource: processDataSource(dataSource) };\r\n        function processDataSource(dataSource) {\r\n            if (keepDataSource) {\r\n                return dataSource;\r\n            }\r\n            const sortColumnsMap = new Map(collectNodes(columns, 'leaf-only')\r\n                .filter((col) => { var _a; return ((_a = col.features) === null || _a === void 0 ? void 0 : _a.sortable) != null; })\r\n                .map((col) => [col.code, col]));\r\n            return layeredSort(dataSource, (x, y) => {\r\n                for (const { code, order } of sorts) {\r\n                    const column = sortColumnsMap.get(code);\r\n                    // 如果 code 对应的 column 不可排序，我们跳过该 code\r\n                    if (column == null) {\r\n                        continue;\r\n                    }\r\n                    const sortable = column.features.sortable;\r\n                    const compareFn = typeof sortable === 'function' ? sortable : smartCompare;\r\n                    const xValue = internals.safeGetValue(column, x, -1);\r\n                    const yValue = internals.safeGetValue(column, y, -1);\r\n                    const cmp = compareFn(xValue, yValue);\r\n                    if (cmp !== 0) {\r\n                        return cmp * (order === 'asc' ? 1 : -1);\r\n                    }\r\n                }\r\n                return 0;\r\n            });\r\n        }\r\n        // 在「升序 - 降序 - 不排序」之间不断切换\r\n        function toggle(code) {\r\n            const sort = sortMap.get(code);\r\n            if (sort == null) {\r\n                onChangeSorts(sorts.concat([{ code, order: orders[0] }]));\r\n            }\r\n            else {\r\n                const index = sorts.findIndex((s) => s.code === code);\r\n                const nextSorts = sorts.slice(0, index + 1);\r\n                const nextOrder = getNextOrder(sort.order);\r\n                if (nextOrder === 'none') {\r\n                    nextSorts.pop();\r\n                }\r\n                else {\r\n                    nextSorts[index] = Object.assign(Object.assign({}, nextSorts[index]), { order: nextOrder });\r\n                }\r\n                onChangeSorts(nextSorts);\r\n            }\r\n        }\r\n        function processColumns(columns) {\r\n            return columns.map(dfs);\r\n            function dfs(col) {\r\n                var _a;\r\n                const result = Object.assign({}, col);\r\n                const sortable = col.code && (((_a = col.features) === null || _a === void 0 ? void 0 : _a.sortable) || sortMap.has(col.code));\r\n                const active = sortable && sortMap.has(col.code);\r\n                if (sortable) {\r\n                    let sortIndex = -1;\r\n                    let sortOrder = 'none';\r\n                    if (active) {\r\n                        const { order, index } = sortMap.get(col.code);\r\n                        sortOrder = order;\r\n                        sortIndex = index;\r\n                        if (highlightColumnWhenActive) {\r\n                            result.headerCellProps = mergeCellProps(col.headerCellProps, {\r\n                                style: { background: 'var(--header-highlight-bgcolor)' },\r\n                            });\r\n                            result.getCellProps = (value, row, rowIndex) => {\r\n                                const prevCellProps = internals.safeGetCellProps(col, row, rowIndex);\r\n                                return mergeCellProps(prevCellProps, {\r\n                                    style: { background: 'var(--highlight-bgcolor)' },\r\n                                });\r\n                            };\r\n                        }\r\n                    }\r\n                    result.title = (React.createElement(SortHeaderCell, { onToggle: (e) => {\r\n                            if (stopClickEventPropagation) {\r\n                                e.stopPropagation();\r\n                            }\r\n                            toggle(col.code);\r\n                        }, sortOrder: sortOrder, column: col, sortIndex: sortIndex, sortOptions: sortOptions }, internals.safeRenderHeader(col)));\r\n                }\r\n                if (!isLeafNode(col)) {\r\n                    result.children = col.children.map(dfs);\r\n                }\r\n                return result;\r\n            }\r\n        }\r\n    };\r\n    function getNextOrder(order) {\r\n        const idx = orders.indexOf(order);\r\n        return orders[idx === orders.length - 1 ? 0 : idx + 1];\r\n    }\r\n}\r\n/** @deprecated transform 用法已经过时，请使用 pipeline 来对表格进行拓展 */\r\nfunction useSortTransform(_a = {}) {\r\n    var { defaultSorts = [] } = _a, others = __rest(_a, [\"defaultSorts\"]);\r\n    const [sorts, onChangeSorts] = useState(defaultSorts);\r\n    return makeSortTransform(Object.assign({ sorts, onChangeSorts }, others));\r\n}\n\nconst HeaderCellWithTips$1 = styled__default.div `\n  display: flex;\n  align-items: center;\n\n  .tip-icon-wrapper {\n    margin-left: 2px;\n  }\n\n  .tip-icon {\n    display: flex;\n    fill: currentColor;\n  }\n`;\r\n/** @deprecated transform 用法已经过时，请使用 pipeline 来对表格进行拓展 */\r\nfunction makeTipsTransform({ Balloon, Tooltip }) {\r\n    warnTransformsDeprecated('makeTipsTransform');\r\n    return traverseColumn((col) => {\r\n        var _a;\r\n        if (!((_a = col.features) === null || _a === void 0 ? void 0 : _a.tips)) {\r\n            return col;\r\n        }\r\n        const justifyContent = col.align === 'right' ? 'flex-end' : col.align === 'center' ? 'center' : 'flex-start';\r\n        return Object.assign(Object.assign({}, col), { title: (React.createElement(HeaderCellWithTips$1, { style: { justifyContent } },\r\n                internals.safeRenderHeader(col),\r\n                Balloon ? (\r\n                // fusion/hippo\r\n                React.createElement(Balloon, { closable: false, trigger: React.createElement(\"div\", { className: \"tip-icon-wrapper\" },\r\n                        React.createElement(icons.Info, { className: \"tip-icon\" })) }, col.features.tips)) : (\r\n                // antd\r\n                React.createElement(Tooltip, { title: col.features.tips },\r\n                    React.createElement(\"div\", { className: \"tip-icon-wrapper\" },\r\n                        React.createElement(icons.Info, { className: \"tip-icon\" })))))) });\r\n    });\r\n}\n\nfunction isIdentity(x, y) {\r\n    return x === y;\r\n}\r\nfunction autoRowSpan() {\r\n    return function autoRowSpanStep(pipeline) {\r\n        const dataSource = pipeline.getDataSource();\r\n        return pipeline.mapColumns(makeRecursiveMapper((col, { startIndex, endIndex }) => {\r\n            var _a;\r\n            if (!((_a = col.features) === null || _a === void 0 ? void 0 : _a.autoRowSpan)) {\r\n                return col;\r\n            }\r\n            if (!isLeafNode(col)) {\r\n                return col;\r\n            }\r\n            const isFunc = typeof col.features.autoRowSpan === 'function';\r\n            const shouldMergeCell = isFunc ? col.features.autoRowSpan : isIdentity;\r\n            const spanRects = [];\r\n            let lastBottom = 0;\r\n            let prevValue = null;\r\n            let prevRow = null;\r\n            for (let rowIndex = 0; rowIndex < dataSource.length; rowIndex++) {\r\n                const row = dataSource[rowIndex];\r\n                const value = internals.safeGetValue(col, row, rowIndex);\r\n                if (rowIndex === 0 || !shouldMergeCell(prevValue, value, prevRow, row)) {\r\n                    const spanRect = {\r\n                        top: lastBottom,\r\n                        bottom: rowIndex,\r\n                        left: startIndex,\r\n                        right: endIndex,\r\n                    };\r\n                    for (let i = lastBottom; i < rowIndex; i++) {\r\n                        spanRects.push(spanRect);\r\n                    }\r\n                    lastBottom = rowIndex;\r\n                }\r\n                prevValue = value;\r\n                prevRow = row;\r\n            }\r\n            for (let i = lastBottom; i < dataSource.length; i++) {\r\n                spanRects.push({\r\n                    top: lastBottom,\r\n                    bottom: dataSource.length,\r\n                    left: startIndex,\r\n                    right: endIndex,\r\n                });\r\n            }\r\n            return Object.assign(Object.assign({}, col), { getSpanRect(value, row, rowIndex) {\r\n                    return spanRects[rowIndex];\r\n                } });\r\n        }));\r\n    };\r\n}\n\nfunction buildTree(idProp, parentIdProp) {\r\n    return (pipeline) => pipeline.mapDataSource((rows) => buildTree$1(idProp, parentIdProp, rows));\r\n}\n\nfunction columnHover(opts = {}) {\r\n    const stateKey = 'columnHover';\r\n    return (pipeline) => {\r\n        var _a, _b, _c, _d;\r\n        const hoverColor = (_a = opts.hoverColor) !== null && _a !== void 0 ? _a : 'var(--hover-bgcolor)';\r\n        const hoverColIndex = (_d = (_c = (_b = opts.hoverColIndex) !== null && _b !== void 0 ? _b : pipeline.getStateAtKey(stateKey)) !== null && _c !== void 0 ? _c : opts.defaultHoverColIndex) !== null && _d !== void 0 ? _d : -1;\r\n        const onChangeHoverColIndex = (nextColIndex) => {\r\n            var _a;\r\n            pipeline.setStateAtKey(stateKey, nextColIndex);\r\n            (_a = opts.onChangeHoverColIndex) === null || _a === void 0 ? void 0 : _a.call(opts, nextColIndex);\r\n        };\r\n        return pipeline.mapColumns(makeRecursiveMapper((col, { startIndex, endIndex }) => {\r\n            const range = { start: startIndex, end: endIndex };\r\n            if (!isLeafNode(col)) {\r\n                return col;\r\n            }\r\n            const colIndexMatched = range.start <= hoverColIndex && hoverColIndex < range.end;\r\n            const prevGetCellProps = col.getCellProps;\r\n            return Object.assign(Object.assign({}, col), { getCellProps(value, record, rowIndex) {\r\n                    const prevCellProps = prevGetCellProps === null || prevGetCellProps === void 0 ? void 0 : prevGetCellProps(value, record, rowIndex);\r\n                    return mergeCellProps(prevCellProps, {\r\n                        style: { '--bgcolor': colIndexMatched ? hoverColor : undefined },\r\n                        onMouseEnter() {\r\n                            onChangeHoverColIndex(range.start);\r\n                        },\r\n                        onMouseLeave() {\r\n                            onChangeHoverColIndex(-1);\r\n                        },\r\n                    });\r\n                } });\r\n        }));\r\n    };\r\n}\n\nconst EMPTY_RANGE = {\r\n    start: -1,\r\n    end: -1,\r\n};\r\nfunction columnRangeHover(opts = {}) {\r\n    const stateKey = 'columnHover';\r\n    return function columnRangeHoverStep(pipeline) {\r\n        var _a, _b, _c, _d, _e;\r\n        const hoverRange = (_c = (_b = (_a = opts.hoverRange) !== null && _a !== void 0 ? _a : pipeline.getStateAtKey(stateKey)) !== null && _b !== void 0 ? _b : opts.defaultHoverRange) !== null && _c !== void 0 ? _c : EMPTY_RANGE;\r\n        const hoverColor = (_d = opts.hoverColor) !== null && _d !== void 0 ? _d : 'var(--hover-bgcolor)';\r\n        const headerHoverColor = (_e = opts.headerHoverColor) !== null && _e !== void 0 ? _e : 'var(--header-hover-bgcolor)';\r\n        const onChangeHoverRange = (nextColIndexRange) => {\r\n            var _a;\r\n            pipeline.setStateAtKey(stateKey, nextColIndexRange);\r\n            (_a = opts.onChangeHoverRange) === null || _a === void 0 ? void 0 : _a.call(opts, nextColIndexRange);\r\n        };\r\n        return pipeline.mapColumns(makeRecursiveMapper((col, { startIndex, endIndex }) => {\r\n            const colRange = { start: startIndex, end: endIndex };\r\n            const match = colRange.end > hoverRange.start && hoverRange.end > colRange.start;\r\n            if (!isLeafNode(col)) {\r\n                if (headerHoverColor == null) {\r\n                    return col;\r\n                }\r\n                return Object.assign(Object.assign({}, col), { headerCellProps: mergeCellProps(col.headerCellProps, {\r\n                        onMouseEnter() {\r\n                            onChangeHoverRange(colRange);\r\n                        },\r\n                        onMouseLeave() {\r\n                            onChangeHoverRange(EMPTY_RANGE);\r\n                        },\r\n                        style: { '--header-bgcolor': match ? headerHoverColor : undefined },\r\n                    }) });\r\n            }\r\n            const prevGetCellProps = col.getCellProps;\r\n            return Object.assign(Object.assign({}, col), { headerCellProps: mergeCellProps(col.headerCellProps, {\r\n                    onMouseEnter() {\r\n                        onChangeHoverRange(colRange);\r\n                    },\r\n                    onMouseLeave() {\r\n                        onChangeHoverRange(EMPTY_RANGE);\r\n                    },\r\n                    style: { '--header-bgcolor': match ? headerHoverColor : undefined },\r\n                }), getCellProps(value, record, rowIndex) {\r\n                    const prevCellProps = prevGetCellProps === null || prevGetCellProps === void 0 ? void 0 : prevGetCellProps(value, record, rowIndex);\r\n                    return mergeCellProps(prevCellProps, {\r\n                        onMouseEnter() {\r\n                            onChangeHoverRange(colRange);\r\n                        },\r\n                        onMouseLeave() {\r\n                            onChangeHoverRange(EMPTY_RANGE);\r\n                        },\r\n                        style: { '--bgcolor': match ? hoverColor : undefined },\r\n                    });\r\n                } });\r\n        }));\r\n    };\r\n}\n\nfunction clamp(min, x, max) {\r\n    return Math.max(min, Math.min(max, x));\r\n}\r\nconst ResizeHandle = styled__default.span `\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  right: -5px;\n  width: 10px;\n  cursor: col-resize;\n  z-index: 1;\n  transition: background-color 200ms;\n\n  background: ${(props) => {\r\n    return props['var-handleBackground'];\r\n}};\n\n  &:hover {\n    background: ${(props) => {\r\n    return props['var-handleHoverBackground'];\r\n}};\n  }\n`;\r\nfunction columnResize(opts = {}) {\r\n    var _a, _b, _c, _d;\r\n    const stateKey = 'columnResize';\r\n    const disableUserSelectWhenResizing = (_a = opts.disableUserSelectWhenResizing) !== null && _a !== void 0 ? _a : true;\r\n    const minSize = (_b = opts.minSize) !== null && _b !== void 0 ? _b : 60;\r\n    const fallbackSize = (_c = opts.fallbackSize) !== null && _c !== void 0 ? _c : 150;\r\n    const maxSize = (_d = opts.maxSize) !== null && _d !== void 0 ? _d : 1000;\r\n    return function columnResizeFeature(pipeline) {\r\n        var _a, _b, _c;\r\n        const sizes = (_c = (_b = (_a = opts.sizes) !== null && _a !== void 0 ? _a : pipeline.getStateAtKey(stateKey)) !== null && _b !== void 0 ? _b : opts.defaultSizes) !== null && _c !== void 0 ? _c : [];\r\n        const leafColumns = collectNodes(pipeline.getColumns(), 'leaf-only');\r\n        leafColumns.forEach((col, colIndex) => {\r\n            if (sizes[colIndex] == null) {\r\n                if (typeof col.width === 'number') {\r\n                    sizes[colIndex] = col.width;\r\n                }\r\n                else {\r\n                    sizes[colIndex] = fallbackSize;\r\n                }\r\n            }\r\n        });\r\n        const onChangeSizes = (nextSizes) => {\r\n            var _a;\r\n            pipeline.setStateAtKey(stateKey, nextSizes);\r\n            (_a = opts.onChangeSizes) === null || _a === void 0 ? void 0 : _a.call(opts, nextSizes);\r\n        };\r\n        const startResize = (startIndex, endIndex, e) => {\r\n            const startX = e.clientX;\r\n            const target = e.target;\r\n            const nextSizes$ = fromEvent(window, 'mousemove').pipe(op.takeUntil(fromEvent(window, 'mouseup')), op.map((e) => {\r\n                const movingX = e.clientX;\r\n                const nextSizes = sizes.slice();\r\n                const deltaSum = movingX - startX;\r\n                const sizeSum = sizes.slice(startIndex, endIndex).reduce((sum, s) => sum + s, 0);\r\n                let deltaRemaining = deltaSum;\r\n                for (let colIndex = startIndex; colIndex < endIndex - 1; colIndex++) {\r\n                    const startSize = sizes[colIndex];\r\n                    // 将每一列的宽度变化量 都四舍五入至 整数，不然看起来非常难受\r\n                    const colDelta = Math.round(deltaSum * (startSize / sizeSum));\r\n                    nextSizes[colIndex] = clamp(minSize, startSize + colDelta, maxSize);\r\n                    deltaRemaining -= colDelta;\r\n                }\r\n                // 因为前面的列宽都进行了四舍五入，最后一列的变化量需要使用 deltaRemaining 以避免误差\r\n                nextSizes[endIndex - 1] = clamp(minSize, sizes[endIndex - 1] + deltaRemaining, maxSize);\r\n                return nextSizes;\r\n            }));\r\n            let prevUserSelect = '';\r\n            let docElemStyle;\r\n            if (disableUserSelectWhenResizing) {\r\n                docElemStyle = document.documentElement.style;\r\n                prevUserSelect = docElemStyle.userSelect;\r\n                docElemStyle.userSelect = 'none';\r\n            }\r\n            if (opts.handleActiveBackground) {\r\n                target.style.background = opts.handleActiveBackground;\r\n            }\r\n            nextSizes$.subscribe({\r\n                next: onChangeSizes,\r\n                complete() {\r\n                    if (disableUserSelectWhenResizing) {\r\n                        docElemStyle.userSelect = prevUserSelect;\r\n                    }\r\n                    if (opts.handleActiveBackground) {\r\n                        target.style.background = '';\r\n                    }\r\n                },\r\n            });\r\n        };\r\n        return pipeline.mapColumns(makeRecursiveMapper((col, { startIndex, endIndex }) => {\r\n            const prevTitle = internals.safeRenderHeader(col);\r\n            return Object.assign(Object.assign({}, col), { width: sizes[startIndex], title: (React.createElement(React.Fragment, null,\r\n                    prevTitle,\r\n                    React.createElement(ResizeHandle, { className: \"resize-handle\", \"var-handleBackground\": opts.handleBackground, \"var-handleHoverBackground\": opts.handleHoverBackground, onMouseDown: (e) => startResize(startIndex, endIndex, e) }))), headerCellProps: mergeCellProps(col.headerCellProps, {\r\n                    style: {\r\n                        overflow: 'visible',\r\n                        position: 'relative',\r\n                    },\r\n                }) });\r\n        }));\r\n    };\r\n}\n\nfunction multiSelect(opts = {}) {\r\n    return function multiSelectStep(pipeline) {\r\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l;\r\n        const stateKey = 'multiSelect';\r\n        const Checkbox = pipeline.ctx.components.Checkbox;\r\n        if (Checkbox == null) {\r\n            throw new Error('使用 multiSelect 之前需要设置 pipeline.ctx.components.Checkbox');\r\n        }\r\n        const primaryKey = pipeline.ensurePrimaryKey('multiSelect');\r\n        const isDisabled = (_a = opts.isDisabled) !== null && _a !== void 0 ? _a : always(false);\r\n        const clickArea = (_b = opts.clickArea) !== null && _b !== void 0 ? _b : 'checkbox';\r\n        const value = (_f = (_e = (_c = opts.value) !== null && _c !== void 0 ? _c : (_d = pipeline.getStateAtKey(stateKey)) === null || _d === void 0 ? void 0 : _d.value) !== null && _e !== void 0 ? _e : opts.defaultValue) !== null && _f !== void 0 ? _f : [];\r\n        const lastKey = (_k = (_j = (_g = opts.lastKey) !== null && _g !== void 0 ? _g : (_h = pipeline.getStateAtKey(stateKey)) === null || _h === void 0 ? void 0 : _h.lastKey) !== null && _j !== void 0 ? _j : opts.defaultLastKey) !== null && _k !== void 0 ? _k : '';\r\n        const onChange = (nextValue, key, keys, action) => {\r\n            var _a;\r\n            (_a = opts.onChange) === null || _a === void 0 ? void 0 : _a.call(opts, nextValue, key, keys, action);\r\n            pipeline.setStateAtKey(stateKey, { value: nextValue, lastKey: key }, { keys, action });\r\n        };\r\n        const dataSource = pipeline.getDataSource();\r\n        /** dataSource 中包含的所有 keys */\r\n        const fullKeySet = new Set();\r\n        /** 所有有效的 keys（disable 状态为 false） */\r\n        const allKeys = [];\r\n        dataSource.forEach((row, rowIndex) => {\r\n            const rowKey = internals.safeGetRowKey(primaryKey, row, rowIndex);\r\n            fullKeySet.add(rowKey);\r\n            // 在 allKeys 中排除被禁用的 key\r\n            if (!isDisabled(row, rowIndex)) {\r\n                allKeys.push(rowKey);\r\n            }\r\n        });\r\n        const set = new Set(value);\r\n        const isAllChecked = allKeys.length > 0 && allKeys.every((key) => set.has(key));\r\n        const isAnyChecked = allKeys.some((key) => set.has(key));\r\n        const defaultCheckboxColumnTitle = (React.createElement(Checkbox, { checked: isAllChecked, indeterminate: !isAllChecked && isAnyChecked, onChange: (_) => {\r\n                if (isAllChecked) {\r\n                    onChange(arrayUtils.diff(value, allKeys), '', allKeys, 'uncheck-all');\r\n                }\r\n                else {\r\n                    onChange(arrayUtils.merge(value, allKeys), '', allKeys, 'check-all');\r\n                }\r\n            } }));\r\n        const checkboxColumn = Object.assign(Object.assign({ name: '是否选中', title: defaultCheckboxColumnTitle, width: 50, align: 'center' }, opts.checkboxColumn), { getCellProps(value, row, rowIndex) {\r\n                const rowKey = internals.safeGetRowKey(primaryKey, row, rowIndex);\r\n                if (fullKeySet.has(rowKey) && clickArea === 'cell') {\r\n                    const prevChecked = set.has(rowKey);\r\n                    const disabled = isDisabled(row, rowIndex);\r\n                    return {\r\n                        style: { cursor: disabled ? 'not-allowed' : 'pointer' },\r\n                        onClick: disabled\r\n                            ? undefined\r\n                            : (e) => {\r\n                                if (opts.stopClickEventPropagation) {\r\n                                    e.stopPropagation();\r\n                                }\r\n                                onCheckboxChange(prevChecked, rowKey, e.shiftKey);\r\n                            },\r\n                    };\r\n                }\r\n            },\r\n            render(_, row, rowIndex) {\r\n                const key = internals.safeGetRowKey(primaryKey, row, rowIndex);\r\n                const checked = set.has(key);\r\n                return (React.createElement(Checkbox, { checked: checked, disabled: isDisabled(row, rowIndex), onChange: clickArea === 'checkbox'\r\n                        ? (arg1, arg2) => {\r\n                            var _a;\r\n                            // 这里要同时兼容 antd 和 fusion 的用法\r\n                            // fusion: arg2?.nativeEvent\r\n                            // antd: arg1.nativeEvent\r\n                            const nativeEvent = (_a = arg2 === null || arg2 === void 0 ? void 0 : arg2.nativeEvent) !== null && _a !== void 0 ? _a : arg1.nativeEvent;\r\n                            if (nativeEvent) {\r\n                                if (opts.stopClickEventPropagation) {\r\n                                    nativeEvent.stopPropagation();\r\n                                }\r\n                                onCheckboxChange(checked, key, nativeEvent.shiftKey);\r\n                            }\r\n                        }\r\n                        : undefined }));\r\n            } });\r\n        const nextColumns = pipeline.getColumns().slice();\r\n        const checkboxPlacement = (_l = opts.checkboxPlacement) !== null && _l !== void 0 ? _l : 'start';\r\n        if (checkboxPlacement === 'start') {\r\n            nextColumns.unshift(checkboxColumn);\r\n        }\r\n        else {\r\n            nextColumns.push(checkboxColumn);\r\n        }\r\n        pipeline.columns(nextColumns);\r\n        pipeline.appendRowPropsGetter((row, rowIndex) => {\r\n            const rowKey = internals.safeGetRowKey(primaryKey, row, rowIndex);\r\n            if (!fullKeySet.has(rowKey)) {\r\n                // rowKey 不在 fullKeySet 中说明这一行是在 multiSelect 之后才生成的，multiSelect 不对之后生成的行进行处理\r\n                return;\r\n            }\r\n            let style = {};\r\n            let className;\r\n            let onClick;\r\n            const checked = set.has(rowKey);\r\n            if (opts.highlightRowWhenSelected && checked) {\r\n                className = 'highlight';\r\n            }\r\n            if (clickArea === 'row') {\r\n                const disabled = isDisabled(row, rowIndex);\r\n                if (!disabled) {\r\n                    style.cursor = 'pointer';\r\n                    onClick = (e) => {\r\n                        if (opts.stopClickEventPropagation) {\r\n                            e.stopPropagation();\r\n                        }\r\n                        onCheckboxChange(checked, rowKey, e.shiftKey);\r\n                    };\r\n                }\r\n            }\r\n            return { className, style, onClick };\r\n        });\r\n        return pipeline;\r\n        function onCheckboxChange(prevChecked, key, batch) {\r\n            let batchKeys = [key];\r\n            if (batch && lastKey) {\r\n                const lastIdx = allKeys.indexOf(lastKey);\r\n                const cntIdx = allKeys.indexOf(key);\r\n                const [start, end] = lastIdx < cntIdx ? [lastIdx, cntIdx] : [cntIdx, lastIdx];\r\n                batchKeys = allKeys.slice(start, end + 1);\r\n            }\r\n            if (prevChecked) {\r\n                onChange(arrayUtils.diff(value, batchKeys), key, batchKeys, 'uncheck');\r\n            }\r\n            else {\r\n                onChange(arrayUtils.merge(value, batchKeys), key, batchKeys, 'check');\r\n            }\r\n        }\r\n    };\r\n}\n\nconst rowDetailSymbol = Symbol('row-detail');\r\nconst fallbackRenderDetail = () => (React.createElement(\"div\", { style: { margin: '8px 24px' } },\r\n    React.createElement(\"b\", { style: { color: 'indianred' } },\r\n        \"\\u8BBE\\u7F6E \",\r\n        React.createElement(\"code\", null, \"rowDetail.renderDetail\"),\r\n        \" \\u6765\\u81EA\\u5B9A\\u4E49\\u8BE6\\u60C5\\u5185\\u5BB9\")));\r\nfunction rowDetail(opts = {}) {\r\n    return function rowDetailStep(pipeline) {\r\n        var _a, _b, _c, _d, _e, _f, _g, _h;\r\n        const stateKey = 'rowDetail';\r\n        const primaryKey = pipeline.ensurePrimaryKey('rowDetail');\r\n        if (typeof primaryKey !== 'string') {\r\n            throw new Error('rowDetail 仅支持字符串作为 primaryKey');\r\n        }\r\n        const rowDetailMetaKey = (_a = opts.rowDetailMetaKey) !== null && _a !== void 0 ? _a : rowDetailSymbol;\r\n        const indents = pipeline.ctx.indents;\r\n        const textOffset = indents.iconIndent + indents.iconWidth + indents.iconGap;\r\n        const clickArea = (_b = opts.clickArea) !== null && _b !== void 0 ? _b : 'cell';\r\n        const getDetailKey = (_c = opts.getDetailKey) !== null && _c !== void 0 ? _c : ((row) => row[primaryKey] + '_detail');\r\n        const renderDetail = (_d = opts.renderDetail) !== null && _d !== void 0 ? _d : fallbackRenderDetail;\r\n        const hasDetail = (_e = opts.hasDetail) !== null && _e !== void 0 ? _e : always(true);\r\n        const openKeys = (_h = (_g = (_f = opts.openKeys) !== null && _f !== void 0 ? _f : pipeline.getStateAtKey(stateKey)) !== null && _g !== void 0 ? _g : (opts.defaultOpenAll\r\n            ? pipeline\r\n                .getDataSource()\r\n                .filter(hasDetail)\r\n                .map((row) => row[primaryKey])\r\n            : opts.defaultOpenKeys)) !== null && _h !== void 0 ? _h : [];\r\n        const onChangeOpenKeys = (nextKeys, key, action) => {\r\n            var _a;\r\n            (_a = opts.onChangeOpenKeys) === null || _a === void 0 ? void 0 : _a.call(opts, nextKeys, key, action);\r\n            pipeline.setStateAtKey(stateKey, nextKeys, { key, action });\r\n        };\r\n        const openKeySet = new Set(openKeys);\r\n        const toggle = (rowKey) => {\r\n            const expanded = openKeySet.has(rowKey);\r\n            if (expanded) {\r\n                onChangeOpenKeys(openKeys.filter((key) => key !== rowKey), rowKey, 'collapse');\r\n            }\r\n            else {\r\n                onChangeOpenKeys([...openKeys, rowKey], rowKey, 'expand');\r\n            }\r\n        };\r\n        return pipeline\r\n            .dataSource(flatMap(pipeline.getDataSource(), (row, rowIndex) => {\r\n            if (openKeySet.has(row[primaryKey])) {\r\n                return [row, Object.assign(Object.assign({ [rowDetailMetaKey]: true }, row), { [primaryKey]: getDetailKey(row, rowIndex) })];\r\n            }\r\n            else {\r\n                return [row];\r\n            }\r\n        }))\r\n            .columns(processColumns(pipeline.getColumns()))\r\n            .appendRowPropsGetter((row) => {\r\n            if (row[rowDetailMetaKey]) {\r\n                return { className: 'no-hover' };\r\n            }\r\n        });\r\n        function processColumns(columns) {\r\n            if (columns.length === 0) {\r\n                return columns;\r\n            }\r\n            const columnFlatCount = collectNodes(columns, 'leaf-only').length;\r\n            const [firstCol, ...others] = columns;\r\n            const render = (value, row, rowIndex) => {\r\n                if (row[rowDetailMetaKey]) {\r\n                    return renderDetail(row, rowIndex);\r\n                }\r\n                const content = internals.safeRender(firstCol, row, rowIndex);\r\n                if (!hasDetail(row, rowIndex)) {\r\n                    return React.createElement(InlineFlexCell, { style: { marginLeft: textOffset } }, content);\r\n                }\r\n                const rowKey = row[primaryKey];\r\n                const expanded = openKeySet.has(rowKey);\r\n                const onClick = (e) => {\r\n                    if (opts.stopClickEventPropagation) {\r\n                        e.stopPropagation();\r\n                    }\r\n                    toggle(rowKey);\r\n                };\r\n                const expandCls = expanded ? 'expanded' : 'collapsed';\r\n                return (React.createElement(ExpansionCell, { className: cx('expansion-cell', expandCls), style: { cursor: clickArea === 'content' ? 'pointer' : undefined }, onClick: clickArea === 'content' ? onClick : undefined },\r\n                    React.createElement(icons.CaretRight, { style: {\r\n                            cursor: clickArea === 'icon' ? 'pointer' : undefined,\r\n                            marginLeft: indents.iconIndent,\r\n                            marginRight: indents.iconGap,\r\n                        }, className: cx('expansion-icon', expandCls), onClick: clickArea === 'icon' ? onClick : undefined }),\r\n                    content));\r\n            };\r\n            const getCellProps = (value, row, rowIndex) => {\r\n                var _a;\r\n                if (row[rowDetailMetaKey]) {\r\n                    return {\r\n                        style: Object.assign({ '--cell-padding': '0', overflow: 'hidden' }, opts.detailCellStyle),\r\n                    };\r\n                }\r\n                const prevProps = (_a = firstCol.getCellProps) === null || _a === void 0 ? void 0 : _a.call(firstCol, value, row, rowIndex);\r\n                if (!hasDetail(row, rowIndex)) {\r\n                    return prevProps;\r\n                }\r\n                return mergeCellProps(prevProps, {\r\n                    onClick(e) {\r\n                        if (opts.stopClickEventPropagation) {\r\n                            e.stopPropagation();\r\n                        }\r\n                        toggle(row[primaryKey]);\r\n                    },\r\n                    style: { cursor: 'pointer' },\r\n                });\r\n            };\r\n            return [\r\n                Object.assign(Object.assign({}, firstCol), { title: (React.createElement(\"div\", { style: { display: 'inline-block', marginLeft: textOffset } }, internals.safeRenderHeader(firstCol))), render, getCellProps: clickArea === 'cell' ? getCellProps : firstCol.getCellProps, getSpanRect(value, row, rowIndex) {\r\n                        if (row[rowDetailMetaKey]) {\r\n                            // detail 总是成一行\r\n                            return { top: rowIndex, bottom: rowIndex + 1, left: 0, right: columnFlatCount };\r\n                        }\r\n                    } }),\r\n                ...others,\r\n            ];\r\n        }\r\n    };\r\n}\n\nconst groupingMetaSymbol = Symbol('row-grouping-meta');\r\nfunction attachGroupingMeta(row) {\r\n    return Object.assign({ [groupingMetaSymbol]: { expandable: !isLeafNode(row) } }, row);\r\n}\r\nfunction getGroupingMeta(row) {\r\n    if (row[groupingMetaSymbol] == null) {\r\n        return { isGroupHeader: false, expandable: false };\r\n    }\r\n    return { isGroupHeader: true, expandable: row[groupingMetaSymbol].expandable };\r\n}\r\nfunction rowGroupingRowPropsGetter(row) {\r\n    if (getGroupingMeta(row).isGroupHeader) {\r\n        return { className: 'alternative' };\r\n    }\r\n}\r\nfunction rowGrouping(opts = {}) {\r\n    return (pipeline) => {\r\n        var _a, _b, _c;\r\n        const stateKey = 'rowGrouping';\r\n        const indents = pipeline.ctx.indents;\r\n        const textOffset = indents.iconIndent + indents.iconWidth + indents.iconGap;\r\n        const primaryKey = pipeline.ensurePrimaryKey('rowGrouping');\r\n        if (typeof primaryKey !== 'string') {\r\n            throw new Error('rowGrouping 仅支持字符串作为 primaryKey');\r\n        }\r\n        const openKeys = (_c = (_b = (_a = opts.openKeys) !== null && _a !== void 0 ? _a : pipeline.getStateAtKey(stateKey)) !== null && _b !== void 0 ? _b : (opts.defaultOpenAll ? pipeline.getDataSource().map((row) => row[primaryKey]) : opts.defaultOpenKeys)) !== null && _c !== void 0 ? _c : [];\r\n        const openKeySet = new Set(openKeys);\r\n        const onChangeOpenKeys = (nextKeys, key, action) => {\r\n            var _a;\r\n            (_a = opts.onChangeOpenKeys) === null || _a === void 0 ? void 0 : _a.call(opts, nextKeys, key, action);\r\n            pipeline.setStateAtKey(stateKey, nextKeys, { key, action });\r\n        };\r\n        return pipeline\r\n            .mapDataSource(processDataSource)\r\n            .mapColumns(processColumns)\r\n            .appendRowPropsGetter(rowGroupingRowPropsGetter);\r\n        function processDataSource(input) {\r\n            return flatMap(input, (row) => {\r\n                let result = [attachGroupingMeta(row)];\r\n                const expanded = openKeySet.has(row[primaryKey]);\r\n                if (expanded) {\r\n                    if (Array.isArray(row.children)) {\r\n                        result = result.concat(row.children);\r\n                    }\r\n                }\r\n                return result;\r\n            });\r\n        }\r\n        function processColumns(columns) {\r\n            if (columns.length === 0) {\r\n                return columns;\r\n            }\r\n            const columnFlatCount = collectNodes(columns, 'leaf-only').length;\r\n            const [firstCol, ...others] = columns;\r\n            const render = (value, row, rowIndex) => {\r\n                var _a, _b;\r\n                const content = internals.safeRender(firstCol, row, rowIndex);\r\n                const meta = getGroupingMeta(row);\r\n                if (!meta.isGroupHeader || !meta.expandable) {\r\n                    const marginLeft = textOffset + (meta.isGroupHeader ? 0 : indents.indentSize);\r\n                    return (React.createElement(InlineFlexCell, { style: { marginLeft } }, meta.isGroupHeader ? (_a = row.groupTitle) !== null && _a !== void 0 ? _a : content : content));\r\n                }\r\n                const expanded = openKeySet.has(row[primaryKey]);\r\n                const expandCls = expanded ? 'expanded' : 'collapsed';\r\n                return (React.createElement(ExpansionCell, { className: cx('expansion-cell', expandCls) },\r\n                    React.createElement(icons.CaretRight, { className: cx('expansion-icon', expandCls), style: { marginLeft: indents.iconIndent, marginRight: indents.iconGap } }), (_b = row.groupTitle) !== null && _b !== void 0 ? _b : content));\r\n            };\r\n            const getCellProps = (value, row, rowIndex) => {\r\n                var _a;\r\n                const meta = getGroupingMeta(row);\r\n                if (!meta.isGroupHeader) {\r\n                    return;\r\n                }\r\n                const { expandable } = meta;\r\n                const rowKey = row[primaryKey];\r\n                const expanded = openKeySet.has(rowKey);\r\n                let onClick;\r\n                if (expandable) {\r\n                    onClick = (e) => {\r\n                        if (opts.stopClickEventPropagation) {\r\n                            e.stopPropagation();\r\n                        }\r\n                        if (expanded) {\r\n                            onChangeOpenKeys(openKeys.filter((key) => key !== rowKey), rowKey, 'collapse');\r\n                        }\r\n                        else {\r\n                            onChangeOpenKeys([...openKeys, rowKey], rowKey, 'expand');\r\n                        }\r\n                    };\r\n                }\r\n                const prevProps = (_a = firstCol.getCellProps) === null || _a === void 0 ? void 0 : _a.call(firstCol, value, row, rowIndex);\r\n                return mergeCellProps(prevProps, {\r\n                    onClick,\r\n                    style: { cursor: expandable ? 'pointer' : undefined },\r\n                });\r\n            };\r\n            return [\r\n                Object.assign(Object.assign({}, firstCol), { title: (React.createElement(\"div\", { style: { display: 'inline-block', marginLeft: textOffset } }, internals.safeRenderHeader(firstCol))), render,\r\n                    getCellProps, getSpanRect(value, row, rowIndex) {\r\n                        if (getGroupingMeta(row).isGroupHeader) {\r\n                            return { top: rowIndex, bottom: rowIndex + 1, left: 0, right: columnFlatCount };\r\n                        }\r\n                    } }),\r\n                ...others,\r\n            ];\r\n        }\r\n    };\r\n}\n\nfunction getFirstDefinedValue(...values) {\r\n    for (let i = 0; i < values.length; i++) {\r\n        const v = values[i];\r\n        if (v !== undefined) {\r\n            return v;\r\n        }\r\n    }\r\n}\r\nfunction singleSelect(opts = {}) {\r\n    return function singleSelectStep(pipeline) {\r\n        var _a, _b, _c;\r\n        const Radio = pipeline.ctx.components.Radio;\r\n        if (Radio == null) {\r\n            throw new Error('使用 singleSelect 之前需要通过 pipeline context 设置 components.Radio');\r\n        }\r\n        const stateKey = 'singleSelect';\r\n        const clickArea = (_a = opts.clickArea) !== null && _a !== void 0 ? _a : 'radio';\r\n        const isDisabled = (_b = opts.isDisabled) !== null && _b !== void 0 ? _b : always(false);\r\n        const primaryKey = pipeline.ensurePrimaryKey('singleSelect');\r\n        const value = getFirstDefinedValue(opts.value, pipeline.getStateAtKey(stateKey), opts.defaultValue);\r\n        const onChange = (rowKey) => {\r\n            var _a;\r\n            (_a = opts.onChange) === null || _a === void 0 ? void 0 : _a.call(opts, rowKey);\r\n            pipeline.setStateAtKey(stateKey, rowKey);\r\n        };\r\n        const radioColumn = Object.assign(Object.assign({ name: '', width: 50, align: 'center' }, opts.radioColumn), { getCellProps(value, row, rowIndex) {\r\n                if (clickArea === 'cell') {\r\n                    const rowKey = internals.safeGetRowKey(primaryKey, row, rowIndex);\r\n                    const disabled = isDisabled(row, rowIndex);\r\n                    return {\r\n                        style: { cursor: disabled ? 'not-allowed' : 'pointer' },\r\n                        onClick: disabled\r\n                            ? undefined\r\n                            : (e) => {\r\n                                if (opts.stopClickEventPropagation) {\r\n                                    e.stopPropagation();\r\n                                }\r\n                                onChange(rowKey);\r\n                            },\r\n                    };\r\n                }\r\n            }, render: (_, row, rowIndex) => {\r\n                const rowKey = internals.safeGetRowKey(primaryKey, row, rowIndex);\r\n                return (React.createElement(Radio, { checked: value === rowKey, disabled: isDisabled(row, rowIndex), onChange: clickArea === 'radio'\r\n                        ? (arg1, arg2) => {\r\n                            var _a;\r\n                            const nativeEvent = (_a = arg2 === null || arg2 === void 0 ? void 0 : arg2.nativeEvent) !== null && _a !== void 0 ? _a : arg1 === null || arg1 === void 0 ? void 0 : arg1.nativeEvent;\r\n                            if (nativeEvent && opts.stopClickEventPropagation) {\r\n                                nativeEvent.stopPropagation();\r\n                            }\r\n                            onChange(rowKey);\r\n                        }\r\n                        : undefined }));\r\n            } });\r\n        const nextColumns = pipeline.getColumns().slice();\r\n        const radioPlacement = (_c = opts.radioPlacement) !== null && _c !== void 0 ? _c : 'start';\r\n        if (radioPlacement === 'start') {\r\n            nextColumns.unshift(radioColumn);\r\n        }\r\n        else {\r\n            nextColumns.push(radioColumn);\r\n        }\r\n        pipeline.columns(nextColumns);\r\n        pipeline.appendRowPropsGetter((row, rowIndex) => {\r\n            const rowKey = internals.safeGetRowKey(primaryKey, row, rowIndex);\r\n            let style = {};\r\n            let className;\r\n            let onClick;\r\n            if (opts.highlightRowWhenSelected) {\r\n                if (value === rowKey) {\r\n                    className = 'highlight';\r\n                }\r\n            }\r\n            if (clickArea === 'row' && !isDisabled(row, rowIndex)) {\r\n                style.cursor = 'pointer';\r\n                onClick = (e) => {\r\n                    if (opts.stopClickEventPropagation) {\r\n                        e.stopPropagation();\r\n                    }\r\n                    onChange(rowKey);\r\n                };\r\n            }\r\n            return { className, style, onClick };\r\n        });\r\n        return pipeline;\r\n    };\r\n}\n\nfunction SortIcon({ size = 32, style, className, order, onClick }) {\r\n    return (React.createElement(\"svg\", { style: style, className: className, focusable: \"false\", preserveAspectRatio: \"xMidYMid meet\", width: size, height: size, viewBox: \"0 0 32 32\", \"aria-hidden\": \"true\", onClick: onClick },\r\n        React.createElement(\"path\", { fill: order === 'asc' ? '#23A3FF' : '#bfbfbf', transform: \"translate(0, 4)\", d: \"M8 8L16 0 24 8z\" }),\r\n        React.createElement(\"path\", { fill: order === 'desc' ? '#23A3FF' : '#bfbfbf', transform: \"translate(0, -4)\", d: \"M24 24L16 32 8 24z \" })));\r\n}\r\nfunction DefaultSortHeaderCell({ children, column, onToggle, sortOrder, sortIndex, sortOptions, clickArea, }) {\r\n    // 通过 justify-content 来与 col.align 保持对齐方向一致\r\n    const justifyContent = column.align === 'right' ? 'flex-end' : column.align === 'center' ? 'center' : 'flex-start';\r\n    return (React.createElement(TableHeaderCell, { onClick: clickArea === 'content' ? onToggle : undefined, style: {\r\n            justifyContent,\r\n            cursor: clickArea === 'content' ? 'pointer' : undefined,\r\n        } },\r\n        children,\r\n        React.createElement(SortIcon, { onClick: clickArea === 'icon' ? onToggle : undefined, style: {\r\n                userSelect: 'none',\r\n                marginLeft: 2,\r\n                flexShrink: 0,\r\n                cursor: clickArea === 'icon' ? 'pointer' : undefined,\r\n            }, size: 16, order: sortOrder }),\r\n        sortOptions.mode === 'multiple' && sortIndex != -1 && (React.createElement(\"div\", { style: {\r\n                userSelect: 'none',\r\n                marginLeft: 2,\r\n                color: '#666',\r\n                flex: '0 0 auto',\r\n                fontSize: 10,\r\n                fontFamily: 'monospace',\r\n            } }, sortIndex + 1))));\r\n}\r\nfunction hasAnySortableColumns(cols) {\r\n    return cols.some((col) => { var _a; return Boolean((_a = col.features) === null || _a === void 0 ? void 0 : _a.sortable) || (!isLeafNode(col) && hasAnySortableColumns(col.children)); });\r\n}\r\nconst TableHeaderCell = styled__default.div `\n  display: flex;\n  align-items: center;\n`;\r\nconst stateKey = 'sort';\r\nfunction sort(opts = {}) {\r\n    return function sortStep(pipeline) {\r\n        var _a, _b, _c;\r\n        const { orders = ['desc', 'asc', 'none'], mode = 'multiple', SortHeaderCell = DefaultSortHeaderCell, keepDataSource, highlightColumnWhenActive, stopClickEventPropagation, clickArea = 'content', } = opts;\r\n        const inputSorts = (_c = (_b = (_a = opts.sorts) !== null && _a !== void 0 ? _a : pipeline.getStateAtKey(stateKey)) !== null && _b !== void 0 ? _b : opts.defaultSorts) !== null && _c !== void 0 ? _c : [];\r\n        const activeSorts = inputSorts.filter((s) => s.order !== 'none');\r\n        // 单字段排序的情况下 sorts 中只有第一个排序字段才会生效\r\n        const sorts = mode === 'multiple' ? activeSorts : activeSorts.slice(0, 1);\r\n        const onChangeSortsInMultipleMode = (nextSorts) => {\r\n            var _a;\r\n            (_a = opts.onChangeSorts) === null || _a === void 0 ? void 0 : _a.call(opts, nextSorts);\r\n            pipeline.setStateAtKey(stateKey, nextSorts);\r\n        };\r\n        const onChangeSorts = mode === 'multiple'\r\n            ? onChangeSortsInMultipleMode\r\n            : (nextSorts) => {\r\n                // 单字段排序的情况下，nextSorts 中只有最后一个排序字段才会生效\r\n                const len = nextSorts.length;\r\n                onChangeSortsInMultipleMode(nextSorts.slice(len - 1));\r\n            };\r\n        const sortOptions = {\r\n            sorts,\r\n            onChangeSorts,\r\n            orders,\r\n            mode,\r\n            keepDataSource,\r\n            highlightColumnWhenActive,\r\n            stopClickEventPropagation,\r\n            clickArea,\r\n        };\r\n        const sortMap = new Map(sorts.map((sort, index) => [sort.code, Object.assign({ index }, sort)]));\r\n        const dataSource = pipeline.getDataSource();\r\n        const columns = pipeline.getColumns();\r\n        if (process.env.NODE_ENV !== 'production') {\r\n            if (!hasAnySortableColumns(columns)) {\r\n                console.warn('[ali-react-table] commonTransform.sort 缺少可排序的列，请通过 column.features.sortable 来指定哪些列可排序', columns);\r\n            }\r\n        }\r\n        pipeline.dataSource(processDataSource(dataSource));\r\n        pipeline.columns(processColumns(columns));\r\n        return pipeline;\r\n        function processDataSource(dataSource) {\r\n            if (keepDataSource) {\r\n                return dataSource;\r\n            }\r\n            const sortColumnsMap = new Map(collectNodes(columns, 'leaf-only')\r\n                .filter((col) => { var _a, _b; return ((_a = col.features) === null || _a === void 0 ? void 0 : _a.sortable) !== false && ((_b = col.features) === null || _b === void 0 ? void 0 : _b.sortable) != null; })\r\n                .map((col) => [col.code, col]));\r\n            return layeredSort(dataSource, (x, y) => {\r\n                for (const { code, order } of sorts) {\r\n                    const column = sortColumnsMap.get(code);\r\n                    // 如果 code 对应的 column 不可排序，我们跳过该 code\r\n                    if (column == null) {\r\n                        continue;\r\n                    }\r\n                    const sortable = column.features.sortable;\r\n                    const compareFn = typeof sortable === 'function' ? sortable : smartCompare;\r\n                    const xValue = internals.safeGetValue(column, x, -1);\r\n                    const yValue = internals.safeGetValue(column, y, -1);\r\n                    const cmp = compareFn(xValue, yValue, x, y);\r\n                    if (cmp !== 0) {\r\n                        return cmp * (order === 'asc' ? 1 : -1);\r\n                    }\r\n                }\r\n                return 0;\r\n            });\r\n        }\r\n        // 在「升序 - 降序 - 不排序」之间不断切换\r\n        function toggle(code) {\r\n            const sort = sortMap.get(code);\r\n            if (sort == null) {\r\n                onChangeSorts(sorts.concat([{ code, order: orders[0] }]));\r\n            }\r\n            else {\r\n                const index = sorts.findIndex((s) => s.code === code);\r\n                const nextSorts = sorts.slice(0, index + 1);\r\n                const nextOrder = getNextOrder(sort.order);\r\n                if (nextOrder === 'none') {\r\n                    nextSorts.pop();\r\n                }\r\n                else {\r\n                    nextSorts[index] = Object.assign(Object.assign({}, nextSorts[index]), { order: nextOrder });\r\n                }\r\n                onChangeSorts(nextSorts);\r\n            }\r\n        }\r\n        function processColumns(columns) {\r\n            return columns.map(dfs);\r\n            function dfs(col) {\r\n                var _a;\r\n                const result = Object.assign({}, col);\r\n                const sortable = col.code && (((_a = col.features) === null || _a === void 0 ? void 0 : _a.sortable) || sortMap.has(col.code));\r\n                const active = sortable && sortMap.has(col.code);\r\n                if (sortable) {\r\n                    let sortIndex = -1;\r\n                    let sortOrder = 'none';\r\n                    if (active) {\r\n                        const { order, index } = sortMap.get(col.code);\r\n                        sortOrder = order;\r\n                        sortIndex = index;\r\n                        if (highlightColumnWhenActive) {\r\n                            result.headerCellProps = mergeCellProps(col.headerCellProps, {\r\n                                style: { background: 'var(--header-highlight-bgcolor)' },\r\n                            });\r\n                            result.getCellProps = (value, row, rowIndex) => {\r\n                                const prevCellProps = internals.safeGetCellProps(col, row, rowIndex);\r\n                                return mergeCellProps(prevCellProps, {\r\n                                    style: { background: 'var(--highlight-bgcolor)' },\r\n                                });\r\n                            };\r\n                        }\r\n                    }\r\n                    result.title = (React.createElement(SortHeaderCell, { clickArea: clickArea, onToggle: (e) => {\r\n                            if (stopClickEventPropagation) {\r\n                                e.stopPropagation();\r\n                            }\r\n                            toggle(col.code);\r\n                        }, sortOrder: sortOrder, column: col, sortIndex: sortIndex, sortOptions: sortOptions }, internals.safeRenderHeader(col)));\r\n                }\r\n                if (!isLeafNode(col)) {\r\n                    result.children = col.children.map(dfs);\r\n                }\r\n                return result;\r\n            }\r\n        }\r\n        function getNextOrder(order) {\r\n            const idx = orders.indexOf(order);\r\n            return orders[idx === orders.length - 1 ? 0 : idx + 1];\r\n        }\r\n    };\r\n}\n\nconst HeaderCellWithTips = styled__default.div `\n  display: flex;\n  align-items: center;\n\n  .tip-icon-wrapper {\n    margin-left: 2px;\n  }\n\n  .tip-icon {\n    display: flex;\n    fill: currentColor;\n  }\n`;\r\nfunction tips() {\r\n    return function tipsSteap(pipeline) {\r\n        const Balloon = pipeline.ctx.components.Balloon;\r\n        const Tooltip = pipeline.ctx.components.Tooltip;\r\n        if (Balloon == null && Tooltip == null) {\r\n            throw new Error('使用 tips 之前需要通过 pipeline context 设置 components.Balloon / components.Tooltip');\r\n        }\r\n        return pipeline.mapColumns(makeRecursiveMapper((col) => {\r\n            var _a;\r\n            if (!((_a = col.features) === null || _a === void 0 ? void 0 : _a.tips)) {\r\n                return col;\r\n            }\r\n            const justifyContent = col.align === 'right' ? 'flex-end' : col.align === 'center' ? 'center' : 'flex-start';\r\n            return Object.assign(Object.assign({}, col), { title: (React.createElement(HeaderCellWithTips, { style: { justifyContent } },\r\n                    internals.safeRenderHeader(col),\r\n                    Balloon ? (\r\n                    // fusion/hippo\r\n                    React.createElement(Balloon, { closable: false, trigger: React.createElement(\"div\", { className: \"tip-icon-wrapper\" },\r\n                            React.createElement(icons.Info, { className: \"tip-icon\" })) }, col.features.tips)) : (\r\n                    // antd\r\n                    React.createElement(Tooltip, { title: col.features.tips },\r\n                        React.createElement(\"div\", { className: \"tip-icon-wrapper\" },\r\n                            React.createElement(icons.Info, { className: \"tip-icon\" })))))) });\r\n        }));\r\n    };\r\n}\n\nclass Wrapper$1 {\r\n    constructor(input) {\r\n        Object.assign(this, input);\r\n    }\r\n}\r\nclass StrictTreeDataHelper {\r\n    constructor(opts) {\r\n        this.opts = opts;\r\n        this.valueSet = new Set(opts.value);\r\n        this.initWrapperTree();\r\n    }\r\n    initWrapperTree() {\r\n        const { getNodeValue } = this.opts;\r\n        this.rootWrapper = new Wrapper$1({ root: true, children: [] });\r\n        this.wrapperMap = new Map();\r\n        const dfs = (parentWrapper, nodes) => {\r\n            for (const node of nodes) {\r\n                const wrapper = new Wrapper$1({\r\n                    parent: parentWrapper,\r\n                    node,\r\n                    checked: this.valueSet.has(getNodeValue(node)),\r\n                });\r\n                this.wrapperMap.set(getNodeValue(node), wrapper);\r\n                parentWrapper.children.push(wrapper);\r\n                if (!isLeafNode(node)) {\r\n                    wrapper.children = [];\r\n                    dfs(wrapper, node.children);\r\n                }\r\n            }\r\n        };\r\n        dfs(this.rootWrapper, this.opts.tree);\r\n    }\r\n    get value() {\r\n        return this.opts.value;\r\n    }\r\n    isIndeterminate(nodeValue) {\r\n        return false;\r\n    }\r\n    isChecked(nodeValue) {\r\n        return this.valueSet.has(nodeValue);\r\n    }\r\n    getValueAfterCheck(nodeValue) {\r\n        if (!this.isChecked(nodeValue)) {\r\n            return arrayUtils.merge(this.value, [nodeValue]);\r\n        }\r\n        return this.value;\r\n    }\r\n    getValueAfterUncheck(nodeValue) {\r\n        if (this.isChecked(nodeValue)) {\r\n            return arrayUtils.diff(this.value, [nodeValue]);\r\n        }\r\n        return this.value;\r\n    }\r\n    getValueAfterToggle(nodeValue) {\r\n        if (this.isChecked(nodeValue)) {\r\n            return this.getValueAfterUncheck(nodeValue);\r\n        }\r\n        else {\r\n            return this.getValueAfterCheck(nodeValue);\r\n        }\r\n    }\r\n    getNode(nodeValue) {\r\n        var _a;\r\n        return (_a = this.wrapperMap.get(nodeValue)) === null || _a === void 0 ? void 0 : _a.node;\r\n    }\r\n    getCleanValue() {\r\n        return this.value;\r\n    }\r\n}\n\nclass Wrapper {\r\n    constructor(input) {\r\n        Object.assign(this, input);\r\n    }\r\n}\r\nclass TreeDataHelper {\r\n    constructor(opts) {\r\n        this.isDetached = (node) => {\r\n            var _a, _b, _c;\r\n            return (_c = (_b = (_a = this.opts).isDetached) === null || _b === void 0 ? void 0 : _b.call(_a, node)) !== null && _c !== void 0 ? _c : false;\r\n        };\r\n        this.opts = opts;\r\n        this.valueSet = new Set(opts.value);\r\n        this.initWrapperTree();\r\n    }\r\n    get value() {\r\n        return this.opts.value;\r\n    }\r\n    initWrapperTree() {\r\n        const valueSet = new Set(this.value);\r\n        this.rootWrapper = new Wrapper({ root: true, children: [] });\r\n        this.wrapperMap = new Map();\r\n        const getNodeValue = this.opts.getNodeValue;\r\n        const { isDetached, wrapperMap } = this;\r\n        dfs(this.rootWrapper, this.opts.tree, false);\r\n        function dfs(parentWrapper, nodes, inheritParentChecked) {\r\n            // allChildrenChecked 先默认设置为 true\r\n            // dfs 过程中可能会更新 allChildrenChecked\r\n            parentWrapper.allChildrenChecked = true;\r\n            if (process.env.NODE_ENV !== 'production') {\r\n                if (nodes.every(isDetached)) {\r\n                    console.warn('TreeDataHelper 检测到部分节点的下所有子节点均为 detached 状态，这将导致该节点变为「无效节点」', parentWrapper.node);\r\n                }\r\n            }\r\n            for (const node of nodes) {\r\n                const detached = isDetached(node);\r\n                const exactChecked = valueSet.has(getNodeValue(node));\r\n                if (exactChecked && !detached) {\r\n                    parentWrapper.anyDescendentsChecked = true;\r\n                }\r\n                const parentChecked = !detached && inheritParentChecked;\r\n                const checked = exactChecked || parentChecked;\r\n                const wrapper = new Wrapper({\r\n                    parent: parentWrapper,\r\n                    node,\r\n                    checked,\r\n                    exactChecked,\r\n                    parentChecked,\r\n                    anyDescendentsChecked: checked,\r\n                    detached,\r\n                });\r\n                wrapperMap.set(getNodeValue(node), wrapper);\r\n                parentWrapper.children.push(wrapper);\r\n                if (!isLeafNode(node)) {\r\n                    wrapper.children = [];\r\n                    dfs(wrapper, node.children, checked);\r\n                    if (wrapper.anyDescendentsChecked && !detached) {\r\n                        parentWrapper.anyDescendentsChecked = true;\r\n                    }\r\n                    if (wrapper.allChildrenChecked) {\r\n                        wrapper.checked = true;\r\n                        // 当一个节点因为「子节点被全选」而变为 checked 时，我们需要更新子节点的 parentChecked 字段\r\n                        for (const child of wrapper.children) {\r\n                            if (!child.detached) {\r\n                                child.parentChecked = true;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                if (!wrapper.checked && !detached) {\r\n                    parentWrapper.allChildrenChecked = false;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    isIndeterminate(nodeValue) {\r\n        const wrapper = this.wrapperMap.get(nodeValue);\r\n        return !wrapper.checked && wrapper.anyDescendentsChecked;\r\n    }\r\n    isChecked(nodeValue) {\r\n        const wrapper = this.wrapperMap.get(nodeValue);\r\n        return wrapper.checked;\r\n    }\r\n    getValueAfterCheck(nodeValue) {\r\n        if (this.isChecked(nodeValue)) {\r\n            return this.getCleanValue();\r\n        }\r\n        const nextValue = arrayUtils.merge(this.value, [nodeValue]);\r\n        return new TreeDataHelper(Object.assign(Object.assign({}, this.opts), { value: nextValue })).getCleanValue();\r\n    }\r\n    getValueAfterUncheck(nodeValue) {\r\n        if (!this.isChecked(nodeValue)) {\r\n            return this.getCleanValue();\r\n        }\r\n        const wrapper = this.wrapperMap.get(nodeValue);\r\n        const { getNodeValue } = this.opts;\r\n        const appendArray = getAppendArray(wrapper);\r\n        const removeSet = getRemoveSet(wrapper);\r\n        const nextValue = arrayUtils.diff(this.value.concat(appendArray), removeSet);\r\n        return new TreeDataHelper(Object.assign(Object.assign({}, this.opts), { value: nextValue })).getCleanValue();\r\n        function getAppendArray(startWrapper) {\r\n            let result = [];\r\n            let current = startWrapper;\r\n            while (current.parentChecked && !current.detached) {\r\n                for (const sibling of current.parent.children) {\r\n                    if (sibling === current || sibling.exactChecked || sibling.detached) {\r\n                        continue;\r\n                    }\r\n                    result.push(getNodeValue(sibling.node));\r\n                }\r\n                current = current.parent;\r\n            }\r\n            return result;\r\n        }\r\n        function getRemoveSet(startWrapper) {\r\n            const result = new Set();\r\n            let wrapper = startWrapper;\r\n            // 不断向上收集选中的父节点\r\n            while (true) {\r\n                result.add(getNodeValue(wrapper.node));\r\n                if (wrapper.detached || !wrapper.parentChecked) {\r\n                    break;\r\n                }\r\n                wrapper = wrapper.parent;\r\n            }\r\n            function dfs(wrappers) {\r\n                if (wrappers == null) {\r\n                    return;\r\n                }\r\n                for (const wrapper of wrappers) {\r\n                    if (wrapper.detached || !wrapper.checked) {\r\n                        continue;\r\n                    }\r\n                    result.add(getNodeValue(wrapper.node));\r\n                    if (!isLeafNode(wrapper) && wrapper.anyDescendentsChecked) {\r\n                        dfs(wrapper.children);\r\n                    }\r\n                }\r\n            }\r\n            // 收集所有的子孙节点\r\n            dfs(startWrapper.children);\r\n            return result;\r\n        }\r\n    }\r\n    getValueAfterToggle(nodeValue) {\r\n        if (this.isChecked(nodeValue)) {\r\n            return this.getValueAfterUncheck(nodeValue);\r\n        }\r\n        else {\r\n            return this.getValueAfterCheck(nodeValue);\r\n        }\r\n    }\r\n    getNode(nodeValue) {\r\n        var _a;\r\n        return (_a = this.wrapperMap.get(nodeValue)) === null || _a === void 0 ? void 0 : _a.node;\r\n    }\r\n    getCleanValue() {\r\n        const { checkedStrategy, getNodeValue } = this.opts;\r\n        const result = this.value.filter((nodeValue) => {\r\n            return !this.wrapperMap.has(nodeValue);\r\n        });\r\n        dfs(this.rootWrapper.children);\r\n        return result;\r\n        function dfs(wrappers) {\r\n            for (const wrapper of wrappers) {\r\n                if (wrapper.checked) {\r\n                    if (checkedStrategy === 'all') {\r\n                        result.push(getNodeValue(wrapper.node));\r\n                    }\r\n                    else if (checkedStrategy === 'parent') {\r\n                        if (!wrapper.parentChecked) {\r\n                            result.push(getNodeValue(wrapper.node));\r\n                        }\r\n                    }\r\n                    else {\r\n                        // checkedStrategy === 'child'\r\n                        if (isLeafNode(wrapper)) {\r\n                            result.push(getNodeValue(wrapper.node));\r\n                        }\r\n                    }\r\n                }\r\n                if (!isLeafNode(wrapper)) {\r\n                    dfs(wrapper.children);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\n\nconst STATE_KEY = 'treeSelect';\r\nfunction treeSelect(opts) {\r\n    return function treeSelectStep(pipeline) {\r\n        var _a, _b, _c, _d, _e, _f, _g, _h;\r\n        const Checkbox = pipeline.ctx.components.Checkbox;\r\n        if (Checkbox == null) {\r\n            throw new Error('使用 treeSelect 之前需要通过 pipeline context 设置 components.Checkbox');\r\n        }\r\n        const primaryKey = pipeline.ensurePrimaryKey('treeSelect');\r\n        if (typeof primaryKey !== 'string') {\r\n            throw new Error('treeSelect 仅支持字符串作为 primaryKey');\r\n        }\r\n        const clickArea = (_a = opts.clickArea) !== null && _a !== void 0 ? _a : 'checkbox';\r\n        const isDisabled = (_b = opts.isDisabled) !== null && _b !== void 0 ? _b : always(false);\r\n        const isDetached = (_c = opts.isDetached) !== null && _c !== void 0 ? _c : always(false);\r\n        const value = (_f = (_e = (_d = opts.value) !== null && _d !== void 0 ? _d : pipeline.getStateAtKey(STATE_KEY)) !== null && _e !== void 0 ? _e : opts.defaultValue) !== null && _f !== void 0 ? _f : [];\r\n        const tree = opts.rootKey != null ? [{ [primaryKey]: opts.rootKey, children: opts.tree }] : opts.tree;\r\n        const getNodeValue = (node) => node[primaryKey];\r\n        const treeDataHelper = opts.checkStrictly\r\n            ? new StrictTreeDataHelper({ value, getNodeValue, tree })\r\n            : new TreeDataHelper({\r\n                value,\r\n                getNodeValue,\r\n                isDetached,\r\n                tree,\r\n                checkedStrategy: (_g = opts.checkedStrategy) !== null && _g !== void 0 ? _g : 'parent',\r\n            });\r\n        const onToggleKey = (key) => {\r\n            var _a;\r\n            const nextValue = treeDataHelper.getValueAfterToggle(key);\r\n            pipeline.setStateAtKey(STATE_KEY, nextValue);\r\n            (_a = opts.onChange) === null || _a === void 0 ? void 0 : _a.call(opts, nextValue);\r\n        };\r\n        const makeCheckbox = (key, root, row) => {\r\n            return (React.createElement(Checkbox, { checked: treeDataHelper.isChecked(key), indeterminate: treeDataHelper.isIndeterminate(key), disabled: !root && isDisabled(row), onChange: clickArea === 'checkbox' || root ? () => onToggleKey(key) : undefined }));\r\n        };\r\n        const checkboxColumn = Object.assign(Object.assign({ name: '', width: 50, align: 'center', title: opts.rootKey != null ? makeCheckbox(opts.rootKey, true) : undefined }, opts.checkboxColumn), { render(value, record) {\r\n                return makeCheckbox(record[primaryKey], false, record);\r\n            }, getCellProps(value, row) {\r\n                const rowKey = row[primaryKey];\r\n                if (clickArea !== 'cell') {\r\n                    return;\r\n                }\r\n                const disabled = isDisabled(row);\r\n                if (disabled) {\r\n                    return { style: { cursor: 'not-allowed' } };\r\n                }\r\n                return {\r\n                    style: { cursor: 'pointer' },\r\n                    onClick(e) {\r\n                        if (opts.stopClickEventPropagation) {\r\n                            e.stopPropagation();\r\n                        }\r\n                        onToggleKey(rowKey);\r\n                    },\r\n                };\r\n            } });\r\n        const nextColumns = pipeline.getColumns().slice();\r\n        const checkboxPlacement = (_h = opts.checkboxPlacement) !== null && _h !== void 0 ? _h : 'start';\r\n        if (checkboxPlacement === 'start') {\r\n            nextColumns.unshift(checkboxColumn);\r\n        }\r\n        else {\r\n            nextColumns.push(checkboxColumn);\r\n        }\r\n        pipeline.columns(nextColumns);\r\n        if (clickArea === 'row') {\r\n            pipeline.appendRowPropsGetter((row) => {\r\n                const disabled = isDisabled(row);\r\n                if (!disabled) {\r\n                    return {\r\n                        style: { cursor: 'pointer' },\r\n                        onClick(e) {\r\n                            if (opts.stopClickEventPropagation) {\r\n                                e.stopPropagation();\r\n                            }\r\n                            onToggleKey(row[primaryKey]);\r\n                        },\r\n                    };\r\n                }\r\n            });\r\n        }\r\n        if (opts.highlightRowWhenSelected) {\r\n            pipeline.appendRowPropsGetter((row) => {\r\n                if (treeDataHelper.isChecked(row[primaryKey])) {\r\n                    return { className: 'highlight' };\r\n                }\r\n            });\r\n        }\r\n        return pipeline;\r\n    };\r\n}\n\nvar index = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  autoRowSpan: autoRowSpan,\n  buildTree: buildTree,\n  columnHover: columnHover,\n  columnRangeHover: columnRangeHover,\n  columnResize: columnResize,\n  multiSelect: multiSelect,\n  rowDetail: rowDetail,\n  rowGrouping: rowGrouping,\n  singleSelect: singleSelect,\n  sort: sort,\n  tips: tips,\n  treeMode: treeMode,\n  treeMetaSymbol: treeMetaSymbol,\n  treeSelect: treeSelect\n});\n\nconst ICON_WIDTH = 16;\r\n/** @deprecated transform 用法已经过时，请使用 pipeline 来对表格进行拓展 */\r\nfunction makeTreeModeTransform({ onChangeOpenKeys, openKeys, primaryKey, iconIndent = -6, iconGap = 0, indentSize = 16, isLeafNode: isLeafNode$1 = isLeafNode, clickArea = 'cell', treeMetaKey = treeMetaSymbol, stopClickEventPropagation, }) {\r\n    warnTransformsDeprecated('makeTreeModeTransform');\r\n    const openKeySet = new Set(openKeys);\r\n    const toggle = (rowKey) => {\r\n        const expanded = openKeySet.has(rowKey);\r\n        if (expanded) {\r\n            onChangeOpenKeys(openKeys.filter((key) => key !== rowKey), rowKey, 'collapse');\r\n        }\r\n        else {\r\n            onChangeOpenKeys([...openKeys, rowKey], rowKey, 'expand');\r\n        }\r\n    };\r\n    return ({ columns, dataSource }) => {\r\n        return {\r\n            columns: processColumns(columns),\r\n            dataSource: processDataSource(dataSource),\r\n        };\r\n        function processDataSource(input) {\r\n            const result = [];\r\n            dfs(input, 0);\r\n            function dfs(nodes, depth) {\r\n                if (nodes == null) {\r\n                    return;\r\n                }\r\n                for (const node of nodes) {\r\n                    const rowKey = node[primaryKey];\r\n                    const expanded = openKeySet.has(rowKey);\r\n                    const isLeaf = isLeafNode$1(node, { depth, expanded, rowKey });\r\n                    const treeMeta = { depth, isLeaf, expanded, rowKey };\r\n                    result.push(Object.assign({ [treeMetaKey]: treeMeta }, node));\r\n                    if (!isLeaf && expanded) {\r\n                        dfs(node.children, depth + 1);\r\n                    }\r\n                }\r\n            }\r\n            return result;\r\n        }\r\n        function processColumns(columns) {\r\n            if (columns.length === 0) {\r\n                return columns;\r\n            }\r\n            const [firstCol, ...others] = columns;\r\n            const render = (value, record, recordIndex) => {\r\n                const content = internals.safeRender(firstCol, record, recordIndex);\r\n                if (record[treeMetaKey] == null) {\r\n                    // 没有 treeMeta 信息的话，就返回原先的渲染结果\r\n                    return content;\r\n                }\r\n                const { rowKey, depth, isLeaf, expanded } = record[treeMetaKey];\r\n                const indent = iconIndent + depth * indentSize;\r\n                if (isLeaf) {\r\n                    return (React.createElement(InlineFlexCell, { className: \"expansion-cell leaf\" },\r\n                        React.createElement(\"span\", { style: { marginLeft: indent + ICON_WIDTH + iconGap } }, content)));\r\n                }\r\n                const onClick = (e) => {\r\n                    if (stopClickEventPropagation) {\r\n                        e.stopPropagation();\r\n                    }\r\n                    toggle(rowKey);\r\n                };\r\n                const expandCls = expanded ? 'expanded' : 'collapsed';\r\n                return (React.createElement(ExpansionCell, { className: cx('expansion-cell', expandCls), style: {\r\n                        cursor: clickArea === 'content' ? 'pointer' : undefined,\r\n                    }, onClick: clickArea === 'content' ? onClick : undefined },\r\n                    React.createElement(icons.CaretRight, { className: cx('expansion-icon', expandCls), style: {\r\n                            cursor: clickArea === 'icon' ? 'pointer' : undefined,\r\n                            marginLeft: indent,\r\n                            marginRight: iconGap,\r\n                        }, onClick: clickArea === 'icon' ? onClick : undefined }),\r\n                    content));\r\n            };\r\n            const getCellProps = (value, record, rowIndex) => {\r\n                const prevProps = internals.safeGetCellProps(firstCol, record, rowIndex);\r\n                if (record[treeMetaKey] == null) {\r\n                    // 没有 treeMeta 信息的话，就返回原先的 cellProps\r\n                    return prevProps;\r\n                }\r\n                const { isLeaf, rowKey } = record[treeMetaKey];\r\n                if (isLeaf) {\r\n                    return prevProps;\r\n                }\r\n                return mergeCellProps(prevProps, {\r\n                    onClick(e) {\r\n                        if (stopClickEventPropagation) {\r\n                            e.stopPropagation();\r\n                        }\r\n                        toggle(rowKey);\r\n                    },\r\n                    style: { cursor: 'pointer' },\r\n                });\r\n            };\r\n            return [\r\n                Object.assign(Object.assign({}, firstCol), { title: (React.createElement(\"span\", { style: { marginLeft: iconIndent + ICON_WIDTH + iconGap } }, internals.safeRenderHeader(firstCol))), render, getCellProps: clickArea === 'cell' ? getCellProps : firstCol.getCellProps }),\r\n                ...others,\r\n            ];\r\n        }\r\n    };\r\n}\r\n/** @deprecated transform 用法已经过时，请使用 pipeline 来对表格进行拓展 */\r\nfunction useTreeModeTransform(_a) {\r\n    var { defaultOpenKeys = [] } = _a, others = __rest(_a, [\"defaultOpenKeys\"]);\r\n    const [openKeys, onChangeOpenKeys] = useState(defaultOpenKeys);\r\n    return makeTreeModeTransform(Object.assign({ openKeys,\r\n        onChangeOpenKeys }, others));\r\n}\n\n/** @deprecated transform 用法已经过时，请使用 pipeline 来对表格进行拓展 */\r\nfunction makeVisibleTransform(visibleCodes) {\r\n    warnTransformsDeprecated('makeVisibleTransform');\r\n    const set = new Set(visibleCodes);\r\n    return traverseColumn((column) => {\r\n        if (!isLeafNode(column)) {\r\n            return column;\r\n        }\r\n        return set.has(column.code) ? column : Object.assign(Object.assign({}, column), { hidden: true });\r\n    });\r\n}\n\nexport { applyTransforms, buildTree$1 as buildTree, exportTableAsExcel, index as features, groupBy, layeredSort, makeAutoRowSpanTransform, makeBuildTreeTransform, makeColumnHoverTransform, makeColumnRangeHoverTransform, makeColumnResizeTransform, makeFlattenTransform, makeOrderFieldTransform, makeRecursiveMapper, makeSortTransform, makeTipsTransform, makeTreeModeTransform, makeVisibleTransform, proto, smartCompare, traverseColumn, useAutoWidthTransform, useColumnHoverRangeTransform, useColumnHoverTransform, useColumnResizeTransform, useSortTransform, useTreeModeTransform };\n"]},"metadata":{},"sourceType":"module"}