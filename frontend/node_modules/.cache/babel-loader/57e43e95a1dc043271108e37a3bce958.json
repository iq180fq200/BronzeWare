{"ast":null,"code":"var _jsxFileName = \"D:\\\\ZJU5\\\\\\u8F6F\\u4EF6\\u5DE5\\u7A0B\\u7BA1\\u7406\\\\frontend\\\\src\\\\echarts\\\\MyMap.jsx\";\n//高级功能的标注点页面，应该没啥改的\nimport React from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst datasource = require(\"./datasource.json\");\n\nclass MyMap extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.changestate = () => {\n      this.setState({\n        a: true\n      });\n      console.log('1');\n    };\n\n    var data = []; // for(var i=0;i<datasource.length;i++){\n    //   if(datasource[i][\"地点\"]!=='空'){\n    //     data.push({\n    //       position:[parseFloat(datasource[i]['经度']),parseFloat(datasource[i]['维度'])],\n    //       content:datasource[i]['名称']+\" \"+datasource[i]['年代']\n    //     })\n    //   }\n    // }\n\n    console.log(data);\n    this.state = {\n      data: data,\n      a: false\n    };\n  }\n\n  componentDidMount() {\n    const markers = this.state.data;\n    mapboxgl.accessToken = 'pk.eyJ1IjoiemhhbmdqaW5neXVhbiIsImEiOiJja2R5cHhoNXYycGVtMnlteXkwZGViZDc2In0.UhckH-74AgPwMsDhPjparQ';\n    const map = new mapboxgl.Map({\n      container: this.mapContainer,\n      // container ID\n      style: 'mapbox://styles/mapbox/satellite-v9',\n      // style URL\n      center: [110, 30],\n      // starting position [lng, lat]\n      zoom: 4,\n      maxZoom: 5\n    });\n    markers.forEach(function (marker) {\n      const marker_on = new mapboxgl.Marker({\n        color: marker.color,\n        anchor: \"center\",\n        draggable: false\n      }).setLngLat(marker.position).addTo(map);\n      const el = marker_on.getElement();\n      el.addEventListener('click', () => {\n        window.alert(marker.content);\n      });\n      const popup = new mapboxgl.Popup({\n        anchor: marker.direction,\n        offset: marker.offset,\n        className: 'info',\n        closeButton: false,\n        closeOnClick: false,\n        width: '95%'\n      }).setLngLat(marker.position).addTo(map);\n    });\n    let url = null;\n    let that = this;\n    map.on('click', function (e) {\n      document.getElementById('info').innerHTML =\n      /* innerHTML 属性设置或返回表格行的开始和结束标签之间的 HTML  */\n      // e.point is the x, y coordinates of the mousemove event relative\n      // to the top-left corner of the map\n      JSON.stringify(e.point) + '<br />' + // e.lngLat is the longitude, latitude geographical position of the event\n      JSON.stringify(e.lngLat);\n      /* JSON.stringify() 方法可以将任意的 JavaScript 值序列化成 JSON 字符串 */\n\n      url = 'http://localhost:3002/around?x=' + e.lngLat.lng + '&y=' + e.lngLat.lat;\n      console.log(url);\n      fetch(url).then(res => res.json()).then(response => {\n        console.log(response);\n        var mydata = [];\n\n        for (var i = 0; i < response.length; i++) {\n          var pos = response[i].lon + response[i].lat;\n          var content = response[i].name + response[i].time;\n          mydata.push({\n            position: pos,\n            content: content\n          });\n        }\n\n        that.setState({\n          data: mydata\n        });\n        changestate();\n        console.log(that.state);\n      });\n    });\n  }\n\n  componentWillReceiveProps() {}\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"link\", {\n        href: \"https://api.mapbox.com/mapbox-gl-js/v1.12.0/mapbox-gl.css\",\n        rel: \"stylesheet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        id: \"info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: el => this.mapContainer = el,\n        style: {\n          height: '90%',\n          width: '95%',\n          position: 'absolute'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default MyMap;","map":{"version":3,"sources":["D:/ZJU5/软件工程管理/frontend/src/echarts/MyMap.jsx"],"names":["React","mapboxgl","datasource","require","MyMap","Component","constructor","props","changestate","setState","a","console","log","data","state","componentDidMount","markers","accessToken","map","Map","container","mapContainer","style","center","zoom","maxZoom","forEach","marker","marker_on","Marker","color","anchor","draggable","setLngLat","position","addTo","el","getElement","addEventListener","window","alert","content","popup","Popup","direction","offset","className","closeButton","closeOnClick","width","url","that","on","e","document","getElementById","innerHTML","JSON","stringify","point","lngLat","lng","lat","fetch","then","res","json","response","mydata","i","length","pos","lon","name","time","push","componentWillReceiveProps","render","height"],"mappings":"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","sourcesContent":["//高级功能的标注点页面，应该没啥改的\nimport React from 'react'\nimport mapboxgl from 'mapbox-gl';\nconst datasource=require(\"./datasource.json\");\n\nclass MyMap extends React.Component {\n  constructor(props){\n    super(props);\n    var data = [];\n    // for(var i=0;i<datasource.length;i++){\n    //   if(datasource[i][\"地点\"]!=='空'){\n    //     data.push({\n    //       position:[parseFloat(datasource[i]['经度']),parseFloat(datasource[i]['维度'])],\n    //       content:datasource[i]['名称']+\" \"+datasource[i]['年代']\n    //     })\n    //   }\n    // }\n    console.log(data);\n    this.state = {\n      data: data,\n      a:false,\n    };\n  }\n\n  changestate = ()=>{\n    this.setState({a:true});\n    console.log('1');\n  }\n\n  componentDidMount() {\n    const markers = this.state.data;\n \n    mapboxgl.accessToken = 'pk.eyJ1IjoiemhhbmdqaW5neXVhbiIsImEiOiJja2R5cHhoNXYycGVtMnlteXkwZGViZDc2In0.UhckH-74AgPwMsDhPjparQ';\n    const map = new mapboxgl.Map({\n      container: this.mapContainer, // container ID\n      style: 'mapbox://styles/mapbox/satellite-v9', // style URL\n      center:[110, 30], // starting position [lng, lat]\n      zoom: 4,\n      maxZoom:5\n    });\n\n    markers.forEach(function(marker) {\n        const marker_on = new mapboxgl.Marker({\n        color: marker.color,\n        anchor:\"center\",\n        draggable: false,\n      }).setLngLat(marker.position)\n      .addTo(map);\n\n      const el = marker_on.getElement();\n      el.addEventListener('click', () => {\n        window.alert(marker.content);\n      });\n\n      const popup = new mapboxgl.Popup({anchor:marker.direction,offset: marker.offset, className: 'info',closeButton:false,closeOnClick:false,width:'95%'})\n      .setLngLat(marker.position)\n      .addTo(map);\n    });\n    let url = null;\n    let that = this;\n    map.on('click', function (e) {\n      document.getElementById('info').innerHTML =       /* innerHTML 属性设置或返回表格行的开始和结束标签之间的 HTML  */\n          // e.point is the x, y coordinates of the mousemove event relative\n          // to the top-left corner of the map\n          JSON.stringify(e.point) + '<br />' +\n              // e.lngLat is the longitude, latitude geographical position of the event\n          JSON.stringify(e.lngLat);  /* JSON.stringify() 方法可以将任意的 JavaScript 值序列化成 JSON 字符串 */\n          url = 'http://localhost:3002/around?x='+e.lngLat.lng+'&y='+e.lngLat.lat;\n          console.log(url);\n          fetch(url).then(res=>res.json())\n          .then((response)=>{\n            console.log(response);\n            var mydata = [];\n            for(var i=0;i<response.length;i++){\n              var pos = response[i].lon+response[i].lat;\n              var content = response[i].name+response[i].time;\n              mydata.push({\n                position:pos,\n                content:content\n              })\n            }\n            that.setState({data: mydata});\n            changestate();\n            console.log(that.state);\n          })\n        });\n  }\n  componentWillReceiveProps(){\n    \n  }\n    \n\n  render() { \n    return (\n      <div>\n        {/* 引入样式文件 */}\n        <link href='https://api.mapbox.com/mapbox-gl-js/v1.12.0/mapbox-gl.css' rel='stylesheet' />\n        {/* 地图容器 */}\n        <pre id='info'></pre>\n        <div ref={el => this.mapContainer = el} style={{height: '90%', width:'95%', position: 'absolute'}} />\n      </div>\n    );\n  }\n}\n\nexport default MyMap;\n"]},"metadata":{},"sourceType":"module"}