{"ast":null,"code":"var _jsxFileName = \"E:\\\\frontend\\\\src\\\\echarts\\\\MyMap3.jsx\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport jsonData from './feiyan-data-list.json'; //https://c.m.163.com/ug/api/wuhan/app/index/feiyan-data-list\n\nimport * as echarts from 'echarts';\nimport '.China.json';\nimport geoJson from 'echarts/map/json/china.json';\nimport 'echarts/lib/chart/bar';\nimport 'echarts/lib/component/tooltip';\nimport 'echarts/lib/component/title';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet provincesObj = [];\njsonData.data.list.map(item => {\n  if (!provincesObj[item.province]) provincesObj[item.province] = {\n    'province': item.province,\n    \"confirm\": 0,\n    \"heal\": 0,\n    \"dead\": 0\n  };\n  provincesObj[item.province].confirm += item.confirm;\n  provincesObj[item.province].heal += item.heal;\n  provincesObj[item.province].dead += item.dead;\n});\nlet prok = [];\n\nfor (let key in provincesObj) {\n  prok.push(provincesObj[key]);\n}\n\nprok.sort((a, b) => b.confirm - a.confirm);\nconsole.log(new Date(jsonData.timestamp).toLocaleString(), '二月份的数据（数据不全已废弃）');\nconsole.log(prok);\nlet province = [];\nlet num = [];\nlet map = [];\nprok.map(item => {\n  province.push(item.province);\n  num.push(item.confirm);\n  map.push({\n    name: item.province,\n    value: item.confirm\n  });\n});\n\nclass Blist extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u4E2D\\u56FD\\u75C5\\u4F8B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\u5730\\u533A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\u786E\\u8BCA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\u6B7B\\u4EA1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\u6CBB\\u6108\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 19\n        }, this), this.props.list.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: item.province\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 35\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: item.confirm\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 35\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: item.dead\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 35\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: item.heal\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 35\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 31\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n\nclass EchartsTest extends React.Component {\n  componentDidMount() {\n    // 基于准备好的dom，初始化echarts实例\n    var myChart = echarts.init(document.getElementById('echarts')); // 绘制图表\n\n    myChart.setOption({\n      title: {\n        text: 'ECharts 中国疫情'\n      },\n      tooltip: {},\n      xAxis: {\n        data: province\n      },\n      yAxis: {},\n      series: [{\n        name: '确诊',\n        type: 'bar',\n        data: num\n      }]\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"echarts\",\n      style: {\n        width: '80vw',\n        height: \"80vh\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n\nclass MyMap3 extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    var myChart = echarts.init(document.getElementById('echartsmap'));\n    myChart.showLoading();\n    myChart.hideLoading();\n    echarts.registerMap('China', geoJson);\n    let option = {\n      title: {\n        text: '中国疫情图',\n        subtext: '数据来自163',\n        sublink: 'https://c.m.163.com/ug/api/wuhan/app/index/feiyan-data-list'\n      },\n      dataRange: {\n        //分段标色\n        x: 'left',\n        y: 'center',\n        splitList: [{\n          start: 2000,\n          label: '2000以上',\n          color: 'rgb(50,0,50)'\n        }, {\n          start: 1000,\n          end: 2000,\n          label: '1000-2000',\n          color: \"rgb(100,50,30)\"\n        }, {\n          start: 500,\n          end: 1000,\n          label: '500-1000',\n          color: ' rgb(200,50,100)'\n        }, {\n          start: 200,\n          end: 500,\n          label: '200-500',\n          color: 'rgb(200,100,100)'\n        }, {\n          start: 50,\n          end: 200,\n          label: '50-200',\n          color: ' rgb(255,100,100)'\n        }, {\n          start: 10,\n          end: 50,\n          label: '10-50',\n          color: 'rgb(255,255,100)'\n        }, {\n          start: 1,\n          end: 10,\n          label: '0-10',\n          color: ' rgb(255,255,200)'\n        }, {\n          start: 0,\n          end: 1,\n          label: '0',\n          color: ' rgb(255,255,255)'\n        }]\n      },\n      tooltip: {},\n      toolbox: {\n        show: true,\n        orient: 'vertical',\n        left: 'right',\n        top: 'center',\n        feature: {\n          dataView: {\n            readOnly: false\n          },\n          restore: {},\n          saveAsImage: {}\n        }\n      },\n      series: [{\n        name: '确诊',\n        type: 'map',\n        mapType: 'china',\n        // 自定义扩展图表类型\n        label: {\n          show: true\n        },\n        data: this.props.map\n      }]\n    };\n    myChart.setOption(option);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"echartsmap\",\n      style: {\n        width: '80vw',\n        height: \"80vh\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default MyMap3;","map":{"version":3,"sources":["E:/frontend/src/echarts/MyMap3.jsx"],"names":["React","ReactDOM","jsonData","echarts","geoJson","provincesObj","data","list","map","item","province","confirm","heal","dead","prok","key","push","sort","a","b","console","log","Date","timestamp","toLocaleString","num","name","value","Blist","Component","constructor","props","render","index","EchartsTest","componentDidMount","myChart","init","document","getElementById","setOption","title","text","tooltip","xAxis","yAxis","series","type","width","height","MyMap3","showLoading","hideLoading","registerMap","option","subtext","sublink","dataRange","x","y","splitList","start","label","color","end","toolbox","show","orient","left","top","feature","dataView","readOnly","restore","saveAsImage","mapType"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport jsonData from './feiyan-data-list.json'//https://c.m.163.com/ug/api/wuhan/app/index/feiyan-data-list\r\n\r\n\r\n\r\nimport * as echarts from 'echarts';\r\nimport '.China.json';\r\nimport geoJson from 'echarts/map/json/china.json';\r\nimport 'echarts/lib/chart/bar';\r\nimport 'echarts/lib/component/tooltip';\r\nimport 'echarts/lib/component/title';\r\n\r\nlet provincesObj=[];\r\njsonData.data.list.map((item)=>{\r\n  if(!provincesObj[item.province])\r\n  provincesObj[item.province]={\r\n    'province':item.province,\r\n    \"confirm\":0,\r\n    \"heal\":0,\r\n    \"dead\":0,\r\n  };\r\n  provincesObj[item.province].confirm+=item.confirm;\r\n  provincesObj[item.province].heal+=item.heal;\r\n  provincesObj[item.province].dead+=item.dead;\r\n})\r\nlet prok=[];\r\n\r\nfor(let key in provincesObj){\r\n  prok.push(provincesObj[key]);\r\n  \r\n}\r\nprok.sort((a,b)=>b.confirm-a.confirm)\r\nconsole.log(new Date(jsonData.timestamp).toLocaleString(),'二月份的数据（数据不全已废弃）')\r\nconsole.log(prok)\r\n\r\nlet province=[];\r\nlet num=[];\r\nlet map=[];\r\nprok.map((item)=>{\r\n    province.push(item.province)\r\n    num.push(item.confirm)\r\n    map.push({name:item.province,value:item.confirm})\r\n})\r\nclass Blist  extends React.Component{\r\n  constructor(props){\r\n      super(props)\r\n  }\r\n  render(){\r\n      return (\r\n          <div>\r\n              <h1>中国病例</h1>\r\n              <ul>\r\n                  <li>\r\n                      <span>地区</span>\r\n                      <span>确诊</span>\r\n                      <span>死亡</span>\r\n                      <span>治愈</span>\r\n                  </li>\r\n\r\n                  {\r\n                      this.props.list.map((item,index)=>{\r\n                          return (\r\n                              <li key={index}>\r\n                                  <span>{item.province}</span>\r\n                                  <span>{item.confirm}</span>\r\n                                  <span>{item.dead}</span>\r\n                                  <span>{item.heal}</span>\r\n                              </li> \r\n                          )\r\n                      })\r\n                  }\r\n              </ul>\r\n          </div>\r\n      )\r\n  }\r\n}\r\nclass EchartsTest extends React.Component {\r\n  componentDidMount() {\r\n      // 基于准备好的dom，初始化echarts实例\r\n      var myChart = echarts.init(document.getElementById('echarts'));\r\n      // 绘制图表\r\n      myChart.setOption({\r\n          title: { text: 'ECharts 中国疫情' },\r\n          tooltip: {},\r\n          xAxis: {\r\n              data: province\r\n          },\r\n          yAxis: {},\r\n          series: [{\r\n              name: '确诊',\r\n              type: 'bar',\r\n              data: num\r\n          }]\r\n      });\r\n  }\r\n  render() {\r\n      return (\r\n          <div id=\"echarts\" style={{ width: '80vw', height: \"80vh\" }}></div>\r\n      );\r\n  }\r\n}\r\nclass MyMap3 extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n    componentDidMount(){\r\n        var myChart = echarts.init(document.getElementById('echartsmap'));\r\n        myChart.showLoading();\r\n        myChart.hideLoading();\r\n        echarts.registerMap('China', geoJson);\r\n        let option={\r\n            title: {\r\n                text: '中国疫情图',\r\n                subtext: '数据来自163',\r\n                sublink: 'https://c.m.163.com/ug/api/wuhan/app/index/feiyan-data-list'\r\n            },\r\n            dataRange: {//分段标色\r\n                x: 'left',\r\n                y: 'center',\r\n                splitList: [\r\n                {start: 2000, label: '2000以上', color: 'rgb(50,0,50)'},\r\n                {start: 1000, end: 2000, label: '1000-2000', color: \"rgb(100,50,30)\"},\r\n                {start: 500, end: 1000, label: '500-1000', color:' rgb(200,50,100)'},\r\n                {start: 200, end: 500, label: '200-500', color: 'rgb(200,100,100)'},\r\n                {start: 50, end: 200, label: '50-200', color:' rgb(255,100,100)'},\r\n                {start: 10, end: 50, label: '10-50', color: 'rgb(255,255,100)'},\r\n                {start: 1, end: 10, label: '0-10', color:' rgb(255,255,200)'},\r\n                {start: 0, end: 1, label: '0', color:' rgb(255,255,255)'}\r\n                ]},\r\n            tooltip: {},\r\n            toolbox: {\r\n                show: true,\r\n                orient: 'vertical',\r\n                left: 'right',\r\n                top: 'center',\r\n                feature: {\r\n                    dataView: {readOnly: false},\r\n                    restore: {},\r\n                    saveAsImage: {}\r\n                }\r\n            },\r\n            series: [\r\n                {\r\n                    name: '确诊',\r\n                    type: 'map',\r\n                    mapType: 'china', // 自定义扩展图表类型\r\n                    label: {\r\n                        show: true\r\n                    },\r\n                    data: this.props.map\r\n                }\r\n            ]\r\n        };\r\n        myChart.setOption(option);\r\n    \r\n    }\r\n    render() {\r\n        return (\r\n            <div id=\"echartsmap\" style={{ width: '80vw', height: \"80vh\" }}></div>\r\n        );\r\n    }\r\n}\r\nexport default MyMap3;"]},"metadata":{},"sourceType":"module"}