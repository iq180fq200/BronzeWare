{"ast":null,"code":"/*\n * The Original Code is Mozilla Universal charset detector code.\n *\n * The Initial Developer of the Original Code is\n * Netscape Communications Corporation.\n * Portions created by the Initial Developer are Copyright (C) 2001\n * the Initial Developer. All Rights Reserved.\n *\n * Contributor(s):\n *   Ant√≥nio Afonso (antonio.afonso gmail.com) - port to JavaScript\n *   Mark Pilgrim - port to Python\n *   Shy Shalom - original C code\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301  USA\n */\nvar CharSetProber = require('./charsetprober');\n\nvar Constants = require('./constants');\n\nvar UDF = 0; // undefined\n\nvar OTH = 1; // other\n\nvar ASC = 2; // ascii capital letter\n\nvar ASS = 3; // ascii small letter\n\nvar ACV = 4; // accent capital vowel\n\nvar ACO = 5; // accent capital other\n\nvar ASV = 6; // accent small vowel\n\nvar ASO = 7; // accent small other\n\nvar Latin1_CharToClass = [OTH, OTH, OTH, OTH, OTH, OTH, OTH, OTH, // 00 - 07\nOTH, OTH, OTH, OTH, OTH, OTH, OTH, OTH, // 08 - 0F\nOTH, OTH, OTH, OTH, OTH, OTH, OTH, OTH, // 10 - 17\nOTH, OTH, OTH, OTH, OTH, OTH, OTH, OTH, // 18 - 1F\nOTH, OTH, OTH, OTH, OTH, OTH, OTH, OTH, // 20 - 27\nOTH, OTH, OTH, OTH, OTH, OTH, OTH, OTH, // 28 - 2F\nOTH, OTH, OTH, OTH, OTH, OTH, OTH, OTH, // 30 - 37\nOTH, OTH, OTH, OTH, OTH, OTH, OTH, OTH, // 38 - 3F\nOTH, ASC, ASC, ASC, ASC, ASC, ASC, ASC, // 40 - 47\nASC, ASC, ASC, ASC, ASC, ASC, ASC, ASC, // 48 - 4F\nASC, ASC, ASC, ASC, ASC, ASC, ASC, ASC, // 50 - 57\nASC, ASC, ASC, OTH, OTH, OTH, OTH, OTH, // 58 - 5F\nOTH, ASS, ASS, ASS, ASS, ASS, ASS, ASS, // 60 - 67\nASS, ASS, ASS, ASS, ASS, ASS, ASS, ASS, // 68 - 6F\nASS, ASS, ASS, ASS, ASS, ASS, ASS, ASS, // 70 - 77\nASS, ASS, ASS, OTH, OTH, OTH, OTH, OTH, // 78 - 7F\nOTH, UDF, OTH, ASO, OTH, OTH, OTH, OTH, // 80 - 87\nOTH, OTH, ACO, OTH, ACO, UDF, ACO, UDF, // 88 - 8F\nUDF, OTH, OTH, OTH, OTH, OTH, OTH, OTH, // 90 - 97\nOTH, OTH, ASO, OTH, ASO, UDF, ASO, ACO, // 98 - 9F\nOTH, OTH, OTH, OTH, OTH, OTH, OTH, OTH, // A0 - A7\nOTH, OTH, OTH, OTH, OTH, OTH, OTH, OTH, // A8 - AF\nOTH, OTH, OTH, OTH, OTH, OTH, OTH, OTH, // B0 - B7\nOTH, OTH, OTH, OTH, OTH, OTH, OTH, OTH, // B8 - BF\nACV, ACV, ACV, ACV, ACV, ACV, ACO, ACO, // C0 - C7\nACV, ACV, ACV, ACV, ACV, ACV, ACV, ACV, // C8 - CF\nACO, ACO, ACV, ACV, ACV, ACV, ACV, OTH, // D0 - D7\nACV, ACV, ACV, ACV, ACV, ACO, ACO, ACO, // D8 - DF\nASV, ASV, ASV, ASV, ASV, ASV, ASO, ASO, // E0 - E7\nASV, ASV, ASV, ASV, ASV, ASV, ASV, ASV, // E8 - EF\nASO, ASO, ASV, ASV, ASV, ASV, ASV, OTH, // F0 - F7\nASV, ASV, ASV, ASV, ASV, ASO, ASO, ASO // F8 - FF\n]; // 0 : illegal\n// 1 : very unlikely\n// 2 : normal\n// 3 : very likely\n\nvar Latin1ClassModel = [// UDF OTH ASC ASS ACV ACO ASV ASO\n0, 0, 0, 0, 0, 0, 0, 0, // UDF\n0, 3, 3, 3, 3, 3, 3, 3, // OTH\n0, 3, 3, 3, 3, 3, 3, 3, // ASC\n0, 3, 3, 3, 1, 1, 3, 3, // ASS\n0, 3, 3, 3, 1, 2, 1, 2, // ACV\n0, 3, 3, 3, 3, 3, 3, 3, // ACO\n0, 3, 1, 3, 1, 1, 1, 3, // ASV\n0, 3, 1, 3, 1, 1, 3, 3 // ASO\n];\n\nfunction Latin1Prober() {\n  CharSetProber.apply(this);\n  var FREQ_CAT_NUM = 4;\n  var CLASS_NUM = 8; // total classes\n\n  var self = this;\n\n  function init() {\n    self.reset();\n  }\n\n  this.reset = function () {\n    this._mLastCharClass = OTH;\n    this._mFreqCounter = [];\n\n    for (var i = 0; i < FREQ_CAT_NUM; this._mFreqCounter[i++] = 0);\n\n    Latin1Prober.prototype.reset.apply(this);\n  };\n\n  this.getCharsetName = function () {\n    return \"windows-1252\";\n  };\n\n  this.feed = function (aBuf) {\n    aBuf = this.filterWithEnglishLetters(aBuf);\n\n    for (var i = 0; i < aBuf.length; i++) {\n      var c = aBuf.charCodeAt(i);\n      var charClass = Latin1_CharToClass[c];\n      var freq = Latin1ClassModel[this._mLastCharClass * CLASS_NUM + charClass];\n\n      if (freq == 0) {\n        this._mState = Constants.notMe;\n        break;\n      }\n\n      this._mFreqCounter[freq]++;\n      this._mLastCharClass = charClass;\n    }\n\n    return this.getState();\n  };\n\n  this.getConfidence = function () {\n    var confidence;\n    var constants;\n\n    if (this.getState() == Constants.notMe) {\n      return 0.01;\n    }\n\n    var total = 0;\n\n    for (var i = 0; i < this._mFreqCounter.length; i++) {\n      total += this._mFreqCounter[i];\n    }\n\n    if (total < 0.01) {\n      constants = 0.0;\n    } else {\n      confidence = this._mFreqCounter[3] / total - this._mFreqCounter[1] * 20 / total;\n    }\n\n    if (confidence < 0) {\n      confidence = 0.0;\n    } // lower the confidence of latin1 so that other more accurate detector\n    // can take priority.\n    //\n    // antonio.afonso: need to change this otherwise languages like pt, es, fr using latin1 will never be detected.\n\n\n    confidence = confidence * 0.95;\n    return confidence;\n  };\n\n  init();\n}\n\nLatin1Prober.prototype = new CharSetProber();\nmodule.exports = Latin1Prober;","map":{"version":3,"sources":["E:/flaskProject/frontend/node_modules/jschardet/src/latin1prober.js"],"names":["CharSetProber","require","Constants","UDF","OTH","ASC","ASS","ACV","ACO","ASV","ASO","Latin1_CharToClass","Latin1ClassModel","Latin1Prober","apply","FREQ_CAT_NUM","CLASS_NUM","self","init","reset","_mLastCharClass","_mFreqCounter","i","prototype","getCharsetName","feed","aBuf","filterWithEnglishLetters","length","c","charCodeAt","charClass","freq","_mState","notMe","getState","getConfidence","confidence","constants","total","module","exports"],"mappings":"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","sourcesContent":["/*\n * The Original Code is Mozilla Universal charset detector code.\n *\n * The Initial Developer of the Original Code is\n * Netscape Communications Corporation.\n * Portions created by the Initial Developer are Copyright (C) 2001\n * the Initial Developer. All Rights Reserved.\n *\n * Contributor(s):\n *   Ant√≥nio Afonso (antonio.afonso gmail.com) - port to JavaScript\n *   Mark Pilgrim - port to Python\n *   Shy Shalom - original C code\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301  USA\n */\n\nvar CharSetProber = require('./charsetprober');\nvar Constants = require('./constants');\n\nvar UDF = 0; // undefined\nvar OTH = 1; // other\nvar ASC = 2; // ascii capital letter\nvar ASS = 3; // ascii small letter\nvar ACV = 4; // accent capital vowel\nvar ACO = 5; // accent capital other\nvar ASV = 6; // accent small vowel\nvar ASO = 7; // accent small other\n\nvar Latin1_CharToClass = [\n  OTH, OTH, OTH, OTH, OTH, OTH, OTH, OTH,   // 00 - 07\n  OTH, OTH, OTH, OTH, OTH, OTH, OTH, OTH,   // 08 - 0F\n  OTH, OTH, OTH, OTH, OTH, OTH, OTH, OTH,   // 10 - 17\n  OTH, OTH, OTH, OTH, OTH, OTH, OTH, OTH,   // 18 - 1F\n  OTH, OTH, OTH, OTH, OTH, OTH, OTH, OTH,   // 20 - 27\n  OTH, OTH, OTH, OTH, OTH, OTH, OTH, OTH,   // 28 - 2F\n  OTH, OTH, OTH, OTH, OTH, OTH, OTH, OTH,   // 30 - 37\n  OTH, OTH, OTH, OTH, OTH, OTH, OTH, OTH,   // 38 - 3F\n  OTH, ASC, ASC, ASC, ASC, ASC, ASC, ASC,   // 40 - 47\n  ASC, ASC, ASC, ASC, ASC, ASC, ASC, ASC,   // 48 - 4F\n  ASC, ASC, ASC, ASC, ASC, ASC, ASC, ASC,   // 50 - 57\n  ASC, ASC, ASC, OTH, OTH, OTH, OTH, OTH,   // 58 - 5F\n  OTH, ASS, ASS, ASS, ASS, ASS, ASS, ASS,   // 60 - 67\n  ASS, ASS, ASS, ASS, ASS, ASS, ASS, ASS,   // 68 - 6F\n  ASS, ASS, ASS, ASS, ASS, ASS, ASS, ASS,   // 70 - 77\n  ASS, ASS, ASS, OTH, OTH, OTH, OTH, OTH,   // 78 - 7F\n  OTH, UDF, OTH, ASO, OTH, OTH, OTH, OTH,   // 80 - 87\n  OTH, OTH, ACO, OTH, ACO, UDF, ACO, UDF,   // 88 - 8F\n  UDF, OTH, OTH, OTH, OTH, OTH, OTH, OTH,   // 90 - 97\n  OTH, OTH, ASO, OTH, ASO, UDF, ASO, ACO,   // 98 - 9F\n  OTH, OTH, OTH, OTH, OTH, OTH, OTH, OTH,   // A0 - A7\n  OTH, OTH, OTH, OTH, OTH, OTH, OTH, OTH,   // A8 - AF\n  OTH, OTH, OTH, OTH, OTH, OTH, OTH, OTH,   // B0 - B7\n  OTH, OTH, OTH, OTH, OTH, OTH, OTH, OTH,   // B8 - BF\n  ACV, ACV, ACV, ACV, ACV, ACV, ACO, ACO,   // C0 - C7\n  ACV, ACV, ACV, ACV, ACV, ACV, ACV, ACV,   // C8 - CF\n  ACO, ACO, ACV, ACV, ACV, ACV, ACV, OTH,   // D0 - D7\n  ACV, ACV, ACV, ACV, ACV, ACO, ACO, ACO,   // D8 - DF\n  ASV, ASV, ASV, ASV, ASV, ASV, ASO, ASO,   // E0 - E7\n  ASV, ASV, ASV, ASV, ASV, ASV, ASV, ASV,   // E8 - EF\n  ASO, ASO, ASV, ASV, ASV, ASV, ASV, OTH,   // F0 - F7\n  ASV, ASV, ASV, ASV, ASV, ASO, ASO, ASO    // F8 - FF\n];\n\n// 0 : illegal\n// 1 : very unlikely\n// 2 : normal\n// 3 : very likely\nvar Latin1ClassModel = [\n// UDF OTH ASC ASS ACV ACO ASV ASO\n   0,  0,  0,  0,  0,  0,  0,  0,  // UDF\n   0,  3,  3,  3,  3,  3,  3,  3,  // OTH\n   0,  3,  3,  3,  3,  3,  3,  3,  // ASC\n   0,  3,  3,  3,  1,  1,  3,  3,  // ASS\n   0,  3,  3,  3,  1,  2,  1,  2,  // ACV\n   0,  3,  3,  3,  3,  3,  3,  3,  // ACO\n   0,  3,  1,  3,  1,  1,  1,  3,  // ASV\n   0,  3,  1,  3,  1,  1,  3,  3   // ASO\n];\n\nfunction Latin1Prober() {\n    CharSetProber.apply(this);\n\n    var FREQ_CAT_NUM = 4;\n    var CLASS_NUM = 8; // total classes\n    var self = this;\n\n    function init() {\n        self.reset();\n    }\n\n    this.reset = function() {\n        this._mLastCharClass = OTH;\n        this._mFreqCounter = [];\n        for( var i = 0; i < FREQ_CAT_NUM; this._mFreqCounter[i++] = 0 );\n        Latin1Prober.prototype.reset.apply(this);\n    }\n\n    this.getCharsetName = function() {\n        return \"windows-1252\";\n    }\n\n    this.feed = function(aBuf) {\n        aBuf = this.filterWithEnglishLetters(aBuf);\n        for( var i = 0; i < aBuf.length; i++ ) {\n            var c = aBuf.charCodeAt(i);\n            var charClass = Latin1_CharToClass[c];\n            var freq = Latin1ClassModel[(this._mLastCharClass * CLASS_NUM) + charClass];\n            if( freq == 0 ) {\n                this._mState = Constants.notMe;\n                break;\n            }\n            this._mFreqCounter[freq]++;\n            this._mLastCharClass = charClass;\n        }\n\n        return this.getState();\n    }\n\n    this.getConfidence = function() {\n        var confidence;\n        var constants;\n\n        if( this.getState() == Constants.notMe ) {\n            return 0.01;\n        }\n\n        var total = 0;\n        for( var i = 0; i < this._mFreqCounter.length; i++ ) {\n            total += this._mFreqCounter[i];\n        }\n        if( total < 0.01 ) {\n            constants = 0.0;\n        } else {\n            confidence = (this._mFreqCounter[3] / total) - (this._mFreqCounter[1] * 20 / total);\n        }\n        if( confidence < 0 ) {\n            confidence = 0.0;\n        }\n        // lower the confidence of latin1 so that other more accurate detector\n        // can take priority.\n        //\n        // antonio.afonso: need to change this otherwise languages like pt, es, fr using latin1 will never be detected.\n        confidence = confidence * 0.95;\n        return confidence;\n    }\n\n    init();\n}\nLatin1Prober.prototype = new CharSetProber();\n\nmodule.exports = Latin1Prober\n"]},"metadata":{},"sourceType":"script"}