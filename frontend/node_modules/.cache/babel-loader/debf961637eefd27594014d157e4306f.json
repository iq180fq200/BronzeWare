{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['exports', 'echarts'], factory);\n  } else if (typeof exports === 'object' && typeof exports.nodeName !== 'string') {\n    // CommonJS\n    factory(exports, require('echarts/lib/echarts'));\n  } else {\n    // Browser globals\n    factory({}, root.echarts);\n  }\n})(this, function (exports, echarts) {\n  /**\n   * Language: Français.\n   */\n  var localeObj = {\n    time: {\n      month: ['Janvier', 'Février', 'Mars', 'Avril', 'Mai', 'Juin', 'Juillet', 'Août', 'Septembre', 'Octobre', 'Novembre', 'Décembre'],\n      monthAbbr: ['Jan', 'Fév', 'Mars', 'Avr', 'Mai', 'Juin', 'Juil', 'Août', 'Sept', 'Oct', 'Nov', 'Déc'],\n      dayOfWeek: ['Dimanche', 'Lundi', 'Mardi', 'Mercredi', 'Jeudi', 'Vendredi', 'Samedi'],\n      dayOfWeekAbbr: ['Dim', 'Lun', 'Mar', 'Mer', 'Jeu', 'Ven', 'Sam']\n    },\n    legend: {\n      selector: {\n        all: 'Tout',\n        inverse: 'Inverse'\n      }\n    },\n    toolbox: {\n      brush: {\n        title: {\n          rect: 'Sélection rectangulaire',\n          polygon: 'Sélection au lasso',\n          lineX: 'Sélectionner horizontalement',\n          lineY: 'Sélectionner verticalement',\n          keep: 'Garder la sélection',\n          clear: 'Effacer la sélection'\n        }\n      },\n      dataView: {\n        title: 'Visualisation des données',\n        lang: ['Visualisation des données', 'Fermer', 'Rafraîchir']\n      },\n      dataZoom: {\n        title: {\n          zoom: 'Zoom',\n          back: 'Zoom Remise à zéro'\n        }\n      },\n      magicType: {\n        title: {\n          line: 'Changer pour Ligne',\n          bar: 'Changer pour Histogramme',\n          stack: 'Superposition',\n          tiled: 'Tuile'\n        }\n      },\n      restore: {\n        title: 'Restaurer'\n      },\n      saveAsImage: {\n        title: 'Sauvegarder l\\'image',\n        lang: ['Clic droit pour sauvegarder l\\'image']\n      }\n    },\n    series: {\n      typeNames: {\n        pie: 'Camembert',\n        bar: 'Histogramme',\n        line: 'Ligne',\n        scatter: 'Nuage de points',\n        effectScatter: 'Nuage de points stylisé',\n        radar: 'Radar',\n        tree: 'Arbre',\n        treemap: 'Treemap',\n        boxplot: 'Boîte à moustaches',\n        candlestick: 'Chandelier',\n        k: 'Linéaire K',\n        heatmap: 'Carte de fréquentation',\n        map: 'Carte',\n        parallel: 'Données parallèles',\n        lines: 'Lignes',\n        graph: 'Graphe',\n        sankey: 'Sankey',\n        funnel: 'Entonnoir',\n        gauge: 'Jauge',\n        pictorialBar: 'Barres à images',\n        themeRiver: 'Stream Graph',\n        sunburst: 'Sunburst'\n      }\n    },\n    aria: {\n      general: {\n        withTitle: 'Cette carte est intitulée \"{title}\"',\n        withoutTitle: 'C\\'est une carte'\n      },\n      series: {\n        single: {\n          prefix: '',\n          withName: ' Avec le type de {seriesType} qui s\\'appelle {seriesName}.',\n          withoutName: ' Avec le type de {seriesType}.'\n        },\n        multiple: {\n          prefix: ' Elle comprend {seriesCount} séries.',\n          withName: ' La série {seriesId} représente {seriesName} de {seriesType}.',\n          withoutName: ' La série {seriesId} est un/une {seriesType}.',\n          separator: {\n            middle: '',\n            end: ''\n          }\n        }\n      },\n      data: {\n        allData: 'Les données sont: ',\n        partialData: 'Les premiers {displayCnt} éléments sont : ',\n        withName: 'Les données pour {name} sont {value}',\n        withoutName: '{value}',\n        separator: {\n          middle: ', ',\n          end: '. '\n        }\n      }\n    }\n  };\n  echarts.registerLocale('FR', localeObj);\n});","map":{"version":3,"sources":["D:/test/frontend/node_modules/echarts/i18n/langFR.js"],"names":["root","factory","define","amd","exports","nodeName","require","echarts","localeObj","time","month","monthAbbr","dayOfWeek","dayOfWeekAbbr","legend","selector","all","inverse","toolbox","brush","title","rect","polygon","lineX","lineY","keep","clear","dataView","lang","dataZoom","zoom","back","magicType","line","bar","stack","tiled","restore","saveAsImage","series","typeNames","pie","scatter","effectScatter","radar","tree","treemap","boxplot","candlestick","k","heatmap","map","parallel","lines","graph","sankey","funnel","gauge","pictorialBar","themeRiver","sunburst","aria","general","withTitle","withoutTitle","single","prefix","withName","withoutName","multiple","separator","middle","end","data","allData","partialData","registerLocale"],"mappings":"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","sourcesContent":["\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n(function(root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        define(['exports', 'echarts'], factory);\n    } else if (\n        typeof exports === 'object' &&\n        typeof exports.nodeName !== 'string'\n    ) {\n        // CommonJS\n        factory(exports, require('echarts/lib/echarts'));\n    } else {\n        // Browser globals\n        factory({}, root.echarts);\n    }\n})(this, function(exports, echarts) {\n\n\n/**\n * Language: Français.\n */\n\nvar localeObj = {\n    time: {\n        month: [\n            'Janvier', 'Février', 'Mars', 'Avril', 'Mai', 'Juin',\n            'Juillet', 'Août', 'Septembre', 'Octobre', 'Novembre', 'Décembre'\n        ],\n        monthAbbr: [\n            'Jan', 'Fév', 'Mars', 'Avr', 'Mai', 'Juin',\n            'Juil', 'Août', 'Sept', 'Oct', 'Nov', 'Déc'\n        ],\n        dayOfWeek: [\n            'Dimanche', 'Lundi', 'Mardi', 'Mercredi', 'Jeudi', 'Vendredi', 'Samedi'\n        ],\n        dayOfWeekAbbr: [\n            'Dim', 'Lun', 'Mar', 'Mer', 'Jeu', 'Ven', 'Sam'\n        ]\n    },\n    legend: {\n        selector: {\n            all: 'Tout',\n            inverse: 'Inverse'\n        }\n    },\n    toolbox: {\n        brush: {\n            title: {\n                rect: 'Sélection rectangulaire',\n                polygon: 'Sélection au lasso',\n                lineX: 'Sélectionner horizontalement',\n                lineY: 'Sélectionner verticalement',\n                keep: 'Garder la sélection',\n                clear: 'Effacer la sélection'\n            }\n        },\n        dataView: {\n            title: 'Visualisation des données',\n            lang: ['Visualisation des données', 'Fermer', 'Rafraîchir']\n        },\n        dataZoom: {\n            title: {\n                zoom: 'Zoom',\n                back: 'Zoom Remise à zéro'\n            }\n        },\n        magicType: {\n            title: {\n                line: 'Changer pour Ligne',\n                bar: 'Changer pour Histogramme',\n                stack: 'Superposition',\n                tiled: 'Tuile'\n            }\n        },\n        restore: {\n            title: 'Restaurer'\n        },\n        saveAsImage: {\n            title: 'Sauvegarder l\\'image',\n            lang: ['Clic droit pour sauvegarder l\\'image']\n        }\n    },\n    series: {\n        typeNames: {\n            pie: 'Camembert',\n            bar: 'Histogramme',\n            line: 'Ligne',\n            scatter: 'Nuage de points',\n            effectScatter: 'Nuage de points stylisé',\n            radar: 'Radar',\n            tree: 'Arbre',\n            treemap: 'Treemap',\n            boxplot: 'Boîte à moustaches',\n            candlestick: 'Chandelier',\n            k: 'Linéaire K',\n            heatmap: 'Carte de fréquentation',\n            map: 'Carte',\n            parallel: 'Données parallèles',\n            lines: 'Lignes',\n            graph: 'Graphe',\n            sankey: 'Sankey',\n            funnel: 'Entonnoir',\n            gauge: 'Jauge',\n            pictorialBar: 'Barres à images',\n            themeRiver: 'Stream Graph',\n            sunburst: 'Sunburst'\n        }\n    },\n    aria: {\n        general: {\n            withTitle: 'Cette carte est intitulée \"{title}\"',\n            withoutTitle: 'C\\'est une carte'\n        },\n        series: {\n            single: {\n                prefix: '',\n                withName: ' Avec le type de {seriesType} qui s\\'appelle {seriesName}.',\n                withoutName: ' Avec le type de {seriesType}.'\n            },\n            multiple: {\n                prefix: ' Elle comprend {seriesCount} séries.',\n                withName: ' La série {seriesId} représente {seriesName} de {seriesType}.',\n                withoutName: ' La série {seriesId} est un/une {seriesType}.',\n                separator: {\n                    middle: '',\n                    end: ''\n                }\n            }\n        },\n        data: {\n            allData: 'Les données sont: ',\n            partialData: 'Les premiers {displayCnt} éléments sont : ',\n            withName: 'Les données pour {name} sont {value}',\n            withoutName: '{value}',\n            separator: {\n                middle: ', ',\n                end: '. '\n            }\n        }\n    }\n};\n\n    echarts.registerLocale('FR', localeObj);\n        \n});"]},"metadata":{},"sourceType":"script"}